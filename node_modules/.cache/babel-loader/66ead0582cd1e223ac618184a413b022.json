{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\src\\\\components\\\\Toggle\\\\index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst ToggleElement = styled.span`\n  padding: 0.25rem 0.5rem;\n  border-radius: 14px;\n  background: ${({\n  theme,\n  isActive,\n  isOnSwitch\n}) => isActive ? isOnSwitch ? theme.primary1 : theme.text4 : 'none'};\n  color: ${({\n  theme,\n  isActive,\n  isOnSwitch\n}) => isActive ? isOnSwitch ? theme.white : theme.text2 : theme.text3};\n  font-size: 0.825rem;\n  font-weight: 400;\n`;\nconst StyledToggle = styled.button`\n  border-radius: 16px;\n  border: 1px solid ${({\n  theme,\n  isActive\n}) => isActive ? theme.primary5 : theme.text4};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0;\n  background-color: transparent;\n`;\nexport default function Toggle({\n  id,\n  isActive,\n  toggle\n}) {\n  return /*#__PURE__*/React.createElement(StyledToggle, {\n    id: id,\n    isActive: isActive,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToggleElement, {\n    isActive: isActive,\n    isOnSwitch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"On\"), /*#__PURE__*/React.createElement(ToggleElement, {\n    isActive: !isActive,\n    isOnSwitch: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Off\"));\n}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/components/Toggle/index.tsx"],"names":["React","styled","ToggleElement","span","theme","isActive","isOnSwitch","primary1","text4","white","text2","text3","StyledToggle","button","primary5","Toggle","id","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,IAAmD;AAChF;AACA;AACA,gBAAgB,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAsCD,QAAQ,GAAIC,UAAU,GAAGF,KAAK,CAACG,QAAT,GAAoBH,KAAK,CAACI,KAAxC,GAAiD,MAAQ;AACvH,WAAW,CAAC;AAAEJ,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAsCD,QAAQ,GAAIC,UAAU,GAAGF,KAAK,CAACK,KAAT,GAAiBL,KAAK,CAACM,KAArC,GAA8CN,KAAK,CAACO,KAAO;AACpH;AACA;AACA,CAPA;AASA,MAAMC,YAAY,GAAGX,MAAM,CAACY,MAAwD;AACpF;AACA,sBAAsB,CAAC;AAAET,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA0BA,QAAQ,GAAGD,KAAK,CAACU,QAAT,GAAoBV,KAAK,CAACI,KAAO;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAiBA,eAAe,SAASO,MAAT,CAAgB;AAAEC,EAAAA,EAAF;AAAMX,EAAAA,QAAN;AAAgBY,EAAAA;AAAhB,CAAhB,EAAuD;AACpE,sBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAED,EAAlB;AAAsB,IAAA,QAAQ,EAAEX,QAAhC;AAA0C,IAAA,OAAO,EAAEY,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEZ,QAAzB;AAAmC,IAAA,UAAU,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAIE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAE,CAACA,QAA1B;AAAoC,IAAA,UAAU,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CADF;AAUD","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ToggleElement = styled.span<{ isActive?: boolean; isOnSwitch?: boolean }>`\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 14px;\r\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\r\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\r\n  font-size: 0.825rem;\r\n  font-weight: 400;\r\n`\r\n\r\nconst StyledToggle = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\r\n  border-radius: 16px;\r\n  border: 1px solid ${({ theme, isActive }) => (isActive ? theme.primary5 : theme.text4)};\r\n  display: flex;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n`\r\n\r\nexport interface ToggleProps {\r\n  id?: string\r\n  isActive: boolean\r\n  toggle: () => void\r\n}\r\n\r\nexport default function Toggle({ id, isActive, toggle }: ToggleProps) {\r\n  return (\r\n    <StyledToggle id={id} isActive={isActive} onClick={toggle}>\r\n      <ToggleElement isActive={isActive} isOnSwitch={true}>\r\n        On\r\n      </ToggleElement>\r\n      <ToggleElement isActive={!isActive} isOnSwitch={false}>\r\n        Off\r\n      </ToggleElement>\r\n    </StyledToggle>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}