{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useRef}from'react';import{Code,MessageCircle,Home}from'react-feather';import styled from'styled-components';import{ReactComponent as MenuIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/menu.svg\";import{useOnClickOutside}from'../../hooks/useOnClickOutside';import useToggle from'../../hooks/useToggle';import{useTranslation}from'react-i18next';import{ExternalLink}from'../../theme';var StyledMenuIcon=styled(MenuIcon)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  path {\\n    stroke: \",\";\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.text1;});var StyledMenuButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  border: none;\\n  background-color: transparent;\\n  margin: 0;\\n  padding: 0;\\n  height: 35px;\\n  background-color: \",\";\\n\\n  padding: 0.15rem 0.5rem;\\n  border-radius: 0.5rem;\\n\\n  :hover,\\n  :focus {\\n    cursor: pointer;\\n    outline: none;\\n    background-color: \",\";\\n  }\\n\\n  svg {\\n    margin-top: 2px;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.bg3;},function(_ref3){var theme=_ref3.theme;return theme.bg4;});var StyledMenu=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-left: 0.5rem;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: relative;\\n  border: none;\\n  text-align: left;\\n\"])));var MenuFlyout=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  min-width: 8.125rem;\\n  background-color: \",\";\\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\\n    0px 24px 32px rgba(0, 0, 0, 0.01);\\n  border-radius: 0.5rem;\\n  padding: 0.5rem;\\n  display: flex;\\n  flex-direction: column;\\n  font-size: 1rem;\\n  position: absolute;\\n  top: 3rem;\\n  right: 0rem;\\n  z-index: 100;\\n\"])),function(_ref4){var theme=_ref4.theme;return theme.bg3;});var MenuItem=styled(ExternalLink)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 0.5rem 0.5rem;\\n  color: \",\";\\n  :hover {\\n    color: \",\";\\n    cursor: pointer;\\n    text-decoration: none;\\n  }\\n  > svg {\\n    margin-right: 8px;\\n  }\\n\"])),function(_ref5){var theme=_ref5.theme;return theme.text2;},function(_ref6){var theme=_ref6.theme;return theme.text1;});export default function Menu(){var node=useRef();var _useToggle=useToggle(false),_useToggle2=_slicedToArray(_useToggle,2),open=_useToggle2[0],toggle=_useToggle2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;useOnClickOutside(node,open?toggle:undefined);return/*#__PURE__*/React.createElement(StyledMenu,null,/*#__PURE__*/React.createElement(StyledMenuButton,{onClick:toggle},/*#__PURE__*/React.createElement(StyledMenuIcon,null)),open&&/*#__PURE__*/React.createElement(MenuFlyout,null,/*#__PURE__*/React.createElement(MenuItem,{id:\"link\",href:\"https://glmrapes.com/\"},/*#__PURE__*/React.createElement(Home,{size:14}),t('Website')),/*#__PURE__*/React.createElement(MenuItem,{id:\"link\",href:\"https://discord.gg/H9DH3z2bTV\"},/*#__PURE__*/React.createElement(MessageCircle,{size:14}),t('discord')),/*#__PURE__*/React.createElement(MenuItem,{id:\"link\",href:\"https://twitter.com/GLMRApes\"},/*#__PURE__*/React.createElement(Code,{size:14}),\"Twitter\")));}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/components/Menu/index.tsx"],"names":["React","useRef","Code","MessageCircle","Home","styled","useOnClickOutside","useToggle","useTranslation","ExternalLink","StyledMenuIcon","MenuIcon","theme","text1","StyledMenuButton","button","bg3","bg4","StyledMenu","div","MenuFlyout","span","MenuItem","text2","Menu","node","open","toggle","t","undefined"],"mappings":"0aAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,IAAT,CAAeC,aAAf,CAA8BC,IAA9B,KAA0C,eAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,yGAEA,OAASC,iBAAT,KAAkC,+BAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,OAASC,cAAT,KAA+B,eAA/B,CAEA,OAASC,YAAT,KAA6B,aAA7B,CAEA,GAAMC,CAAAA,cAAc,CAAGL,MAAM,CAACM,QAAD,CAAT,oGAEN,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,KAArB,EAFM,CAApB,CAMA,GAAMC,CAAAA,gBAAgB,CAAGT,MAAM,CAACU,MAAV,maAQA,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACI,GAArB,EARA,CAiBE,mBAAGJ,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACK,GAArB,EAjBF,CAAtB,CAyBA,GAAMC,CAAAA,UAAU,CAAGb,MAAM,CAACc,GAAV,gOAAhB,CAUA,GAAMC,CAAAA,UAAU,CAAGf,MAAM,CAACgB,IAAV,wcAEM,mBAAGT,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACI,GAArB,EAFN,CAAhB,CAgBA,GAAMM,CAAAA,QAAQ,CAAGjB,MAAM,CAACI,YAAD,CAAT,uPAGH,mBAAGG,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACW,KAArB,EAHG,CAKD,mBAAGX,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,KAArB,EALC,CAAd,CAcA,cAAe,SAASW,CAAAA,IAAT,EAAgB,CAC7B,GAAMC,CAAAA,IAAI,CAAGxB,MAAM,EAAnB,CACA,eAAuBM,SAAS,CAAC,KAAD,CAAhC,0CAAOmB,IAAP,gBAAaC,MAAb,gBACA,oBAAcnB,cAAc,EAA5B,CAAQoB,CAAR,iBAAQA,CAAR,CAEAtB,iBAAiB,CAACmB,IAAD,CAAOC,IAAI,CAAGC,MAAH,CAAYE,SAAvB,CAAjB,CAEA,mBACE,oBAAC,UAAD,mBACE,oBAAC,gBAAD,EAAkB,OAAO,CAAEF,MAA3B,eACE,oBAAC,cAAD,MADF,CADF,CAIGD,IAAI,eACH,oBAAC,UAAD,mBACE,oBAAC,QAAD,EAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,uBAAzB,eACE,oBAAC,IAAD,EAAM,IAAI,CAAE,EAAZ,EADF,CAEGE,CAAC,CAAC,SAAD,CAFJ,CADF,cAKE,oBAAC,QAAD,EAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,+BAAzB,eACE,oBAAC,aAAD,EAAe,IAAI,CAAE,EAArB,EADF,CAEGA,CAAC,CAAC,SAAD,CAFJ,CALF,cASE,oBAAC,QAAD,EAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,8BAAzB,eACE,oBAAC,IAAD,EAAM,IAAI,CAAE,EAAZ,EADF,WATF,CALJ,CADF,CAuBD","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Code, MessageCircle, Home } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport { ReactComponent as MenuIcon } from '../../assets/images/menu.svg'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { ExternalLink } from '../../theme'\r\n\r\nconst StyledMenuIcon = styled(MenuIcon)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.text1};\r\n  }\r\n`\r\n\r\nconst StyledMenuButton = styled.button`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  background-color: transparent;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n\r\n  padding: 0.15rem 0.5rem;\r\n  border-radius: 0.5rem;\r\n\r\n  :hover,\r\n  :focus {\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: ${({ theme }) => theme.bg4};\r\n  }\r\n\r\n  svg {\r\n    margin-top: 2px;\r\n  }\r\n`\r\n\r\nconst StyledMenu = styled.div`\r\n  margin-left: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border: none;\r\n  text-align: left;\r\n`\r\n\r\nconst MenuFlyout = styled.span`\r\n  min-width: 8.125rem;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  border-radius: 0.5rem;\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1rem;\r\n  position: absolute;\r\n  top: 3rem;\r\n  right: 0rem;\r\n  z-index: 100;\r\n`\r\n\r\nconst MenuItem = styled(ExternalLink)`\r\n  flex: 1;\r\n  padding: 0.5rem 0.5rem;\r\n  color: ${({ theme }) => theme.text2};\r\n  :hover {\r\n    color: ${({ theme }) => theme.text1};\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n  }\r\n  > svg {\r\n    margin-right: 8px;\r\n  }\r\n`\r\n\r\nexport default function Menu() {\r\n  const node = useRef<HTMLDivElement>()\r\n  const [open, toggle] = useToggle(false)\r\n  const { t } = useTranslation()\r\n\r\n  useOnClickOutside(node, open ? toggle : undefined)\r\n\r\n  return (\r\n    <StyledMenu>\r\n      <StyledMenuButton onClick={toggle}>\r\n        <StyledMenuIcon />\r\n      </StyledMenuButton>\r\n      {open && (\r\n        <MenuFlyout>\r\n          <MenuItem id=\"link\" href=\"https://glmrapes.com/\">\r\n            <Home size={14} />\r\n            {t('Website')}\r\n          </MenuItem>\r\n          <MenuItem id=\"link\" href=\"https://discord.gg/H9DH3z2bTV\">\r\n            <MessageCircle size={14} />\r\n            {t('discord')}\r\n          </MenuItem>\r\n          <MenuItem id=\"link\" href=\"https://twitter.com/GLMRApes\">\r\n            <Code size={14} />\r\n            Twitter\r\n          </MenuItem>\r\n        </MenuFlyout>\r\n      )}\r\n    </StyledMenu>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}