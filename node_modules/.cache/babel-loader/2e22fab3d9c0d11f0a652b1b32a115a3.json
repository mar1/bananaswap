{"ast":null,"code":"import{useEffect}from'react';import{useDispatch}from'react-redux';import{updateMatchesDarkMode}from'./actions';export default function Updater(){var dispatch=useDispatch();// keep dark mode in sync with the system\nuseEffect(function(){var _window;var darkHandler=function darkHandler(match){dispatch(updateMatchesDarkMode({matchesDarkMode:match.matches}));};var match=(_window=window)===null||_window===void 0?void 0:_window.matchMedia('(prefers-color-scheme: dark)');dispatch(updateMatchesDarkMode({matchesDarkMode:match.matches}));if(match===null||match===void 0?void 0:match.addListener){match===null||match===void 0?void 0:match.addListener(darkHandler);}else if(match===null||match===void 0?void 0:match.addEventListener){match===null||match===void 0?void 0:match.addEventListener('change',darkHandler);}return function(){if(match===null||match===void 0?void 0:match.removeListener){match===null||match===void 0?void 0:match.removeListener(darkHandler);}else if(match===null||match===void 0?void 0:match.removeEventListener){match===null||match===void 0?void 0:match.removeEventListener('change',darkHandler);}};},[dispatch]);return null;}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/state/user/updater.tsx"],"names":["useEffect","useDispatch","updateMatchesDarkMode","Updater","dispatch","darkHandler","match","matchesDarkMode","matches","window","matchMedia","addListener","addEventListener","removeListener","removeEventListener"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAASC,qBAAT,KAAsC,WAAtC,CAEA,cAAe,SAASC,CAAAA,OAAT,EAAyB,CACtC,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CAEA;AACAD,SAAS,CAAC,UAAM,aACd,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAgC,CAClDF,QAAQ,CAACF,qBAAqB,CAAC,CAAEK,eAAe,CAAED,KAAK,CAACE,OAAzB,CAAD,CAAtB,CAAR,CACD,CAFD,CAIA,GAAMF,CAAAA,KAAK,UAAGG,MAAH,kCAAG,QAAQC,UAAR,CAAmB,8BAAnB,CAAd,CACAN,QAAQ,CAACF,qBAAqB,CAAC,CAAEK,eAAe,CAAED,KAAK,CAACE,OAAzB,CAAD,CAAtB,CAAR,CAEA,GAAIF,KAAJ,SAAIA,KAAJ,iBAAIA,KAAK,CAAEK,WAAX,CAAwB,CACtBL,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEK,WAAP,CAAmBN,WAAnB,EACD,CAFD,IAEO,IAAIC,KAAJ,SAAIA,KAAJ,iBAAIA,KAAK,CAAEM,gBAAX,CAA6B,CAClCN,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEM,gBAAP,CAAwB,QAAxB,CAAkCP,WAAlC,EACD,CAED,MAAO,WAAM,CACX,GAAIC,KAAJ,SAAIA,KAAJ,iBAAIA,KAAK,CAAEO,cAAX,CAA2B,CACzBP,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEO,cAAP,CAAsBR,WAAtB,EACD,CAFD,IAEO,IAAIC,KAAJ,SAAIA,KAAJ,iBAAIA,KAAK,CAAEQ,mBAAX,CAAgC,CACrCR,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEQ,mBAAP,CAA2B,QAA3B,CAAqCT,WAArC,EACD,CACF,CAND,CAOD,CArBQ,CAqBN,CAACD,QAAD,CArBM,CAAT,CAuBA,MAAO,KAAP,CACD","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../index'\r\nimport { updateMatchesDarkMode } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  // keep dark mode in sync with the system\r\n  useEffect(() => {\r\n    const darkHandler = (match: MediaQueryListEvent) => {\r\n      dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\r\n    }\r\n\r\n    const match = window?.matchMedia('(prefers-color-scheme: dark)')\r\n    dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\r\n\r\n    if (match?.addListener) {\r\n      match?.addListener(darkHandler)\r\n    } else if (match?.addEventListener) {\r\n      match?.addEventListener('change', darkHandler)\r\n    }\r\n\r\n    return () => {\r\n      if (match?.removeListener) {\r\n        match?.removeListener(darkHandler)\r\n      } else if (match?.removeEventListener) {\r\n        match?.removeEventListener('change', darkHandler)\r\n      }\r\n    }\r\n  }, [dispatch])\r\n\r\n  return null\r\n}\r\n"]},"metadata":{},"sourceType":"module"}