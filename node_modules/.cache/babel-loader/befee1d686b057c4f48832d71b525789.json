{"ast":null,"code":"import BigNumber from 'bignumber.js';\nexport const getBalanceNumber = (balance, decimals = 18) => {\n  const displayBalance = balance.dividedBy(new BigNumber(10).pow(decimals));\n  return displayBalance.toNumber();\n};\nexport const getDisplayBalance = (balance, decimals = 18) => {\n  const displayBalance = balance.dividedBy(new BigNumber(10).pow(decimals));\n  return displayBalance.toPrecision(5);\n};\nexport const getFullDisplayBalance = (balance, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed();\n};","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/utils/formatBalance.ts"],"names":["BigNumber","getBalanceNumber","balance","decimals","displayBalance","dividedBy","pow","toNumber","getDisplayBalance","toPrecision","getFullDisplayBalance","toFixed"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAqBC,QAAQ,GAAG,EAAhC,KAAuC;AACrE,QAAMC,cAAc,GAAGF,OAAO,CAACG,SAAR,CAAkB,IAAIL,SAAJ,CAAc,EAAd,EAAkBM,GAAlB,CAAsBH,QAAtB,CAAlB,CAAvB;AACA,SAAOC,cAAc,CAACG,QAAf,EAAP;AACD,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAG,CAACN,OAAD,EAAqBC,QAAQ,GAAG,EAAhC,KAAuC;AACtE,QAAMC,cAAc,GAAGF,OAAO,CAACG,SAAR,CAAkB,IAAIL,SAAJ,CAAc,EAAd,EAAkBM,GAAlB,CAAsBH,QAAtB,CAAlB,CAAvB;AACA,SAAOC,cAAc,CAACK,WAAf,CAA2B,CAA3B,CAAP;AACD,CAHM;AAKP,OAAO,MAAMC,qBAAqB,GAAG,CAACR,OAAD,EAAqBC,QAAQ,GAAG,EAAhC,KAAuC;AAC1E,SAAOD,OAAO,CAACG,SAAR,CAAkB,IAAIL,SAAJ,CAAc,EAAd,EAAkBM,GAAlB,CAAsBH,QAAtB,CAAlB,EAAmDQ,OAAnD,EAAP;AACD,CAFM","sourcesContent":["import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = balance.dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = balance.dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toPrecision(5)\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n"]},"metadata":{},"sourceType":"module"}