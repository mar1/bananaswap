{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{MaxUint256}from'@ethersproject/constants';import{TokenAmount,DEV}from'moonbeamswap';import{useCallback,useMemo}from'react';import{ROUTER_ADDRESS}from'../constants';import{useTokenAllowance}from'../data/Allowances';import{Field}from'../state/swap/actions';import{useTransactionAdder,useHasPendingApproval}from'../state/transactions/hooks';import{computeSlippageAdjustedAmounts}from'../utils/prices';import{calculateGasMargin}from'../utils';import{useTokenContract}from'./useContract';import{useActiveWeb3React}from'./index';export var ApprovalState;// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n(function(ApprovalState){ApprovalState[ApprovalState[\"UNKNOWN\"]=0]=\"UNKNOWN\";ApprovalState[ApprovalState[\"NOT_APPROVED\"]=1]=\"NOT_APPROVED\";ApprovalState[ApprovalState[\"PENDING\"]=2]=\"PENDING\";ApprovalState[ApprovalState[\"APPROVED\"]=3]=\"APPROVED\";})(ApprovalState||(ApprovalState={}));export function useApproveCallback(amountToApprove,spender){var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var token=amountToApprove instanceof TokenAmount?amountToApprove.token:undefined;var currentAllowance=useTokenAllowance(token,account!==null&&account!==void 0?account:undefined,spender);var pendingApproval=useHasPendingApproval(token===null||token===void 0?void 0:token.address,spender);// check the current approval status\nvar approvalState=useMemo(function(){if(!amountToApprove||!spender)return ApprovalState.UNKNOWN;if(amountToApprove.currency===DEV)return ApprovalState.APPROVED;// we might not have enough data to know whether or not we need to approve\nif(!currentAllowance)return ApprovalState.UNKNOWN;// amountToApprove will be defined if currentAllowance is\nreturn currentAllowance.lessThan(amountToApprove)?pendingApproval?ApprovalState.PENDING:ApprovalState.NOT_APPROVED:ApprovalState.APPROVED;},[amountToApprove,currentAllowance,pendingApproval,spender]);var tokenContract=useTokenContract(token===null||token===void 0?void 0:token.address);var addTransaction=useTransactionAdder();var approve=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var useExact,estimatedGas;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(approvalState!==ApprovalState.NOT_APPROVED)){_context.next=3;break;}console.error('approve was called unnecessarily');return _context.abrupt(\"return\");case 3:if(token){_context.next=6;break;}console.error('no token');return _context.abrupt(\"return\");case 6:if(tokenContract){_context.next=9;break;}console.error('tokenContract is null');return _context.abrupt(\"return\");case 9:if(amountToApprove){_context.next=12;break;}console.error('missing amount to approve');return _context.abrupt(\"return\");case 12:if(spender){_context.next=15;break;}console.error('no spender');return _context.abrupt(\"return\");case 15:useExact=false;_context.next=18;return tokenContract.estimateGas.approve(spender,MaxUint256).catch(function(){// general fallback for tokens who restrict approval amounts\nuseExact=true;return tokenContract.estimateGas.approve(spender,amountToApprove.raw.toString());});case 18:estimatedGas=_context.sent;return _context.abrupt(\"return\",tokenContract.approve(spender,useExact?amountToApprove.raw.toString():MaxUint256,{gasLimit:calculateGasMargin(estimatedGas)}).then(function(response){addTransaction(response,{summary:'Approve '+amountToApprove.currency.symbol,approval:{tokenAddress:token.address,spender:spender}});}).catch(function(error){console.debug('Failed to approve token',error);throw error;}));case 20:case\"end\":return _context.stop();}}},_callee);})),[approvalState,token,tokenContract,amountToApprove,spender,addTransaction]);return[approvalState,approve];}// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade){var allowedSlippage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var amountToApprove=useMemo(function(){return trade?computeSlippageAdjustedAmounts(trade,allowedSlippage)[Field.INPUT]:undefined;},[trade,allowedSlippage]);return useApproveCallback(amountToApprove,ROUTER_ADDRESS[chainId?chainId:'']);}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/hooks/useApproveCallback.ts"],"names":["MaxUint256","TokenAmount","DEV","useCallback","useMemo","ROUTER_ADDRESS","useTokenAllowance","Field","useTransactionAdder","useHasPendingApproval","computeSlippageAdjustedAmounts","calculateGasMargin","useTokenContract","useActiveWeb3React","ApprovalState","useApproveCallback","amountToApprove","spender","account","token","undefined","currentAllowance","pendingApproval","address","approvalState","UNKNOWN","currency","APPROVED","lessThan","PENDING","NOT_APPROVED","tokenContract","addTransaction","approve","console","error","useExact","estimateGas","catch","raw","toString","estimatedGas","gasLimit","then","response","summary","symbol","approval","tokenAddress","debug","useApproveCallbackFromTrade","trade","allowedSlippage","chainId","INPUT"],"mappings":"+TAAA,OAASA,UAAT,KAA2B,0BAA3B,CAEA,OAAgBC,WAAhB,CAA6CC,GAA7C,KAAwD,cAAxD,CACA,OAASC,WAAT,CAAsBC,OAAtB,KAAqC,OAArC,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,OAASC,iBAAT,KAAkC,oBAAlC,CACA,OAASC,KAAT,KAAsB,uBAAtB,CACA,OAASC,mBAAT,CAA8BC,qBAA9B,KAA2D,6BAA3D,CACA,OAASC,8BAAT,KAA+C,iBAA/C,CACA,OAASC,kBAAT,KAAmC,UAAnC,CACA,OAASC,gBAAT,KAAiC,eAAjC,CACA,OAASC,kBAAT,KAAmC,SAAnC,CAEA,UAAYC,CAAAA,aAAZ,CAOA;UAPYA,a,EAAAA,a,CAAAA,a,yBAAAA,a,CAAAA,a,mCAAAA,a,CAAAA,a,yBAAAA,a,CAAAA,a,8BAAAA,a,GAAAA,a,MAQZ,MAAO,SAASC,CAAAA,kBAAT,CACLC,eADK,CAELC,OAFK,CAGiC,CACtC,wBAAoBJ,kBAAkB,EAAtC,CAAQK,OAAR,qBAAQA,OAAR,CACA,GAAMC,CAAAA,KAAK,CAAGH,eAAe,WAAYf,CAAAA,WAA3B,CAAyCe,eAAe,CAACG,KAAzD,CAAiEC,SAA/E,CACA,GAAMC,CAAAA,gBAAgB,CAAGf,iBAAiB,CAACa,KAAD,CAAQD,OAAR,SAAQA,OAAR,UAAQA,OAAR,CAAmBE,SAAnB,CAA8BH,OAA9B,CAA1C,CACA,GAAMK,CAAAA,eAAe,CAAGb,qBAAqB,CAACU,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAEI,OAAR,CAAiBN,OAAjB,CAA7C,CAEA;AACA,GAAMO,CAAAA,aAA4B,CAAGpB,OAAO,CAAC,UAAM,CACjD,GAAI,CAACY,eAAD,EAAoB,CAACC,OAAzB,CAAkC,MAAOH,CAAAA,aAAa,CAACW,OAArB,CAClC,GAAIT,eAAe,CAACU,QAAhB,GAA6BxB,GAAjC,CAAsC,MAAOY,CAAAA,aAAa,CAACa,QAArB,CACtC;AACA,GAAI,CAACN,gBAAL,CAAuB,MAAOP,CAAAA,aAAa,CAACW,OAArB,CAEvB;AACA,MAAOJ,CAAAA,gBAAgB,CAACO,QAAjB,CAA0BZ,eAA1B,EACHM,eAAe,CACbR,aAAa,CAACe,OADD,CAEbf,aAAa,CAACgB,YAHb,CAIHhB,aAAa,CAACa,QAJlB,CAKD,CAZ2C,CAYzC,CAACX,eAAD,CAAkBK,gBAAlB,CAAoCC,eAApC,CAAqDL,OAArD,CAZyC,CAA5C,CAcA,GAAMc,CAAAA,aAAa,CAAGnB,gBAAgB,CAACO,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAEI,OAAR,CAAtC,CACA,GAAMS,CAAAA,cAAc,CAAGxB,mBAAmB,EAA1C,CAEA,GAAMyB,CAAAA,OAAO,CAAG9B,WAAW,sEAAC,kKACtBqB,aAAa,GAAKV,aAAa,CAACgB,YADV,0BAExBI,OAAO,CAACC,KAAR,CAAc,kCAAd,EAFwB,2CAKrBhB,KALqB,yBAMxBe,OAAO,CAACC,KAAR,CAAc,UAAd,EANwB,2CAUrBJ,aAVqB,yBAWxBG,OAAO,CAACC,KAAR,CAAc,uBAAd,EAXwB,2CAerBnB,eAfqB,0BAgBxBkB,OAAO,CAACC,KAAR,CAAc,2BAAd,EAhBwB,4CAoBrBlB,OApBqB,0BAqBxBiB,OAAO,CAACC,KAAR,CAAc,YAAd,EArBwB,yCAyBtBC,QAzBsB,CAyBX,KAzBW,wBA0BCL,CAAAA,aAAa,CAACM,WAAd,CAA0BJ,OAA1B,CAAkChB,OAAlC,CAA2CjB,UAA3C,EAAuDsC,KAAvD,CAA6D,UAAM,CAC5F;AACAF,QAAQ,CAAG,IAAX,CACA,MAAOL,CAAAA,aAAa,CAACM,WAAd,CAA0BJ,OAA1B,CAAkChB,OAAlC,CAA2CD,eAAe,CAACuB,GAAhB,CAAoBC,QAApB,EAA3C,CAAP,CACD,CAJ0B,CA1BD,SA0BpBC,YA1BoB,+CAgCnBV,aAAa,CACjBE,OADI,CACIhB,OADJ,CACamB,QAAQ,CAAGpB,eAAe,CAACuB,GAAhB,CAAoBC,QAApB,EAAH,CAAoCxC,UADzD,CACqE,CACxE0C,QAAQ,CAAE/B,kBAAkB,CAAC8B,YAAD,CAD4C,CADrE,EAIJE,IAJI,CAIC,SAACC,QAAD,CAAmC,CACvCZ,cAAc,CAACY,QAAD,CAAW,CACvBC,OAAO,CAAE,WAAa7B,eAAe,CAACU,QAAhB,CAAyBoB,MADxB,CAEvBC,QAAQ,CAAE,CAAEC,YAAY,CAAE7B,KAAK,CAACI,OAAtB,CAA+BN,OAAO,CAAEA,OAAxC,CAFa,CAAX,CAAd,CAID,CATI,EAUJqB,KAVI,CAUE,SAACH,KAAD,CAAkB,CACvBD,OAAO,CAACe,KAAR,CAAc,yBAAd,CAAyCd,KAAzC,EACA,KAAMA,CAAAA,KAAN,CACD,CAbI,CAhCmB,yDAAD,GA8CxB,CAACX,aAAD,CAAgBL,KAAhB,CAAuBY,aAAvB,CAAsCf,eAAtC,CAAuDC,OAAvD,CAAgEe,cAAhE,CA9CwB,CAA3B,CAgDA,MAAO,CAACR,aAAD,CAAgBS,OAAhB,CAAP,CACD,CAED;AACA,MAAO,SAASiB,CAAAA,2BAAT,CAAqCC,KAArC,CAAyE,IAArBC,CAAAA,eAAqB,2DAAH,CAAG,CAC9E,yBAAoBvC,kBAAkB,EAAtC,CAAQwC,OAAR,sBAAQA,OAAR,CACA,GAAMrC,CAAAA,eAAe,CAAGZ,OAAO,CAC7B,iBAAO+C,CAAAA,KAAK,CAAGzC,8BAA8B,CAACyC,KAAD,CAAQC,eAAR,CAA9B,CAAuD7C,KAAK,CAAC+C,KAA7D,CAAH,CAAyElC,SAArF,EAD6B,CAE7B,CAAC+B,KAAD,CAAQC,eAAR,CAF6B,CAA/B,CAIA,MAAOrC,CAAAA,kBAAkB,CAACC,eAAD,CAAkBX,cAAc,CAACgD,OAAO,CAAGA,OAAH,CAAa,EAArB,CAAhC,CAAzB,CACD","sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, DEV } from 'moonbeamswap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { ROUTER_ADDRESS } from '../constants'\r\nimport { useTokenAllowance } from '../data/Allowances'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\nimport { useActiveWeb3React } from './index'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === DEV) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    return tokenContract\r\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\r\n        gasLimit: calculateGasMargin(estimatedGas)\r\n      })\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: 'Approve ' + amountToApprove.currency.symbol,\r\n          approval: { tokenAddress: token.address, spender: spender }\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.debug('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const { chainId } = useActiveWeb3React()\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage]\r\n  )\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS[chainId ? chainId : ''])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}