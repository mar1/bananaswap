{"ast":null,"code":"import { ChainId, WDEV } from 'moonbeamswap';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator';\nimport UNISOCKS_ABI from '../constants/abis/unisocks.json';\nimport WDEV_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index'; // returns null on errors\n\nfunction useContract(address, ABI, withSignerIfPossible = true) {\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useV2MigratorContract() {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\nexport function useWDEVContract(withSignerIfPossible) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? WDEV[chainId].address : undefined, WDEV_ABI, withSignerIfPossible);\n}\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let address;\n\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n        break;\n\n      case ChainId.STANDALONE:\n        break;\n\n      case ChainId.MOONBASE:\n        break;\n    }\n  }\n\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\nexport function useMulticallContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\nexport function useSocksController() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? '0x65770b5283117639760beA3F867b69b3697a91dd' : undefined, UNISOCKS_ABI, false);\n}","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/hooks/useContract.ts"],"names":["ChainId","WDEV","abi","IUniswapV2PairABI","useMemo","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","ERC20_BYTES32_ABI","ERC20_ABI","MIGRATOR_ABI","MIGRATOR_ADDRESS","UNISOCKS_ABI","WDEV_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","getContract","useActiveWeb3React","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useV2MigratorContract","useTokenContract","tokenAddress","useWDEVContract","chainId","useENSRegistrarContract","MAINNET","STANDALONE","MOONBASE","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useSocksController"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WDEV } from 'moonbeamswap'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { useMemo } from 'react'\r\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\r\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\r\nimport ERC20_ABI from '../constants/abis/erc20.json'\r\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator'\r\nimport UNISOCKS_ABI from '../constants/abis/unisocks.json'\r\nimport WDEV_ABI from '../constants/abis/weth.json'\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\r\nimport { getContract } from '../utils'\r\nimport { useActiveWeb3React } from './index'\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useV2MigratorContract(): Contract | null {\r\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true)\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWDEVContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WDEV[chainId].address : undefined, WDEV_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n        break\r\n      case ChainId.STANDALONE:\r\n        break\r\n      case ChainId.MOONBASE:\r\n        break\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\r\n}\r\n\r\nexport function useSocksController(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(\r\n    chainId === ChainId.MAINNET ? '0x65770b5283117639760beA3F867b69b3697a91dd' : undefined,\r\n    UNISOCKS_ABI,\r\n    false\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}