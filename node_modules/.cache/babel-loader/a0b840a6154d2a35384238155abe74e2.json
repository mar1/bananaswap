{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Documents\\\\Dev\\\\bananaswap\\\\moonbeam-uniswap\\\\uniswap-interface-moonbeam\\\\src\\\\components\\\\Value\\\\Value.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport styled from 'styled-components';\n\nconst Value = ({\n  value,\n  decimals\n}) => {\n  const [start, updateStart] = useState(0);\n  const [end, updateEnd] = useState(0);\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end);\n      updateEnd(value);\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(StyledValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, typeof value == 'string' ? value : /*#__PURE__*/React.createElement(CountUp, {\n    start: start,\n    end: end,\n    duration: 1,\n    separator: \",\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst StyledValue = styled.div`\n  color: ${props => props.theme.color.grey[800]};\n  font-size: 36px;\n  font-weight: 700;\n`;\nexport default Value;","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/components/Value/Value.tsx"],"names":["React","useState","useEffect","CountUp","styled","Value","value","decimals","start","updateStart","end","updateEnd","StyledValue","div","props","theme","color","grey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC3D,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBR,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM,CAACS,GAAD,EAAMC,SAAN,IAAmBV,QAAQ,CAAC,CAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,OAAOI,KAAP,KAAiB,QAArB,EAA+B;AAC7BG,MAAAA,WAAW,CAACC,GAAD,CAAX;AACAC,MAAAA,SAAS,CAACL,KAAD,CAAT;AACD;AACF,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;AAOA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,OAAOA,KAAP,IAAgB,QAAhB,GACCA,KADD,gBAGC,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,GAAG,EAAEE,GAFP;AAIE,IAAA,QAAQ,EAAE,CAJZ;AAKE,IAAA,SAAS,EAAC,GALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAeD,CA1BD;;AA4BA,MAAME,WAAW,GAAGR,MAAM,CAACS,GAAI;AAC/B,WAAYC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;AAClD;AACA;AACA,CAJA;AAMA,eAAeZ,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\n\nimport styled from 'styled-components'\n\ninterface ValueProps {\n  value: string | number,\n  decimals: number\n}\n\nconst Value: React.FC<ValueProps> = ({ value, decimals }) => {\n  const [start, updateStart] = useState(0)\n  const [end, updateEnd] = useState(0)\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end)\n      updateEnd(value)\n    }\n  }, [value])\n\n  return (\n    <StyledValue>\n      {typeof value == 'string' ? (\n        value\n      ) : (\n        <CountUp\n          start={start}\n          end={end}\n\n          duration={1}\n          separator=\",\"\n        />\n      )}\n    </StyledValue>\n  )\n}\n\nconst StyledValue = styled.div`\n  color: ${(props) => props.theme.color.grey[800]};\n  font-size: 36px;\n  font-weight: 700;\n`\n\nexport default Value\n"]},"metadata":{},"sourceType":"module"}