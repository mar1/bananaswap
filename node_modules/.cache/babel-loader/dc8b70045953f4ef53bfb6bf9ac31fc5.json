{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Documents\\\\Dev\\\\bananaswap\\\\moonbeam-uniswap\\\\uniswap-interface-moonbeam\\\\src\\\\pages\\\\Earn\\\\components\\\\Stake.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport Button from '../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport useAllowance from '../../../hooks/useAllowance';\nimport useApprove from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useUnstake from '../../../hooks/useUnstake';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport imageUniswap from \"../../../assets/img/logo-uniswap.svg\";\n\nconst Stake = ({\n  lpContract,\n  pid,\n  tokenName\n}) => {\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const allowance = useAllowance(lpContract);\n  const {\n    onApprove\n  } = useApprove(lpContract);\n  const tokenBalance = useTokenBalance(lpContract.options.address);\n  const stakedBalance = useStakedBalance(pid);\n  const {\n    onStake\n  } = useStake(pid);\n  const {\n    onUnstake\n  } = useUnstake(pid);\n  const [onPresentDeposit] = useModal( /*#__PURE__*/React.createElement(DepositModal, {\n    max: tokenBalance,\n    onConfirm: onStake,\n    tokenName: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/React.createElement(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }));\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove(); // user rejected tx or didn't go thru\n\n      if (!txHash) {\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUniswap,\n    height: \"50\",\n    style: {\n      marginTop: -4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(stakedBalance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `${tokenName} Tokens Staked`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, !allowance.toNumber() ? /*#__PURE__*/React.createElement(Button, {\n    disabled: requestedApproval,\n    variant: 'tertiary',\n    onClick: handleApprove,\n    text: `Approve ${tokenName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    text: \"Deposit\",\n    variant: 'tertiary',\n    onClick: onPresentDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: stakedBalance.eq(new BigNumber(0)),\n    text: \"Withdraw\",\n    border: true,\n    variant: 'secondary',\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[6]}px;\n  width: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Stake;","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/pages/Earn/components/Stake.tsx"],"names":["React","useCallback","useState","styled","BigNumber","Button","Card","CardContent","CardIcon","Label","Value","useAllowance","useApprove","useModal","useStake","useStakedBalance","useTokenBalance","useUnstake","getDisplayBalance","DepositModal","WithdrawModal","Stake","lpContract","pid","tokenName","requestedApproval","setRequestedApproval","allowance","onApprove","tokenBalance","options","address","stakedBalance","onStake","onUnstake","onPresentDeposit","onPresentWithdraw","handleApprove","txHash","e","console","log","imageUniswap","marginTop","toNumber","eq","StyledCardHeader","div","StyledCardActions","props","theme","spacing","StyledActionSpacer","StyledCardContentInner"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nimport Button from '../../components/Button'\r\nimport Card from '../../../components/Card'\r\nimport CardContent from '../../../components/CardContent'\r\nimport CardIcon from '../../../components/CardIcon'\r\nimport { AddIcon, RemoveIcon } from '../../../components/icons'\r\nimport IconButton from '../../../components/IconButton'\r\nimport Label from '../../../components/Label'\r\nimport Value from '../../../components/Value'\r\n\r\nimport useAllowance from '../../../hooks/useAllowance'\r\nimport useApprove from '../../../hooks/useApprove'\r\nimport useModal from '../../../hooks/useModal'\r\nimport useStake from '../../../hooks/useStake'\r\nimport useStakedBalance from '../../../hooks/useStakedBalance'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport useUnstake from '../../../hooks/useUnstake'\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance'\r\n\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\n\r\nimport imageUniswap from '../../../assets/img/logo-uniswap.svg'\r\n\r\ninterface StakeProps {\r\n  lpContract: Contract\r\n  pid: number\r\n  tokenName: string\r\n}\r\n\r\nconst Stake: React.FC<StakeProps> = ({ lpContract, pid, tokenName }) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n\r\n  const allowance = useAllowance(lpContract)\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const tokenBalance = useTokenBalance(lpContract.options.address)\r\n  const stakedBalance = useStakedBalance(pid)\r\n\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={tokenName}\r\n    />,\r\n  )\r\n\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={onUnstake}\r\n      tokenName={tokenName}\r\n    />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <CardIcon>\r\n              <img src={imageUniswap} height=\"50\" style={{ marginTop: -4 }} />\r\n            </CardIcon>\r\n            <Value value={getDisplayBalance(stakedBalance)} />\r\n            <Label text={`${tokenName} Tokens Staked`} />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            {!allowance.toNumber() ? (\r\n              <Button\r\n                disabled={requestedApproval}\r\n                variant={'tertiary'}\r\n                onClick={handleApprove}\r\n                text={`Approve ${tokenName}`}\r\n              />\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  text=\"Deposit\"\r\n                  variant={'tertiary'}\r\n                  onClick={onPresentDeposit}\r\n                />\r\n                <StyledActionSpacer />\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0))}\r\n                  text=\"Withdraw\"\r\n                  border\r\n                  variant={'secondary'}\r\n                  onClick={onPresentWithdraw}\r\n                />\r\n                <StyledActionSpacer />\r\n              </>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Stake"]},"metadata":{},"sourceType":"module"}