{"ast":null,"code":"import{useEffect}from'react';import{useDispatch}from'react-redux';import{parse}from'qs';import{updateUserDarkMode}from'../state/user/actions';export default function DarkModeQueryParamReader(_ref){var search=_ref.location.search;var dispatch=useDispatch();useEffect(function(){if(!search)return;if(search.length<2)return;var parsed=parse(search,{parseArrays:false,ignoreQueryPrefix:true});var theme=parsed.theme;if(typeof theme!=='string')return;if(theme.toLowerCase()==='light'){dispatch(updateUserDarkMode({userDarkMode:false}));}else if(theme.toLowerCase()==='dark'){dispatch(updateUserDarkMode({userDarkMode:true}));}},[dispatch,search]);return null;}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/theme/DarkModeQueryParamReader.tsx"],"names":["useEffect","useDispatch","parse","updateUserDarkMode","DarkModeQueryParamReader","search","location","dispatch","length","parsed","parseArrays","ignoreQueryPrefix","theme","toLowerCase","userDarkMode"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAASC,KAAT,KAAsB,IAAtB,CAEA,OAASC,kBAAT,KAAmC,uBAAnC,CAEA,cAAe,SAASC,CAAAA,wBAAT,MAAuF,IAAvCC,CAAAA,MAAuC,MAAnDC,QAAmD,CAAvCD,MAAuC,CACpG,GAAME,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACd,GAAI,CAACK,MAAL,CAAa,OACb,GAAIA,MAAM,CAACG,MAAP,CAAgB,CAApB,CAAuB,OAEvB,GAAMC,CAAAA,MAAM,CAAGP,KAAK,CAACG,MAAD,CAAS,CAC3BK,WAAW,CAAE,KADc,CAE3BC,iBAAiB,CAAE,IAFQ,CAAT,CAApB,CAKA,GAAMC,CAAAA,KAAK,CAAGH,MAAM,CAACG,KAArB,CAEA,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,OAE/B,GAAIA,KAAK,CAACC,WAAN,KAAwB,OAA5B,CAAqC,CACnCN,QAAQ,CAACJ,kBAAkB,CAAC,CAAEW,YAAY,CAAE,KAAhB,CAAD,CAAnB,CAAR,CACD,CAFD,IAEO,IAAIF,KAAK,CAACC,WAAN,KAAwB,MAA5B,CAAoC,CACzCN,QAAQ,CAACJ,kBAAkB,CAAC,CAAEW,YAAY,CAAE,IAAhB,CAAD,CAAnB,CAAR,CACD,CACF,CAlBQ,CAkBN,CAACP,QAAD,CAAWF,MAAX,CAlBM,CAAT,CAoBA,MAAO,KAAP,CACD","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { parse } from 'qs'\r\nimport { AppDispatch } from '../state'\r\nimport { updateUserDarkMode } from '../state/user/actions'\r\n\r\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  useEffect(() => {\r\n    if (!search) return\r\n    if (search.length < 2) return\r\n\r\n    const parsed = parse(search, {\r\n      parseArrays: false,\r\n      ignoreQueryPrefix: true\r\n    })\r\n\r\n    const theme = parsed.theme\r\n\r\n    if (typeof theme !== 'string') return\r\n\r\n    if (theme.toLowerCase() === 'light') {\r\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\r\n    } else if (theme.toLowerCase() === 'dark') {\r\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\r\n    }\r\n  }, [dispatch, search])\r\n\r\n  return null\r\n}\r\n"]},"metadata":{},"sourceType":"module"}