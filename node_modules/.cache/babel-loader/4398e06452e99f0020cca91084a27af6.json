{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\src\\\\components\\\\WalletModal\\\\Option.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ExternalLink } from '../../theme';\nconst InfoCard = styled.button`\n  background-color: ${({\n  theme,\n  active\n}) => active ? theme.bg3 : theme.bg2};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  &:focus {\n    box-shadow: 0 0 0 1px ${({\n  theme\n}) => theme.primary1};\n  }\n  border-color: ${({\n  theme,\n  active\n}) => active ? 'transparent' : theme.bg3};\n`;\nconst OptionCard = styled(InfoCard)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`;\nconst OptionCardLeft = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  justify-content: center;\n  height: 100%;\n`;\nconst OptionCardClickable = styled(OptionCard)`\n  margin-top: 0;\n  &:hover {\n    cursor: ${({\n  clickable\n}) => clickable ? 'pointer' : ''};\n    border: ${({\n  clickable,\n  theme\n}) => clickable ? `1px solid ${theme.primary1}` : ``};\n  }\n  opacity: ${({\n  disabled\n}) => disabled ? '0.5' : '1'};\n`;\nconst GreenCircle = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ${({\n  theme\n}) => theme.green1};\n    border-radius: 50%;\n  }\n`;\nconst CircleWrapper = styled.div`\n  color: ${({\n  theme\n}) => theme.green1};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst HeaderText = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  color: ${props => props.color === 'blue' ? ({\n  theme\n}) => theme.primary1 : ({\n  theme\n}) => theme.text1};\n  font-size: 1rem;\n  font-weight: 500;\n`;\nconst SubHeader = styled.div`\n  color: ${({\n  theme\n}) => theme.text1};\n  margin-top: 10px;\n  font-size: 12px;\n`;\nconst IconWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({\n  size\n}) => size ? size + 'px' : '24px'};\n    width: ${({\n  size\n}) => size ? size + 'px' : '24px'};\n  }\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`;\nexport default function Option({\n  link = null,\n  clickable = true,\n  size,\n  onClick = null,\n  color,\n  header,\n  subheader = null,\n  icon,\n  active = false,\n  id\n}) {\n  const content = /*#__PURE__*/React.createElement(OptionCardClickable, {\n    id: id,\n    onClick: onClick,\n    clickable: clickable && !active,\n    active: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OptionCardLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderText, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, active ? /*#__PURE__*/React.createElement(CircleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GreenCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }))) : '', header), subheader && /*#__PURE__*/React.createElement(SubHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, subheader)), /*#__PURE__*/React.createElement(IconWrapper, {\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    alt: 'Icon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })));\n\n  if (link) {\n    return /*#__PURE__*/React.createElement(ExternalLink, {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 12\n      }\n    }, content);\n  }\n\n  return content;\n}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/components/WalletModal/Option.tsx"],"names":["React","styled","ExternalLink","InfoCard","button","theme","active","bg3","bg2","primary1","OptionCard","OptionCardLeft","div","flexColumnNoWrap","OptionCardClickable","clickable","disabled","GreenCircle","flexRowNoWrap","green1","CircleWrapper","HeaderText","props","color","text1","SubHeader","IconWrapper","size","mediaWidth","upToMedium","Option","link","onClick","header","subheader","icon","id","content"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ExternalLink } from '../../theme'\r\n\r\nconst InfoCard = styled.button<{ active?: boolean }>`\r\n  background-color: ${({ theme, active }) => (active ? theme.bg3 : theme.bg2)};\r\n  padding: 1rem;\r\n  outline: none;\r\n  border: 1px solid;\r\n  border-radius: 12px;\r\n  width: 100% !important;\r\n  &:focus {\r\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.primary1};\r\n  }\r\n  border-color: ${({ theme, active }) => (active ? 'transparent' : theme.bg3)};\r\n`\r\n\r\nconst OptionCard = styled(InfoCard as any)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n`\r\n\r\nconst OptionCardLeft = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  justify-content: center;\r\n  height: 100%;\r\n`\r\n\r\nconst OptionCardClickable = styled(OptionCard as any)<{ clickable?: boolean }>`\r\n  margin-top: 0;\r\n  &:hover {\r\n    cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\r\n    border: ${({ clickable, theme }) => (clickable ? `1px solid ${theme.primary1}` : ``)};\r\n  }\r\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\r\n`\r\n\r\nconst GreenCircle = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:first-child {\r\n    height: 8px;\r\n    width: 8px;\r\n    margin-right: 8px;\r\n    background-color: ${({ theme }) => theme.green1};\r\n    border-radius: 50%;\r\n  }\r\n`\r\n\r\nconst CircleWrapper = styled.div`\r\n  color: ${({ theme }) => theme.green1};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst HeaderText = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.primary1 : ({ theme }) => theme.text1)};\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n`\r\n\r\nconst SubHeader = styled.div`\r\n  color: ${({ theme }) => theme.text1};\r\n  margin-top: 10px;\r\n  font-size: 12px;\r\n`\r\n\r\nconst IconWrapper = styled.div<{ size?: number | null }>`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  align-items: center;\r\n  justify-content: center;\r\n  & > img,\r\n  span {\r\n    height: ${({ size }) => (size ? size + 'px' : '24px')};\r\n    width: ${({ size }) => (size ? size + 'px' : '24px')};\r\n  }\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    align-items: flex-end;\r\n  `};\r\n`\r\n\r\nexport default function Option({\r\n  link = null,\r\n  clickable = true,\r\n  size,\r\n  onClick = null,\r\n  color,\r\n  header,\r\n  subheader = null,\r\n  icon,\r\n  active = false,\r\n  id\r\n}: {\r\n  link?: string | null\r\n  clickable?: boolean\r\n  size?: number | null\r\n  onClick?: null | (() => void)\r\n  color: string\r\n  header: React.ReactNode\r\n  subheader: React.ReactNode | null\r\n  icon: string\r\n  active?: boolean\r\n  id: string\r\n}) {\r\n  const content = (\r\n    <OptionCardClickable id={id} onClick={onClick} clickable={clickable && !active} active={active}>\r\n      <OptionCardLeft>\r\n        <HeaderText color={color}>\r\n          {active ? (\r\n            <CircleWrapper>\r\n              <GreenCircle>\r\n                <div />\r\n              </GreenCircle>\r\n            </CircleWrapper>\r\n          ) : (\r\n            ''\r\n          )}\r\n          {header}\r\n        </HeaderText>\r\n        {subheader && <SubHeader>{subheader}</SubHeader>}\r\n      </OptionCardLeft>\r\n      <IconWrapper size={size}>\r\n        <img src={icon} alt={'Icon'} />\r\n      </IconWrapper>\r\n    </OptionCardClickable>\r\n  )\r\n  if (link) {\r\n    return <ExternalLink href={link}>{content}</ExternalLink>\r\n  }\r\n\r\n  return content\r\n}\r\n"]},"metadata":{},"sourceType":"module"}