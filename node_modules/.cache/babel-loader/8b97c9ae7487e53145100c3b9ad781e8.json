{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React from'react';import styled from'styled-components';import Option from'./Option';import{SUPPORTED_WALLETS}from'../../constants';import{injected}from'../../connectors';import{darken}from'polished';import Loader from'../Loader';var PendingSection=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  \",\";\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  & > * {\\n    width: 100%;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.flexColumnNoWrap;});var StyledLoader=styled(Loader)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-right: 1rem;\\n\"])));var LoadingMessage=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  \",\";\\n  align-items: center;\\n  justify-content: flex-start;\\n  border-radius: 12px;\\n  margin-bottom: 20px;\\n  color: \",\";\\n  border: 1px solid \",\";\\n\\n  & > * {\\n    padding: 1rem;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.flexRowNoWrap;},function(_ref3){var theme=_ref3.theme,error=_ref3.error;return error?theme.red1:'inherit';},function(_ref4){var theme=_ref4.theme,error=_ref4.error;return error?theme.red1:theme.text4;});var ErrorGroup=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  \",\";\\n  align-items: center;\\n  justify-content: flex-start;\\n\"])),function(_ref5){var theme=_ref5.theme;return theme.flexRowNoWrap;});var ErrorButton=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  border-radius: 8px;\\n  font-size: 12px;\\n  color: \",\";\\n  background-color: \",\";\\n  margin-left: 1rem;\\n  padding: 0.5rem;\\n  font-weight: 600;\\n  user-select: none;\\n\\n  &:hover {\\n    cursor: pointer;\\n    background-color: \",\";\\n  }\\n\"])),function(_ref6){var theme=_ref6.theme;return theme.text1;},function(_ref7){var theme=_ref7.theme;return theme.bg4;},function(_ref8){var theme=_ref8.theme;return darken(0.1,theme.text4);});var LoadingWrapper=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  \",\";\\n  align-items: center;\\n  justify-content: center;\\n\"])),function(_ref9){var theme=_ref9.theme;return theme.flexRowNoWrap;});export default function PendingView(_ref10){var _window,_window$ethereum;var connector=_ref10.connector,_ref10$error=_ref10.error,error=_ref10$error===void 0?false:_ref10$error,setPendingError=_ref10.setPendingError,tryActivation=_ref10.tryActivation;var isMetamask=(_window=window)===null||_window===void 0?void 0:(_window$ethereum=_window.ethereum)===null||_window$ethereum===void 0?void 0:_window$ethereum.isMetaMask;return/*#__PURE__*/React.createElement(PendingSection,null,/*#__PURE__*/React.createElement(LoadingMessage,{error:error},/*#__PURE__*/React.createElement(LoadingWrapper,null,error?/*#__PURE__*/React.createElement(ErrorGroup,null,/*#__PURE__*/React.createElement(\"div\",null,\"Error connecting.\"),/*#__PURE__*/React.createElement(ErrorButton,{onClick:function onClick(){setPendingError(false);connector&&tryActivation(connector);}},\"Try Again\")):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StyledLoader,null),\"Initializing...\"))),Object.keys(SUPPORTED_WALLETS).map(function(key){var option=SUPPORTED_WALLETS[key];if(option.connector===connector){if(option.connector===injected){if(isMetamask&&option.name!=='MetaMask'){return null;}if(!isMetamask&&option.name==='MetaMask'){return null;}}return/*#__PURE__*/React.createElement(Option,{id:\"connect-\".concat(key),key:key,clickable:false,color:option.color,header:option.name,subheader:option.description,icon:require('../../assets/images/'+option.iconName)});}return null;}));}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/components/WalletModal/PendingView.tsx"],"names":["React","styled","Option","SUPPORTED_WALLETS","injected","darken","Loader","PendingSection","div","theme","flexColumnNoWrap","StyledLoader","LoadingMessage","flexRowNoWrap","error","red1","text4","ErrorGroup","ErrorButton","text1","bg4","LoadingWrapper","PendingView","connector","setPendingError","tryActivation","isMetamask","window","ethereum","isMetaMask","Object","keys","map","key","option","name","color","description","require","iconName"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport Option from './Option'\r\nimport { SUPPORTED_WALLETS } from '../../constants'\r\nimport { injected } from '../../connectors'\r\nimport { darken } from 'polished'\r\nimport Loader from '../Loader'\r\n\r\nconst PendingSection = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  & > * {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledLoader = styled(Loader)`\r\n  margin-right: 1rem;\r\n`\r\n\r\nconst LoadingMessage = styled.div<{ error?: boolean }>`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border-radius: 12px;\r\n  margin-bottom: 20px;\r\n  color: ${({ theme, error }) => (error ? theme.red1 : 'inherit')};\r\n  border: 1px solid ${({ theme, error }) => (error ? theme.red1 : theme.text4)};\r\n\r\n  & > * {\r\n    padding: 1rem;\r\n  }\r\n`\r\n\r\nconst ErrorGroup = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`\r\n\r\nconst ErrorButton = styled.div`\r\n  border-radius: 8px;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.text1};\r\n  background-color: ${({ theme }) => theme.bg4};\r\n  margin-left: 1rem;\r\n  padding: 0.5rem;\r\n  font-weight: 600;\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => darken(0.1, theme.text4)};\r\n  }\r\n`\r\n\r\nconst LoadingWrapper = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nexport default function PendingView({\r\n  connector,\r\n  error = false,\r\n  setPendingError,\r\n  tryActivation\r\n}: {\r\n  connector?: AbstractConnector\r\n  error?: boolean\r\n  setPendingError: (error: boolean) => void\r\n  tryActivation: (connector: AbstractConnector) => void\r\n}) {\r\n  const isMetamask = window?.ethereum?.isMetaMask\r\n\r\n  return (\r\n    <PendingSection>\r\n      <LoadingMessage error={error}>\r\n        <LoadingWrapper>\r\n          {error ? (\r\n            <ErrorGroup>\r\n              <div>Error connecting.</div>\r\n              <ErrorButton\r\n                onClick={() => {\r\n                  setPendingError(false)\r\n                  connector && tryActivation(connector)\r\n                }}\r\n              >\r\n                Try Again\r\n              </ErrorButton>\r\n            </ErrorGroup>\r\n          ) : (\r\n            <>\r\n              <StyledLoader />\r\n              Initializing...\r\n            </>\r\n          )}\r\n        </LoadingWrapper>\r\n      </LoadingMessage>\r\n      {Object.keys(SUPPORTED_WALLETS).map(key => {\r\n        const option = SUPPORTED_WALLETS[key]\r\n        if (option.connector === connector) {\r\n          if (option.connector === injected) {\r\n            if (isMetamask && option.name !== 'MetaMask') {\r\n              return null\r\n            }\r\n            if (!isMetamask && option.name === 'MetaMask') {\r\n              return null\r\n            }\r\n          }\r\n          return (\r\n            <Option\r\n              id={`connect-${key}`}\r\n              key={key}\r\n              clickable={false}\r\n              color={option.color}\r\n              header={option.name}\r\n              subheader={option.description}\r\n              icon={require('../../assets/images/' + option.iconName)}\r\n            />\r\n          )\r\n        }\r\n        return null\r\n      })}\r\n    </PendingSection>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}