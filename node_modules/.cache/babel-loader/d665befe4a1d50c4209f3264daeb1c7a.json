{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Documents\\\\Dev\\\\bananaswap\\\\moonbeam-uniswap\\\\uniswap-interface-moonbeam\\\\src\\\\pages\\\\Earn\\\\index.tsx\";\nimport { DEV, JSBI } from 'moonbeamswap';\nimport React, { useCallback, useEffect, useState, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Text } from 'rebass';\nimport { LightCard } from '../../components/Card';\nimport FullPositionCard from '../../components/PositionCard';\nimport { StakeTabs } from '../../components/NavigationTabs';\nimport { useTranslation } from 'react-i18next';\nimport { PairState, usePair } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { usePairs } from '../../data/Reserves';\nimport { usePairAdder } from '../../state/user/hooks';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport { TYPE } from '../../theme';\nimport AppBody from '../AppBody';\nimport { Dots } from '../Pool/styleds';\nvar Fields;\n\n(function (Fields) {\n  Fields[Fields[\"TOKEN0\"] = 0] = \"TOKEN0\";\n  Fields[Fields[\"TOKEN1\"] = 1] = \"TOKEN1\";\n})(Fields || (Fields = {}));\n\nexport default function PoolFinder() {\n  const theme = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useActiveWeb3React();\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n  const [showSearch, setShowSearch] = useState(false);\n  const [activeField, setActiveField] = useState(Fields.TOKEN1);\n  const [currency0, setCurrency0] = useState(DEV);\n  const [currency1, setCurrency1] = useState(null);\n  const [pairState, pair] = usePair(currency0 !== null && currency0 !== void 0 ? currency0 : undefined, currency1 !== null && currency1 !== void 0 ? currency1 : undefined);\n  const addPair = usePairAdder();\n  useEffect(() => {\n    if (pair) {\n      addPair(pair);\n    }\n  }, [pair, addPair]);\n  const validPairNoLiquidity = pairState === PairState.NOT_EXISTS || Boolean(pairState === PairState.EXISTS && pair && JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) && JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)));\n  const position = useTokenBalance(account !== null && account !== void 0 ? account : undefined, pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)));\n  const handleCurrencySelect = useCallback(currency => {\n    if (activeField === Fields.TOKEN0) {\n      setCurrency0(currency);\n    } else {\n      setCurrency1(currency);\n    }\n  }, [activeField]);\n  const handleSearchDismiss = useCallback(() => {\n    setShowSearch(false);\n  }, [setShowSearch]);\n  const prerequisiteMessage = /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"45px 10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, !account ? 'Connect to a wallet to find pools' : 'Select a token to find your liquidity.'));\n  return /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StakeTabs, {\n    active: 'earn',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), !account ? /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, t('connectToViewLiquidity'))) : v2IsLoading ? /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, t('loading')))) : (allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, allV2PairsWithLiquidity.map(v2Pair => /*#__PURE__*/React.createElement(FullPositionCard, {\n    key: v2Pair.liquidityToken.address,\n    pair: v2Pair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, t('noLiquidityFound'))));\n}","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/pages/Earn/index.tsx"],"names":["DEV","JSBI","React","useCallback","useEffect","useState","useContext","ThemeContext","Text","LightCard","FullPositionCard","StakeTabs","useTranslation","PairState","usePair","useActiveWeb3React","usePairs","usePairAdder","useTokenBalance","TYPE","AppBody","Dots","Fields","PoolFinder","theme","t","account","v2Pairs","liquidityTokensWithBalances","map","tokens","v2IsLoading","fetchingV2PairBalances","length","some","V2Pair","allV2PairsWithLiquidity","pair","filter","v2Pair","Boolean","showSearch","setShowSearch","activeField","setActiveField","TOKEN1","currency0","setCurrency0","currency1","setCurrency1","pairState","undefined","addPair","validPairNoLiquidity","NOT_EXISTS","EXISTS","equal","reserve0","raw","BigInt","reserve1","position","liquidityToken","hasPosition","greaterThan","handleCurrencySelect","currency","TOKEN0","handleSearchDismiss","prerequisiteMessage","text3","address"],"mappings":"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","sourcesContent":["import { Currency, DEV, JSBI, TokenAmount } from 'moonbeamswap'\r\nimport React, { useCallback, useEffect, useState, useContext, useMemo } from 'react'\r\nimport { Plus } from 'react-feather'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Text } from 'rebass'\r\nimport { ButtonDropdownLight } from '../../components/Button'\r\nimport { LightCard } from '../../components/Card'\r\nimport FullPositionCard from '../../components/PositionCard'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\r\nimport CurrencyLogo from '../../components/CurrencyLogo'\r\nimport { StakeTabs } from '../../components/NavigationTabs'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row from '../../components/Row'\r\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal'\r\nimport { PairState, usePair } from '../../data/Reserves'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { usePairs } from '../../data/Reserves'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\r\nimport { usePairAdder } from '../../state/user/hooks'\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { StyledInternalLink, TYPE } from '../../theme'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport AppBody from '../AppBody'\r\nimport { Dots } from '../Pool/styleds'\r\n\r\nenum Fields {\r\n  TOKEN0 = 0,\r\n  TOKEN1 = 1\r\n}\r\n\r\nexport default function PoolFinder() {\r\n  const theme = useContext(ThemeContext)\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some(V2Pair => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  const [showSearch, setShowSearch] = useState<boolean>(false)\r\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\r\n\r\n  const [currency0, setCurrency0] = useState<Currency | null>(DEV)\r\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\r\n\r\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\r\n  const addPair = usePairAdder()\r\n  useEffect(() => {\r\n    if (pair) {\r\n      addPair(pair)\r\n    }\r\n  }, [pair, addPair])\r\n\r\n  const validPairNoLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS ||\r\n    Boolean(\r\n      pairState === PairState.EXISTS &&\r\n        pair &&\r\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\r\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0))\r\n    )\r\n\r\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\r\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      if (activeField === Fields.TOKEN0) {\r\n        setCurrency0(currency)\r\n      } else {\r\n        setCurrency1(currency)\r\n      }\r\n    },\r\n    [activeField]\r\n  )\r\n\r\n  const handleSearchDismiss = useCallback(() => {\r\n    setShowSearch(false)\r\n  }, [setShowSearch])\r\n\r\n  const prerequisiteMessage = (\r\n    <LightCard padding=\"45px 10px\">\r\n      <Text textAlign=\"center\">\r\n        {!account ? 'Connect to a wallet to find pools' : 'Select a token to find your liquidity.'}\r\n      </Text>\r\n    </LightCard>\r\n  )\r\n\r\n  return (\r\n    <AppBody>\r\n      <StakeTabs active={'earn'} />\r\n      {!account ? (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  {t('connectToViewLiquidity')}\r\n                </TYPE.body>\r\n              </LightCard>\r\n            ) : v2IsLoading ? (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  <Dots>{t('loading')}</Dots>\r\n                </TYPE.body>\r\n              </LightCard>\r\n            ) : allV2PairsWithLiquidity?.length > 0 ? (\r\n              <>\r\n                {allV2PairsWithLiquidity.map(v2Pair => (\r\n                  <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  {t('noLiquidityFound')}\r\n                </TYPE.body>\r\n              </LightCard>\r\n            )}\r\n    </AppBody>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}