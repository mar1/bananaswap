{"ast":null,"code":"import { DEV, Token, TokenAmount, WDEV } from 'moonbeamswap';\nexport function wrappedCurrency(currency, chainId) {\n  return chainId && currency === DEV ? WDEV[chainId] : currency instanceof Token ? currency : undefined;\n}\nexport function wrappedCurrencyAmount(currencyAmount, chainId) {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined;\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined;\n}\nexport function unwrappedToken(token) {\n  if (token.equals(WDEV[token.chainId])) return DEV;\n  return token;\n}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/utils/wrappedCurrency.ts"],"names":["DEV","Token","TokenAmount","WDEV","wrappedCurrency","currency","chainId","undefined","wrappedCurrencyAmount","currencyAmount","token","raw","unwrappedToken","equals"],"mappings":"AAAA,SAA4CA,GAA5C,EAAiDC,KAAjD,EAAwDC,WAAxD,EAAqEC,IAArE,QAAiF,cAAjF;AAEA,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAyDC,OAAzD,EAA0G;AAC/G,SAAOA,OAAO,IAAID,QAAQ,KAAKL,GAAxB,GAA8BG,IAAI,CAACG,OAAD,CAAlC,GAA8CD,QAAQ,YAAYJ,KAApB,GAA4BI,QAA5B,GAAuCE,SAA5F;AACD;AAED,OAAO,SAASC,qBAAT,CACLC,cADK,EAELH,OAFK,EAGoB;AACzB,QAAMI,KAAK,GAAGD,cAAc,IAAIH,OAAlB,GAA4BF,eAAe,CAACK,cAAc,CAACJ,QAAhB,EAA0BC,OAA1B,CAA3C,GAAgFC,SAA9F;AACA,SAAOG,KAAK,IAAID,cAAT,GAA0B,IAAIP,WAAJ,CAAgBQ,KAAhB,EAAuBD,cAAc,CAACE,GAAtC,CAA1B,GAAuEJ,SAA9E;AACD;AAED,OAAO,SAASK,cAAT,CAAwBF,KAAxB,EAAgD;AACrD,MAAIA,KAAK,CAACG,MAAN,CAAaV,IAAI,CAACO,KAAK,CAACJ,OAAP,CAAjB,CAAJ,EAAuC,OAAON,GAAP;AACvC,SAAOU,KAAP;AACD","sourcesContent":["import { ChainId, Currency, CurrencyAmount, DEV, Token, TokenAmount, WDEV } from 'moonbeamswap'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === DEV ? WDEV[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WDEV[token.chainId])) return DEV\n  return token\n}\n"]},"metadata":{},"sourceType":"module"}