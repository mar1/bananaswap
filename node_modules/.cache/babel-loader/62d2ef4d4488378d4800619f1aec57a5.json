{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _toConsumableArray from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{BigNumber}from'@ethersproject/bignumber';import{currencyEquals,DEV,WDEV}from'moonbeamswap';import React,{useCallback,useContext,useState}from'react';import{Plus}from'react-feather';import ReactGA from'react-ga';import{Text}from'rebass';import{ThemeContext}from'styled-components';import{ButtonError,ButtonLight,ButtonPrimary}from'../../components/Button';import{BlueCard}from'../../components/Card';import{AutoColumn,ColumnCenter}from'../../components/Column';import TransactionConfirmationModal,{ConfirmationModalContent}from'../../components/TransactionConfirmationModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import DoubleCurrencyLogo from'../../components/DoubleLogo';import{AddRemoveTabs}from'../../components/NavigationTabs';import{MinimalPositionCard}from'../../components/PositionCard';import Row,{RowBetween,RowFlat}from'../../components/Row';import{ROUTER_ADDRESS}from'../../constants';import{PairState}from'../../data/Reserves';import{useActiveWeb3React}from'../../hooks';import{useCurrency}from'../../hooks/Tokens';import{ApprovalState,useApproveCallback}from'../../hooks/useApproveCallback';import{useWalletModalToggle}from'../../state/application/hooks';import{Field}from'../../state/mint/actions';import{useDerivedMintInfo,useMintActionHandlers,useMintState}from'../../state/mint/hooks';import{useTransactionAdder}from'../../state/transactions/hooks';import{useIsExpertMode,useUserDeadline,useUserSlippageTolerance}from'../../state/user/hooks';import{TYPE}from'../../theme';import{calculateGasMargin,calculateSlippageAmount,getRouterContract}from'../../utils';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{wrappedCurrency}from'../../utils/wrappedCurrency';import AppBody from'../AppBody';import{Dots,Wrapper}from'../Pool/styleds';import{ConfirmAddModalBottom}from'./ConfirmAddModalBottom';import{currencyId}from'../../utils/currencyId';import{PoolPriceBar}from'./PoolPriceBar';export default function AddLiquidity(_ref){var _parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$Field$,_currencies$Field$CUR5,_parsedAmounts$Field$2,_currencies$Field$CUR6,_currencies$Field$CUR7,_currencies$Field$CUR8,_currencies$Field$CUR9,_currencies$Field$CUR10;var _ref$match$params=_ref.match.params,currencyIdA=_ref$match$params.currencyIdA,currencyIdB=_ref$match$params.currencyIdB,history=_ref.history;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId,library=_useActiveWeb3React.library;var theme=useContext(ThemeContext);var currencyA=useCurrency(currencyIdA);var currencyB=useCurrency(currencyIdB);var oneCurrencyIsWDEV=Boolean(chainId&&(currencyA&&currencyEquals(currencyA,WDEV[chainId])||currencyB&&currencyEquals(currencyB,WDEV[chainId])));var toggleWalletModal=useWalletModalToggle();// toggle wallet when disconnected\nvar expertMode=useIsExpertMode();// mint state\nvar _useMintState=useMintState(),independentField=_useMintState.independentField,typedValue=_useMintState.typedValue,otherTypedValue=_useMintState.otherTypedValue;var _useDerivedMintInfo=useDerivedMintInfo(currencyA!==null&&currencyA!==void 0?currencyA:undefined,currencyB!==null&&currencyB!==void 0?currencyB:undefined),dependentField=_useDerivedMintInfo.dependentField,currencies=_useDerivedMintInfo.currencies,pair=_useDerivedMintInfo.pair,pairState=_useDerivedMintInfo.pairState,currencyBalances=_useDerivedMintInfo.currencyBalances,parsedAmounts=_useDerivedMintInfo.parsedAmounts,price=_useDerivedMintInfo.price,noLiquidity=_useDerivedMintInfo.noLiquidity,liquidityMinted=_useDerivedMintInfo.liquidityMinted,poolTokenPercentage=_useDerivedMintInfo.poolTokenPercentage,error=_useDerivedMintInfo.error;var _useMintActionHandler=useMintActionHandlers(noLiquidity),onFieldAInput=_useMintActionHandler.onFieldAInput,onFieldBInput=_useMintActionHandler.onFieldBInput;var isValid=!error;// modal and loading\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),showConfirm=_useState2[0],setShowConfirm=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),attemptingTxn=_useState4[0],setAttemptingTxn=_useState4[1];// clicked confirm\n// txn values\nvar _useUserDeadline=useUserDeadline(),_useUserDeadline2=_slicedToArray(_useUserDeadline,1),deadline=_useUserDeadline2[0];// custom from users settings\nvar _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// custom from users\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),txHash=_useState6[0],setTxHash=_useState6[1];// get formatted amounts\nvar formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,noLiquidity?otherTypedValue:(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);// get the max amounts user can add\nvar maxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce(function(accumulator,field){return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},field,maxAmountSpend(currencyBalances[field])));},{});var atMaxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce(function(accumulator,field){var _maxAmounts$field,_parsedAmounts$field;return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},field,(_maxAmounts$field=maxAmounts[field])===null||_maxAmounts$field===void 0?void 0:_maxAmounts$field.equalTo((_parsedAmounts$field=parsedAmounts[field])!==null&&_parsedAmounts$field!==void 0?_parsedAmounts$field:'0')));},{});// check whether the user has approved the router on the tokens\nvar _useApproveCallback=useApproveCallback(parsedAmounts[Field.CURRENCY_A],ROUTER_ADDRESS[chainId?chainId:'']),_useApproveCallback2=_slicedToArray(_useApproveCallback,2),approvalA=_useApproveCallback2[0],approveACallback=_useApproveCallback2[1];var _useApproveCallback3=useApproveCallback(parsedAmounts[Field.CURRENCY_B],ROUTER_ADDRESS[chainId?chainId:'']),_useApproveCallback4=_slicedToArray(_useApproveCallback3,2),approvalB=_useApproveCallback4[0],approveBCallback=_useApproveCallback4[1];var addTransaction=useTransactionAdder();function onAdd(){return _onAdd.apply(this,arguments);}function _onAdd(){_onAdd=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _amountsMin;var router,parsedAmountA,parsedAmountB,amountsMin,deadlineFromNow,estimate,method,args,value,_wrappedCurrency$addr,_wrappedCurrency,tokenBIsETH,_wrappedCurrency$addr2,_wrappedCurrency2,_wrappedCurrency$addr3,_wrappedCurrency3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!chainId||!library||!account)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:router=getRouterContract(chainId,library,account);parsedAmountA=parsedAmounts[Field.CURRENCY_A],parsedAmountB=parsedAmounts[Field.CURRENCY_B];if(!(!parsedAmountA||!parsedAmountB||!currencyA||!currencyB)){_context.next=6;break;}return _context.abrupt(\"return\");case 6:amountsMin=(_amountsMin={},_defineProperty(_amountsMin,Field.CURRENCY_A,calculateSlippageAmount(parsedAmountA,noLiquidity?0:allowedSlippage)[0]),_defineProperty(_amountsMin,Field.CURRENCY_B,calculateSlippageAmount(parsedAmountB,noLiquidity?0:allowedSlippage)[0]),_amountsMin);deadlineFromNow=Math.ceil(Date.now()/1000)+deadline;if(currencyA===DEV||currencyB===DEV){tokenBIsETH=currencyB===DEV;estimate=router.estimateGas.addLiquidityETH;method=router.addLiquidityETH;args=[(_wrappedCurrency$addr=(_wrappedCurrency=wrappedCurrency(tokenBIsETH?currencyA:currencyB,chainId))===null||_wrappedCurrency===void 0?void 0:_wrappedCurrency.address)!==null&&_wrappedCurrency$addr!==void 0?_wrappedCurrency$addr:'',// token\n(tokenBIsETH?parsedAmountA:parsedAmountB).raw.toString(),// token desired\namountsMin[tokenBIsETH?Field.CURRENCY_A:Field.CURRENCY_B].toString(),// token min\namountsMin[tokenBIsETH?Field.CURRENCY_B:Field.CURRENCY_A].toString(),// DEV min\naccount,deadlineFromNow];value=BigNumber.from((tokenBIsETH?parsedAmountB:parsedAmountA).raw.toString());}else{estimate=router.estimateGas.addLiquidity;method=router.addLiquidity;args=[(_wrappedCurrency$addr2=(_wrappedCurrency2=wrappedCurrency(currencyA,chainId))===null||_wrappedCurrency2===void 0?void 0:_wrappedCurrency2.address)!==null&&_wrappedCurrency$addr2!==void 0?_wrappedCurrency$addr2:'',(_wrappedCurrency$addr3=(_wrappedCurrency3=wrappedCurrency(currencyB,chainId))===null||_wrappedCurrency3===void 0?void 0:_wrappedCurrency3.address)!==null&&_wrappedCurrency$addr3!==void 0?_wrappedCurrency$addr3:'',parsedAmountA.raw.toString(),parsedAmountB.raw.toString(),amountsMin[Field.CURRENCY_A].toString(),amountsMin[Field.CURRENCY_B].toString(),account,deadlineFromNow];value=null;}setAttemptingTxn(true);_context.next=12;return estimate.apply(void 0,_toConsumableArray(args).concat([value?{value:value}:{}])).then(function(estimatedGasLimit){return method.apply(void 0,_toConsumableArray(args).concat([_objectSpread(_objectSpread({},value?{value:value}:{}),{},{gasLimit:calculateGasMargin(estimatedGasLimit)})])).then(function(response){var _parsedAmounts$Field$3,_currencies$Field$CUR11,_parsedAmounts$Field$4,_currencies$Field$CUR12,_currencies$Field$CUR13,_currencies$Field$CUR14;setAttemptingTxn(false);addTransaction(response,{summary:'Add '+((_parsedAmounts$Field$3=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$3===void 0?void 0:_parsedAmounts$Field$3.toSignificant(3))+' '+((_currencies$Field$CUR11=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR11===void 0?void 0:_currencies$Field$CUR11.symbol)+' and '+((_parsedAmounts$Field$4=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$4===void 0?void 0:_parsedAmounts$Field$4.toSignificant(3))+' '+((_currencies$Field$CUR12=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR12===void 0?void 0:_currencies$Field$CUR12.symbol)});setTxHash(response.hash);ReactGA.event({category:'Liquidity',action:'Add',label:[(_currencies$Field$CUR13=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR13===void 0?void 0:_currencies$Field$CUR13.symbol,(_currencies$Field$CUR14=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR14===void 0?void 0:_currencies$Field$CUR14.symbol].join('/')});});}).catch(function(error){setAttemptingTxn(false);// we only care if the error is something _other_ than the user rejected the tx\n// we only care if the error is something _other_ than the user rejected the tx\nif((error===null||error===void 0?void 0:error.code)!==4001){console.error(error);}});case 12:case\"end\":return _context.stop();}}},_callee);}));return _onAdd.apply(this,arguments);}var modalHeader=function modalHeader(){var _currencies$Field$CUR,_currencies$Field$CUR2,_currencies$Field$CUR3,_currencies$Field$CUR4;return noLiquidity?/*#__PURE__*/React.createElement(AutoColumn,{gap:\"20px\"},/*#__PURE__*/React.createElement(RowFlat,null,/*#__PURE__*/React.createElement(Text,{fontSize:\"48px\",fontWeight:500,lineHeight:\"42px\",marginRight:10},((_currencies$Field$CUR=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR===void 0?void 0:_currencies$Field$CUR.symbol)+'/'+((_currencies$Field$CUR2=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR2===void 0?void 0:_currencies$Field$CUR2.symbol)),/*#__PURE__*/React.createElement(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30}))):/*#__PURE__*/React.createElement(AutoColumn,{gap:\"20px\"},/*#__PURE__*/React.createElement(RowFlat,{style:{marginTop:'20px'}},/*#__PURE__*/React.createElement(Text,{fontSize:\"48px\",fontWeight:500,lineHeight:\"42px\",marginRight:10},liquidityMinted===null||liquidityMinted===void 0?void 0:liquidityMinted.toSignificant(6)),/*#__PURE__*/React.createElement(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{fontSize:\"24px\"},((_currencies$Field$CUR3=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR3===void 0?void 0:_currencies$Field$CUR3.symbol)+'/'+((_currencies$Field$CUR4=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR4===void 0?void 0:_currencies$Field$CUR4.symbol)+' Pool Tokens')),/*#__PURE__*/React.createElement(TYPE.italic,{fontSize:12,textAlign:\"left\",padding:'8px 0 0 0 '},\"Output is estimated. If the price changes by more than \".concat(allowedSlippage/100,\"% your transaction will revert.\")));};var modalBottom=function modalBottom(){return/*#__PURE__*/React.createElement(ConfirmAddModalBottom,{price:price,currencies:currencies,parsedAmounts:parsedAmounts,noLiquidity:noLiquidity,onAdd:onAdd,poolTokenPercentage:poolTokenPercentage});};var pendingText=\"Supplying \".concat((_parsedAmounts$Field$=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.toSignificant(6),\" \").concat((_currencies$Field$CUR5=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR5===void 0?void 0:_currencies$Field$CUR5.symbol,\" and \").concat((_parsedAmounts$Field$2=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$2===void 0?void 0:_parsedAmounts$Field$2.toSignificant(6),\" \").concat((_currencies$Field$CUR6=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR6===void 0?void 0:_currencies$Field$CUR6.symbol);var handleCurrencyASelect=useCallback(function(currencyA){var newCurrencyIdA=currencyId(currencyA);if(newCurrencyIdA===currencyIdB){history.push(\"/add/\".concat(currencyIdB,\"/\").concat(currencyIdA));}else{history.push(\"/add/\".concat(newCurrencyIdA,\"/\").concat(currencyIdB));}},[currencyIdB,history,currencyIdA]);var handleCurrencyBSelect=useCallback(function(currencyB){var newCurrencyIdB=currencyId(currencyB);if(currencyIdA===newCurrencyIdB){if(currencyIdB){history.push(\"/add/\".concat(currencyIdB,\"/\").concat(newCurrencyIdB));}else{history.push(\"/add/\".concat(newCurrencyIdB));}}else{history.push(\"/add/\".concat(currencyIdA?currencyIdA:'ETH',\"/\").concat(newCurrencyIdB));}},[currencyIdA,history,currencyIdB]);var handleDismissConfirmation=useCallback(function(){setShowConfirm(false);// if there was a tx hash, we want to clear the input\nif(txHash){onFieldAInput('');}setTxHash('');},[onFieldAInput,txHash]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppBody,null,/*#__PURE__*/React.createElement(AddRemoveTabs,{adding:true}),/*#__PURE__*/React.createElement(Wrapper,null,/*#__PURE__*/React.createElement(TransactionConfirmationModal,{isOpen:showConfirm,onDismiss:handleDismissConfirmation,attemptingTxn:attemptingTxn,hash:txHash,content:function content(){return/*#__PURE__*/React.createElement(ConfirmationModalContent,{title:noLiquidity?'You are creating a pool':'You will receive',onDismiss:handleDismissConfirmation,topContent:modalHeader,bottomContent:modalBottom});},pendingText:pendingText}),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"20px\"},noLiquidity&&/*#__PURE__*/React.createElement(ColumnCenter,null,/*#__PURE__*/React.createElement(BlueCard,null,/*#__PURE__*/React.createElement(AutoColumn,{gap:\"10px\"},/*#__PURE__*/React.createElement(TYPE.link,{fontWeight:600,color:'primaryText1'},\"You are the first liquidity provider.\"),/*#__PURE__*/React.createElement(TYPE.link,{fontWeight:400,color:'primaryText1'},\"The ratio of tokens you add will set the price of this pool.\"),/*#__PURE__*/React.createElement(TYPE.link,{fontWeight:400,color:'primaryText1'},\"Once you are happy with the rate click supply to review.\")))),/*#__PURE__*/React.createElement(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_A],onUserInput:onFieldAInput,onMax:function onMax(){var _maxAmounts$Field$CUR,_maxAmounts$Field$CUR2;onFieldAInput((_maxAmounts$Field$CUR=(_maxAmounts$Field$CUR2=maxAmounts[Field.CURRENCY_A])===null||_maxAmounts$Field$CUR2===void 0?void 0:_maxAmounts$Field$CUR2.toExact())!==null&&_maxAmounts$Field$CUR!==void 0?_maxAmounts$Field$CUR:'');},onCurrencySelect:handleCurrencyASelect,showMaxButton:!atMaxAmounts[Field.CURRENCY_A],currency:currencies[Field.CURRENCY_A],id:\"add-liquidity-input-tokena\",showCommonBases:true}),/*#__PURE__*/React.createElement(ColumnCenter,null,/*#__PURE__*/React.createElement(Plus,{size:\"16\",color:theme.text2})),/*#__PURE__*/React.createElement(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_B],onUserInput:onFieldBInput,onCurrencySelect:handleCurrencyBSelect,onMax:function onMax(){var _maxAmounts$Field$CUR3,_maxAmounts$Field$CUR4;onFieldBInput((_maxAmounts$Field$CUR3=(_maxAmounts$Field$CUR4=maxAmounts[Field.CURRENCY_B])===null||_maxAmounts$Field$CUR4===void 0?void 0:_maxAmounts$Field$CUR4.toExact())!==null&&_maxAmounts$Field$CUR3!==void 0?_maxAmounts$Field$CUR3:'');},showMaxButton:!atMaxAmounts[Field.CURRENCY_B],currency:currencies[Field.CURRENCY_B],id:\"add-liquidity-input-tokenb\",showCommonBases:true}),currencies[Field.CURRENCY_A]&&currencies[Field.CURRENCY_B]&&pairState!==PairState.INVALID&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(RowBetween,{padding:\"1rem\"},/*#__PURE__*/React.createElement(TYPE.subHeader,{fontWeight:500,fontSize:14},noLiquidity?'Initial prices':'Prices',\" and pool share\")),' ',/*#__PURE__*/React.createElement(PoolPriceBar,{currencies:currencies,poolTokenPercentage:poolTokenPercentage,noLiquidity:noLiquidity,price:price})),!account?/*#__PURE__*/React.createElement(ButtonLight,{onClick:toggleWalletModal},\"Connect Wallet\"):/*#__PURE__*/React.createElement(AutoColumn,{gap:'md'},(approvalA===ApprovalState.NOT_APPROVED||approvalA===ApprovalState.PENDING||approvalB===ApprovalState.NOT_APPROVED||approvalB===ApprovalState.PENDING)&&isValid&&/*#__PURE__*/React.createElement(RowBetween,null,approvalA!==ApprovalState.APPROVED&&/*#__PURE__*/React.createElement(ButtonPrimary,{onClick:approveACallback,disabled:approvalA===ApprovalState.PENDING,width:approvalB!==ApprovalState.APPROVED?'48%':'100%'},approvalA===ApprovalState.PENDING?/*#__PURE__*/React.createElement(Dots,null,\"Approving \",(_currencies$Field$CUR7=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR7===void 0?void 0:_currencies$Field$CUR7.symbol):'Approve '+((_currencies$Field$CUR8=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR8===void 0?void 0:_currencies$Field$CUR8.symbol)),approvalB!==ApprovalState.APPROVED&&/*#__PURE__*/React.createElement(ButtonPrimary,{onClick:approveBCallback,disabled:approvalB===ApprovalState.PENDING,width:approvalA!==ApprovalState.APPROVED?'48%':'100%'},approvalB===ApprovalState.PENDING?/*#__PURE__*/React.createElement(Dots,null,\"Approving \",(_currencies$Field$CUR9=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR9===void 0?void 0:_currencies$Field$CUR9.symbol):'Approve '+((_currencies$Field$CUR10=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR10===void 0?void 0:_currencies$Field$CUR10.symbol))),/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){expertMode?onAdd():setShowConfirm(true);},disabled:!isValid||approvalA!==ApprovalState.APPROVED||approvalB!==ApprovalState.APPROVED,error:!isValid&&!!parsedAmounts[Field.CURRENCY_A]&&!!parsedAmounts[Field.CURRENCY_B]},/*#__PURE__*/React.createElement(Text,{fontSize:20,fontWeight:500},error!==null&&error!==void 0?error:'Supply')))))),pair&&!noLiquidity&&pairState!==PairState.INVALID?/*#__PURE__*/React.createElement(AutoColumn,{style:{minWidth:'20rem',marginTop:'1rem'}},/*#__PURE__*/React.createElement(MinimalPositionCard,{showUnwrapped:oneCurrencyIsWDEV,pair:pair})):null);}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/pages/AddLiquidity/index.tsx"],"names":["BigNumber","currencyEquals","DEV","WDEV","React","useCallback","useContext","useState","Plus","ReactGA","Text","ThemeContext","ButtonError","ButtonLight","ButtonPrimary","BlueCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFlat","ROUTER_ADDRESS","PairState","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useWalletModalToggle","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserDeadline","useUserSlippageTolerance","TYPE","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","AppBody","Dots","Wrapper","ConfirmAddModalBottom","currencyId","PoolPriceBar","AddLiquidity","match","params","currencyIdA","currencyIdB","history","account","chainId","library","theme","currencyA","currencyB","oneCurrencyIsWDEV","Boolean","toggleWalletModal","expertMode","independentField","typedValue","otherTypedValue","undefined","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","equalTo","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","deadlineFromNow","Math","ceil","Date","now","tokenBIsETH","estimate","estimateGas","addLiquidityETH","method","args","address","raw","toString","value","from","addLiquidity","then","estimatedGasLimit","gasLimit","response","summary","symbol","hash","event","category","action","label","join","catch","code","console","modalHeader","marginTop","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","push","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","toExact","text2","INVALID","NOT_APPROVED","PENDING","APPROVED","minWidth"],"mappings":"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","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, DEV, TokenAmount, WDEV } from 'moonbeamswap'\r\nimport React, { useCallback, useContext, useState } from 'react'\r\nimport { Plus } from 'react-feather'\r\nimport ReactGA from 'react-ga'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\r\nimport { BlueCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\r\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween, RowFlat } from '../../components/Row'\r\n\r\nimport { ROUTER_ADDRESS } from '../../constants'\r\nimport { PairState } from '../../data/Reserves'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport { useWalletModalToggle } from '../../state/application/hooks'\r\nimport { Field } from '../../state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { TYPE } from '../../theme'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport AppBody from '../AppBody'\r\nimport { Dots, Wrapper } from '../Pool/styleds'\r\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { PoolPriceBar } from './PoolPriceBar'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB }\r\n  },\r\n  history\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n\r\n  const oneCurrencyIsWDEV = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(currencyA, WDEV[chainId])) ||\r\n        (currencyB && currencyEquals(currencyB, WDEV[chainId])))\r\n  )\r\n\r\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\r\n\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [deadline] = useUserDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field])\r\n      }\r\n    },\r\n    {}\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0')\r\n      }\r\n    },\r\n    {}\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(\r\n    parsedAmounts[Field.CURRENCY_A],\r\n    ROUTER_ADDRESS[chainId ? chainId : '']\r\n  )\r\n  const [approvalB, approveBCallback] = useApproveCallback(\r\n    parsedAmounts[Field.CURRENCY_B],\r\n    ROUTER_ADDRESS[chainId ? chainId : '']\r\n  )\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\r\n    }\r\n\r\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    let estimate,\r\n      method: (...args: any) => Promise<TransactionResponse>,\r\n      args: Array<string | string[] | number>,\r\n      value: BigNumber | null\r\n    if (currencyA === DEV || currencyB === DEV) {\r\n      const tokenBIsETH = currencyB === DEV\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // DEV min\r\n        account,\r\n        deadlineFromNow\r\n      ]\r\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadlineFromNow\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    await estimate(...args, value ? { value } : {})\r\n      .then(estimatedGasLimit =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit)\r\n        }).then(response => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary:\r\n              'Add ' +\r\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\r\n              ' ' +\r\n              currencies[Field.CURRENCY_A]?.symbol +\r\n              ' and ' +\r\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\r\n              ' ' +\r\n              currencies[Field.CURRENCY_B]?.symbol\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n\r\n          ReactGA.event({\r\n            category: 'Liquidity',\r\n            action: 'Add',\r\n            label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/')\r\n          })\r\n        })\r\n      )\r\n      .catch(error => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (error?.code !== 4001) {\r\n          console.error(error)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <AutoColumn gap=\"20px\">\r\n   \r\n          <RowFlat>\r\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\r\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\r\n            </Text>\r\n            <DoubleCurrencyLogo\r\n              currency0={currencies[Field.CURRENCY_A]}\r\n              currency1={currencies[Field.CURRENCY_B]}\r\n              size={30}\r\n            />\r\n          </RowFlat>\r\n      \r\n      </AutoColumn>\r\n    ) : (\r\n      <AutoColumn gap=\"20px\">\r\n        <RowFlat style={{ marginTop: '20px' }}>\r\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </RowFlat>\r\n        <Row>\r\n          <Text fontSize=\"24px\">\r\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\r\n          </Text>\r\n        </Row>\r\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\r\n          {`Output is estimated. If the price changes by more than ${allowedSlippage /\r\n            100}% your transaction will revert.`}\r\n        </TYPE.italic>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\r\n    currencies[Field.CURRENCY_A]?.symbol\r\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA]\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB]\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  return (\r\n    <>\r\n      <AppBody>\r\n        <AddRemoveTabs adding={true} />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash}\r\n            content={() => (\r\n              <ConfirmationModalContent\r\n                title={noLiquidity ? 'You are creating a pool' : 'You will receive'}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <AutoColumn gap=\"20px\">\r\n            {noLiquidity && (\r\n              <ColumnCenter>\r\n                <BlueCard>\r\n                  <AutoColumn gap=\"10px\">\r\n                    <TYPE.link fontWeight={600} color={'primaryText1'}>\r\n                      You are the first liquidity provider.\r\n                    </TYPE.link>\r\n                    <TYPE.link fontWeight={400} color={'primaryText1'}>\r\n                      The ratio of tokens you add will set the price of this pool.\r\n                    </TYPE.link>\r\n                    <TYPE.link fontWeight={400} color={'primaryText1'}>\r\n                      Once you are happy with the rate click supply to review.\r\n                    </TYPE.link>\r\n                  </AutoColumn>\r\n                </BlueCard>\r\n              </ColumnCenter>\r\n            )}\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_A]}\r\n              onUserInput={onFieldAInput}\r\n              onMax={() => {\r\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n              }}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n              currency={currencies[Field.CURRENCY_A]}\r\n              id=\"add-liquidity-input-tokena\"\r\n              showCommonBases\r\n            />\r\n            <ColumnCenter>\r\n              <Plus size=\"16\" color={theme.text2} />\r\n            </ColumnCenter>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_B]}\r\n              onUserInput={onFieldBInput}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              onMax={() => {\r\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n              }}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n              currency={currencies[Field.CURRENCY_B]}\r\n              id=\"add-liquidity-input-tokenb\"\r\n              showCommonBases\r\n            />\r\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n              <>\r\n             \r\n                  <RowBetween padding=\"1rem\">\r\n                    <TYPE.subHeader fontWeight={500} fontSize={14}>\r\n                      {noLiquidity ? 'Initial prices' : 'Prices'} and pool share\r\n                    </TYPE.subHeader>\r\n                  </RowBetween>{' '}\r\n              \r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n           \r\n           \r\n              </>\r\n            )}\r\n\r\n            {!account ? (\r\n              <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\r\n            ) : (\r\n              <AutoColumn gap={'md'}>\r\n                {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                  approvalA === ApprovalState.PENDING ||\r\n                  approvalB === ApprovalState.NOT_APPROVED ||\r\n                  approvalB === ApprovalState.PENDING) &&\r\n                  isValid && (\r\n                    <RowBetween>\r\n                      {approvalA !== ApprovalState.APPROVED && (\r\n                        <ButtonPrimary\r\n                          onClick={approveACallback}\r\n                          disabled={approvalA === ApprovalState.PENDING}\r\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\r\n                          ) : (\r\n                            'Approve ' + currencies[Field.CURRENCY_A]?.symbol\r\n                          )}\r\n                        </ButtonPrimary>\r\n                      )}\r\n                      {approvalB !== ApprovalState.APPROVED && (\r\n                        <ButtonPrimary\r\n                          onClick={approveBCallback}\r\n                          disabled={approvalB === ApprovalState.PENDING}\r\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\r\n                          ) : (\r\n                            'Approve ' + currencies[Field.CURRENCY_B]?.symbol\r\n                          )}\r\n                        </ButtonPrimary>\r\n                      )}\r\n                    </RowBetween>\r\n                  )}\r\n                <ButtonError\r\n                  onClick={() => {\r\n                    expertMode ? onAdd() : setShowConfirm(true)\r\n                  }}\r\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\r\n                >\r\n                  <Text fontSize={20} fontWeight={500}>\r\n                    {error ?? 'Supply'}\r\n                  </Text>\r\n                </ButtonError>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n        </Wrapper>\r\n      </AppBody>\r\n\r\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWDEV} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}