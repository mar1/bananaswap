{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\src\\\\components\\\\SearchModal\\\\ListSelect.tsx\";\nimport React, { memo, useCallback, useMemo, useRef, useState } from 'react';\nimport { ArrowLeft } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { usePopper } from 'react-popper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text } from 'rebass';\nimport styled from 'styled-components';\nimport { ReactComponent as DropDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/dropdown.svg\";\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { useTranslation } from 'react-i18next';\nimport useToggle from '../../hooks/useToggle';\nimport { acceptListUpdate, removeList, selectList } from '../../state/lists/actions';\nimport { useSelectedListUrl } from '../../state/lists/hooks';\nimport { CloseIcon, ExternalLink, LinkStyledButton, TYPE } from '../../theme';\nimport listVersionLabel from '../../utils/listVersionLabel';\nimport { parseENSAddress } from '../../utils/parseENSAddress';\nimport uriToHttp from '../../utils/uriToHttp';\nimport { ButtonOutlined, ButtonPrimary, ButtonSecondary } from '../Button';\nimport Column from '../Column';\nimport ListLogo from '../ListLogo';\nimport QuestionHelper from '../QuestionHelper';\nimport Row, { RowBetween } from '../Row';\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds';\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\n  padding: 0;\n  font-size: 1rem;\n  opacity: ${({\n  disabled\n}) => disabled ? '0.4' : '1'};\n`;\nconst PopoverContainer = styled.div`\n  z-index: 100;\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\n  opacity: ${props => props.show ? 1 : 0};\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: ${({\n  theme\n}) => theme.bg2};\n  border: 1px solid ${({\n  theme\n}) => theme.bg3};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  color: ${({\n  theme\n}) => theme.text2};\n  border-radius: 0.5rem;\n  padding: 1rem;\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 8px;\n  font-size: 1rem;\n  text-align: left;\n`;\nconst StyledMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n`;\nconst StyledListUrlText = styled.div`\n  max-width: 160px;\n  opacity: 0.6;\n  margin-right: 0.5rem;\n  font-size: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nfunction ListOrigin({\n  listUrl\n}) {\n  const ensName = useMemo(() => {\n    var _parseENSAddress;\n\n    return (_parseENSAddress = parseENSAddress(listUrl)) === null || _parseENSAddress === void 0 ? void 0 : _parseENSAddress.ensName;\n  }, [listUrl]);\n  const host = useMemo(() => {\n    if (ensName) return undefined;\n    const lowerListUrl = listUrl.toLowerCase();\n\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\n      return listUrl;\n    }\n\n    try {\n      const url = new URL(listUrl);\n      return url.host;\n    } catch (error) {\n      return undefined;\n    }\n  }, [listUrl, ensName]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ensName !== null && ensName !== void 0 ? ensName : host);\n}\n\nfunction listUrlRowHTMLId(listUrl) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`;\n}\n\nconst ListRow = memo(function ListRow({\n  listUrl,\n  onBack\n}) {\n  const listsByUrl = useSelector(state => state.lists.byUrl);\n  const selectedListUrl = useSelectedListUrl();\n  const dispatch = useDispatch();\n  const {\n    current: list,\n    pendingUpdate: pending\n  } = listsByUrl[listUrl];\n  const isSelected = listUrl === selectedListUrl;\n  const {\n    t\n  } = useTranslation();\n  const [open, toggle] = useToggle(false);\n  const node = useRef();\n  const [referenceElement, setReferenceElement] = useState();\n  const [popperElement, setPopperElement] = useState();\n  const {\n    styles,\n    attributes\n  } = usePopper(referenceElement, popperElement, {\n    placement: 'auto',\n    strategy: 'fixed',\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: [8, 8]\n      }\n    }]\n  });\n  useOnClickOutside(node, open ? toggle : undefined);\n  const selectThisList = useCallback(() => {\n    if (isSelected) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Select List',\n      label: listUrl\n    });\n    dispatch(selectList(listUrl));\n    onBack();\n  }, [dispatch, isSelected, listUrl, onBack]);\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from List Select',\n      label: listUrl\n    });\n    dispatch(acceptListUpdate(listUrl));\n  }, [dispatch, listUrl, pending]);\n  const handleRemoveList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Start Remove List',\n      label: listUrl\n    });\n\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Confirm Remove List',\n        label: listUrl\n      });\n      dispatch(removeList(listUrl));\n    }\n  }, [dispatch, listUrl]);\n  if (!list) return null;\n  return /*#__PURE__*/React.createElement(Row, {\n    key: listUrl,\n    align: \"center\",\n    padding: \"16px\",\n    id: listUrlRowHTMLId(listUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, list.logoURI ? /*#__PURE__*/React.createElement(ListLogo, {\n    style: {\n      marginRight: '1rem'\n    },\n    logoURI: list.logoURI,\n    alt: `${list.name} list logo`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '24px',\n      height: '24px',\n      marginRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    style: {\n      flex: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: isSelected ? 500 : 400,\n    fontSize: 16,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, list.name)), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledListUrlText, {\n    title: listUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListOrigin, {\n    listUrl: listUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(StyledMenu, {\n    ref: node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n    style: {\n      width: '2rem',\n      padding: '.8rem .35rem',\n      borderRadius: '12px',\n      fontSize: '14px',\n      marginRight: '0.5rem'\n    },\n    onClick: toggle,\n    ref: setReferenceElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  })), open && /*#__PURE__*/React.createElement(PopoverContainer, Object.assign({\n    show: true,\n    ref: setPopperElement,\n    style: styles.popper\n  }, attributes.popper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, list && listVersionLabel(list.version)), /*#__PURE__*/React.createElement(SeparatorDark, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ExternalLink, {\n    href: `https://tokenlists.org/token-list?url=${listUrl}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"View list\"), /*#__PURE__*/React.createElement(UnpaddedLinkStyledButton, {\n    onClick: handleRemoveList,\n    disabled: Object.keys(listsByUrl).length === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Remove list\"), pending && /*#__PURE__*/React.createElement(UnpaddedLinkStyledButton, {\n    onClick: handleAcceptListUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"Update list\"))), isSelected ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    disabled: true,\n    className: \"select-button\",\n    style: {\n      width: '5rem',\n      minWidth: '5rem',\n      padding: '0.5rem .35rem',\n      borderRadius: '12px',\n      fontSize: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, t('selected')) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    className: \"select-button\",\n    style: {\n      width: '5rem',\n      minWidth: '4.5rem',\n      padding: '0.5rem .35rem',\n      borderRadius: '12px',\n      fontSize: '14px'\n    },\n    onClick: selectThisList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, t('select'))));\n});\nconst AddListButton = styled(ButtonSecondary)`\n  /* height: 1.8rem; */\n  max-width: 4rem;\n  margin-left: 1rem;\n  border-radius: 12px;\n  padding: 10px 18px;\n`;\nconst ListContainer = styled.div`\n  flex: 1;\n  overflow: auto;\n`;\nexport function ListSelect({\n  onDismiss,\n  onBack\n}) {\n  var _lists$listUrlInput;\n\n  const [listUrlInput, setListUrlInput] = useState('');\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists.byUrl);\n  const adding = Boolean((_lists$listUrlInput = lists[listUrlInput]) === null || _lists$listUrlInput === void 0 ? void 0 : _lists$listUrlInput.loadingRequestId);\n  const [addError, setAddError] = useState(null);\n  const {\n    t\n  } = useTranslation();\n  const handleInput = useCallback(e => {\n    setListUrlInput(e.target.value);\n    setAddError(null);\n  }, []);\n  const fetchList = useFetchListCallback();\n  const handleAddList = useCallback(() => {\n    if (adding) return;\n    setAddError(null);\n    fetchList(listUrlInput).then(() => {\n      setListUrlInput('');\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Add List',\n        label: listUrlInput\n      });\n    }).catch(error => {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Add List Failed',\n        label: listUrlInput\n      });\n      setAddError(error.message);\n      dispatch(removeList(listUrlInput));\n    });\n  }, [adding, dispatch, fetchList, listUrlInput]);\n  const validUrl = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput));\n  }, [listUrlInput]);\n  const handleEnterKey = useCallback(e => {\n    if (validUrl && e.key === 'Enter') {\n      handleAddList();\n    }\n  }, [handleAddList, validUrl]);\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists);\n    return listUrls.filter(listUrl => {\n      return Boolean(lists[listUrl].current);\n    }).sort((u1, u2) => {\n      const {\n        current: l1\n      } = lists[u1];\n      const {\n        current: l2\n      } = lists[u2];\n\n      if (l1 && l2) {\n        return l1.name.toLowerCase() < l2.name.toLowerCase() ? -1 : l1.name.toLowerCase() === l2.name.toLowerCase() ? 0 : 1;\n      }\n\n      if (l1) return -1;\n      if (l2) return 1;\n      return 0;\n    });\n  }, [lists]);\n  return /*#__PURE__*/React.createElement(Column, {\n    style: {\n      width: '100%',\n      flex: '1 1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: onBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, t('manageList')), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, \"Add a list\", ' ', /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Token lists are an open specification for lists of ERC20 tokens. You can use any token list by entering its URL below. Beware that third party token lists can contain fake or malicious ERC20 tokens.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"list-add-input\",\n    placeholder: \"https:// or ipfs:// or ENS name\",\n    value: listUrlInput,\n    onChange: handleInput,\n    onKeyDown: handleEnterKey,\n    style: {\n      height: '2.75rem',\n      borderRadius: 12,\n      padding: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddListButton, {\n    onClick: handleAddList,\n    disabled: !validUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, t('add'))), addError ? /*#__PURE__*/React.createElement(TYPE.error, {\n    title: addError,\n    style: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 11\n    }\n  }, addError) : null), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }\n  }, sortedLists.map(listUrl => /*#__PURE__*/React.createElement(ListRow, {\n    key: listUrl,\n    listUrl: listUrl,\n    onBack: onBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '16px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    href: \"https://tokenlists.org\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, t('browseList'))));\n}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/components/SearchModal/ListSelect.tsx"],"names":["React","memo","useCallback","useMemo","useRef","useState","ArrowLeft","ReactGA","usePopper","useDispatch","useSelector","Text","styled","useFetchListCallback","useOnClickOutside","useTranslation","useToggle","acceptListUpdate","removeList","selectList","useSelectedListUrl","CloseIcon","ExternalLink","LinkStyledButton","TYPE","listVersionLabel","parseENSAddress","uriToHttp","ButtonOutlined","ButtonPrimary","ButtonSecondary","Column","ListLogo","QuestionHelper","Row","RowBetween","PaddedColumn","SearchInput","Separator","SeparatorDark","UnpaddedLinkStyledButton","disabled","PopoverContainer","div","props","show","theme","bg2","bg3","text2","StyledMenu","StyledListUrlText","ListOrigin","listUrl","ensName","host","undefined","lowerListUrl","toLowerCase","startsWith","url","URL","error","listUrlRowHTMLId","replace","ListRow","onBack","listsByUrl","state","lists","byUrl","selectedListUrl","dispatch","current","list","pendingUpdate","pending","isSelected","t","open","toggle","node","referenceElement","setReferenceElement","popperElement","setPopperElement","styles","attributes","placement","strategy","modifiers","name","options","offset","selectThisList","event","category","action","label","handleAcceptListUpdate","handleRemoveList","window","prompt","logoURI","marginRight","width","height","flex","overflow","textOverflow","marginTop","padding","borderRadius","fontSize","popper","version","Object","keys","length","minWidth","AddListButton","ListContainer","ListSelect","onDismiss","listUrlInput","setListUrlInput","adding","Boolean","loadingRequestId","addError","setAddError","handleInput","e","target","value","fetchList","handleAddList","then","catch","message","validUrl","handleEnterKey","key","sortedLists","listUrls","filter","sort","u1","u2","l1","l2","cursor","map","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,OAAnC,EAA4CC,MAA5C,EAAoDC,QAApD,QAAoE,OAApE;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,oBAAT,QAAqC,kCAArC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,UAAvC,QAAyD,2BAAzD;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,gBAAlC,EAAoDC,IAApD,QAAgE,aAAhE;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,eAAxC,QAA+D,WAA/D;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,GAAP,IAAcC,UAAd,QAAgC,QAAhC;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,aAA/C,QAAoE,WAApE;AAEA,MAAMC,wBAAwB,GAAG5B,MAAM,CAACW,gBAAD,CAAmB;AAC1D;AACA;AACA,aAAa,CAAC;AAAEkB,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,GAAG,KAAH,GAAW,GAAK;AACxD,CAJA;AAMA,MAAMC,gBAAgB,GAAG9B,MAAM,CAAC+B,GAAuB;AACvD;AACA,gBAAgBC,KAAK,IAAKA,KAAK,CAACC,IAAN,GAAa,SAAb,GAAyB,QAAU;AAC7D,aAAaD,KAAK,IAAKA,KAAK,CAACC,IAAN,GAAa,CAAb,GAAiB,CAAG;AAC3C;AACA,gBAAgB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,GAAI;AACzC,sBAAsB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,GAAI;AAC/C;AACA;AACA,WAAW,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,KAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAMC,UAAU,GAAGtC,MAAM,CAAC+B,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMQ,iBAAiB,GAAGvC,MAAM,CAAC+B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASS,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAsD;AACpD,QAAMC,OAAO,GAAGnD,OAAO,CAAC;AAAA;;AAAA,+BAAMuB,eAAe,CAAC2B,OAAD,CAArB,qDAAM,iBAA0BC,OAAhC;AAAA,GAAD,EAA0C,CAACD,OAAD,CAA1C,CAAvB;AACA,QAAME,IAAI,GAAGpD,OAAO,CAAC,MAAM;AACzB,QAAImD,OAAJ,EAAa,OAAOE,SAAP;AACb,UAAMC,YAAY,GAAGJ,OAAO,CAACK,WAAR,EAArB;;AACA,QAAID,YAAY,CAACE,UAAb,CAAwB,SAAxB,KAAsCF,YAAY,CAACE,UAAb,CAAwB,SAAxB,CAA1C,EAA8E;AAC5E,aAAON,OAAP;AACD;;AACD,QAAI;AACF,YAAMO,GAAG,GAAG,IAAIC,GAAJ,CAAQR,OAAR,CAAZ;AACA,aAAOO,GAAG,CAACL,IAAX;AACD,KAHD,CAGE,OAAOO,KAAP,EAAc;AACd,aAAON,SAAP;AACD;AACF,GAZmB,EAYjB,CAACH,OAAD,EAAUC,OAAV,CAZiB,CAApB;AAaA,sBAAO,0CAAGA,OAAH,aAAGA,OAAH,cAAGA,OAAH,GAAcC,IAAd,CAAP;AACD;;AAED,SAASQ,gBAAT,CAA0BV,OAA1B,EAA2C;AACzC,SAAQ,YAAWA,OAAO,CAACW,OAAR,CAAgB,KAAhB,EAAuB,GAAvB,CAA4B,EAA/C;AACD;;AAED,MAAMC,OAAO,GAAGhE,IAAI,CAAC,SAASgE,OAAT,CAAiB;AAAEZ,EAAAA,OAAF;AAAWa,EAAAA;AAAX,CAAjB,EAA+E;AAClG,QAAMC,UAAU,GAAGzD,WAAW,CAAuC0D,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAA5D,CAA9B;AACA,QAAMC,eAAe,GAAGnD,kBAAkB,EAA1C;AACA,QAAMoD,QAAQ,GAAG/D,WAAW,EAA5B;AACA,QAAM;AAAEgE,IAAAA,OAAO,EAAEC,IAAX;AAAiBC,IAAAA,aAAa,EAAEC;AAAhC,MAA4CT,UAAU,CAACd,OAAD,CAA5D;AAEA,QAAMwB,UAAU,GAAGxB,OAAO,KAAKkB,eAA/B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAQ/D,cAAc,EAA5B;AAEA,QAAM,CAACgE,IAAD,EAAOC,MAAP,IAAiBhE,SAAS,CAAC,KAAD,CAAhC;AACA,QAAMiE,IAAI,GAAG7E,MAAM,EAAnB;AACA,QAAM,CAAC8E,gBAAD,EAAmBC,mBAAnB,IAA0C9E,QAAQ,EAAxD;AACA,QAAM,CAAC+E,aAAD,EAAgBC,gBAAhB,IAAoChF,QAAQ,EAAlD;AAEA,QAAM;AAAEiF,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAyB/E,SAAS,CAAC0E,gBAAD,EAAmBE,aAAnB,EAAkC;AACxEI,IAAAA,SAAS,EAAE,MAD6D;AAExEC,IAAAA,QAAQ,EAAE,OAF8D;AAGxEC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAV;AAA3B,KAAD;AAH6D,GAAlC,CAAxC;AAMA/E,EAAAA,iBAAiB,CAACmE,IAAD,EAAOF,IAAI,GAAGC,MAAH,GAAYxB,SAAvB,CAAjB;AAEA,QAAMsC,cAAc,GAAG5F,WAAW,CAAC,MAAM;AACvC,QAAI2E,UAAJ,EAAgB;AAChBtE,IAAAA,OAAO,CAACwF,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE,aAFI;AAGZC,MAAAA,KAAK,EAAE7C;AAHK,KAAd;AAMAmB,IAAAA,QAAQ,CAACrD,UAAU,CAACkC,OAAD,CAAX,CAAR;AACAa,IAAAA,MAAM;AACP,GAViC,EAU/B,CAACM,QAAD,EAAWK,UAAX,EAAuBxB,OAAvB,EAAgCa,MAAhC,CAV+B,CAAlC;AAYA,QAAMiC,sBAAsB,GAAGjG,WAAW,CAAC,MAAM;AAC/C,QAAI,CAAC0E,OAAL,EAAc;AACdrE,IAAAA,OAAO,CAACwF,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE,8BAFI;AAGZC,MAAAA,KAAK,EAAE7C;AAHK,KAAd;AAKAmB,IAAAA,QAAQ,CAACvD,gBAAgB,CAACoC,OAAD,CAAjB,CAAR;AACD,GARyC,EAQvC,CAACmB,QAAD,EAAWnB,OAAX,EAAoBuB,OAApB,CARuC,CAA1C;AAUA,QAAMwB,gBAAgB,GAAGlG,WAAW,CAAC,MAAM;AACzCK,IAAAA,OAAO,CAACwF,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE,mBAFI;AAGZC,MAAAA,KAAK,EAAE7C;AAHK,KAAd;;AAKA,QAAIgD,MAAM,CAACC,MAAP,CAAe,oEAAf,MAAyF,QAA7F,EAAsG;AACpG/F,MAAAA,OAAO,CAACwF,KAAR,CAAc;AACZC,QAAAA,QAAQ,EAAE,OADE;AAEZC,QAAAA,MAAM,EAAE,qBAFI;AAGZC,QAAAA,KAAK,EAAE7C;AAHK,OAAd;AAKAmB,MAAAA,QAAQ,CAACtD,UAAU,CAACmC,OAAD,CAAX,CAAR;AACD;AACF,GAdmC,EAcjC,CAACmB,QAAD,EAAWnB,OAAX,CAdiC,CAApC;AAgBA,MAAI,CAACqB,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAErB,OAAV;AAAmB,IAAA,KAAK,EAAC,QAAzB;AAAkC,IAAA,OAAO,EAAC,MAA1C;AAAiD,IAAA,EAAE,EAAEU,gBAAgB,CAACV,OAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGqB,IAAI,CAAC6B,OAAL,gBACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAjB;AAA0C,IAAA,OAAO,EAAE9B,IAAI,CAAC6B,OAAxD;AAAiE,IAAA,GAAG,EAAG,GAAE7B,IAAI,CAACiB,IAAK,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiCF,MAAAA,WAAW,EAAE;AAA9C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,UAAU,EAAE9B,UAAU,GAAG,GAAH,GAAS,GADjC;AAEE,IAAA,QAAQ,EAAE,EAFZ;AAGE,IAAA,KAAK,EAAE;AAAE+B,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,YAAY,EAAE;AAApC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGnC,IAAI,CAACiB,IALR,CADF,CADF,eAUE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAE;AACLmB,MAAAA,SAAS,EAAE;AADN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEzD,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAVF,CANF,eA0BE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE4B,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE;AACLwB,MAAAA,KAAK,EAAE,MADF;AAELM,MAAAA,OAAO,EAAE,cAFJ;AAGLC,MAAAA,YAAY,EAAE,MAHT;AAILC,MAAAA,QAAQ,EAAE,MAJL;AAKLT,MAAAA,WAAW,EAAE;AALR,KADT;AAQE,IAAA,OAAO,EAAExB,MARX;AASE,IAAA,GAAG,EAAEG,mBATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,EAeGJ,IAAI,iBACH,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,IAAxB;AAA8B,IAAA,GAAG,EAAEM,gBAAnC;AAA4D,IAAA,KAAK,EAAEC,MAAM,CAAC4B;AAA1E,KAAsF3B,UAAU,CAAC2B,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMxC,IAAI,IAAIjD,gBAAgB,CAACiD,IAAI,CAACyC,OAAN,CAA9B,CADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAG,yCAAwC9D,OAAQ,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE+C,gBAAnC;AAAqD,IAAA,QAAQ,EAAEgB,MAAM,CAACC,IAAP,CAAYlD,UAAZ,EAAwBmD,MAAxB,KAAmC,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAOG1C,OAAO,iBACN,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEuB,sBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,CAhBJ,CA1BF,EAuDGtB,UAAU,gBACT,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAE,IADZ;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,KAAK,EAAE;AAAE4B,MAAAA,KAAK,EAAE,MAAT;AAAiBc,MAAAA,QAAQ,EAAE,MAA3B;AAAmCR,MAAAA,OAAO,EAAE,eAA5C;AAA6DC,MAAAA,YAAY,EAAE,MAA3E;AAAmFC,MAAAA,QAAQ,EAAE;AAA7F,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGnC,CAAC,CAAC,UAAD,CALJ,CADS,gBAST,uDACE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,KAAK,EAAE;AACL2B,MAAAA,KAAK,EAAE,MADF;AAELc,MAAAA,QAAQ,EAAE,QAFL;AAGLR,MAAAA,OAAO,EAAE,eAHJ;AAILC,MAAAA,YAAY,EAAE,MAJT;AAKLC,MAAAA,QAAQ,EAAE;AALL,KAFT;AASE,IAAA,OAAO,EAAEnB,cATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGhB,CAAC,CAAC,QAAD,CAXJ,CADF,CAhEJ,CADF;AAmFD,CAlJmB,CAApB;AAoJA,MAAM0C,aAAa,GAAG5G,MAAM,CAACkB,eAAD,CAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAM2F,aAAa,GAAG7G,MAAM,CAAC+B,GAAI;AACjC;AACA;AACA,CAHA;AAKA,OAAO,SAAS+E,UAAT,CAAoB;AAAEC,EAAAA,SAAF;AAAazD,EAAAA;AAAb,CAApB,EAA0F;AAAA;;AAC/F,QAAM,CAAC0D,YAAD,EAAeC,eAAf,IAAkCxH,QAAQ,CAAS,EAAT,CAAhD;AAEA,QAAMmE,QAAQ,GAAG/D,WAAW,EAA5B;AACA,QAAM4D,KAAK,GAAG3D,WAAW,CAAuC0D,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAA5D,CAAzB;AACA,QAAMwD,MAAM,GAAGC,OAAO,wBAAC1D,KAAK,CAACuD,YAAD,CAAN,wDAAC,oBAAqBI,gBAAtB,CAAtB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B7H,QAAQ,CAAgB,IAAhB,CAAxC;AAEA,QAAM;AAAEyE,IAAAA;AAAF,MAAQ/D,cAAc,EAA5B;AAEA,QAAMoH,WAAW,GAAGjI,WAAW,CAACkI,CAAC,IAAI;AACnCP,IAAAA,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACAJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAH8B,EAG5B,EAH4B,CAA/B;AAIA,QAAMK,SAAS,GAAG1H,oBAAoB,EAAtC;AAEA,QAAM2H,aAAa,GAAGtI,WAAW,CAAC,MAAM;AACtC,QAAI4H,MAAJ,EAAY;AACZI,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,IAAAA,SAAS,CAACX,YAAD,CAAT,CACGa,IADH,CACQ,MAAM;AACVZ,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAtH,MAAAA,OAAO,CAACwF,KAAR,CAAc;AACZC,QAAAA,QAAQ,EAAE,OADE;AAEZC,QAAAA,MAAM,EAAE,UAFI;AAGZC,QAAAA,KAAK,EAAE0B;AAHK,OAAd;AAKD,KARH,EASGc,KATH,CASS5E,KAAK,IAAI;AACdvD,MAAAA,OAAO,CAACwF,KAAR,CAAc;AACZC,QAAAA,QAAQ,EAAE,OADE;AAEZC,QAAAA,MAAM,EAAE,iBAFI;AAGZC,QAAAA,KAAK,EAAE0B;AAHK,OAAd;AAKAM,MAAAA,WAAW,CAACpE,KAAK,CAAC6E,OAAP,CAAX;AACAnE,MAAAA,QAAQ,CAACtD,UAAU,CAAC0G,YAAD,CAAX,CAAR;AACD,KAjBH;AAkBD,GArBgC,EAqB9B,CAACE,MAAD,EAAStD,QAAT,EAAmB+D,SAAnB,EAA8BX,YAA9B,CArB8B,CAAjC;AAuBA,QAAMgB,QAAiB,GAAGzI,OAAO,CAAC,MAAM;AACtC,WAAOwB,SAAS,CAACiG,YAAD,CAAT,CAAwBN,MAAxB,GAAiC,CAAjC,IAAsCS,OAAO,CAACrG,eAAe,CAACkG,YAAD,CAAhB,CAApD;AACD,GAFgC,EAE9B,CAACA,YAAD,CAF8B,CAAjC;AAIA,QAAMiB,cAAc,GAAG3I,WAAW,CAChCkI,CAAC,IAAI;AACH,QAAIQ,QAAQ,IAAIR,CAAC,CAACU,GAAF,KAAU,OAA1B,EAAmC;AACjCN,MAAAA,aAAa;AACd;AACF,GAL+B,EAMhC,CAACA,aAAD,EAAgBI,QAAhB,CANgC,CAAlC;AASA,QAAMG,WAAW,GAAG5I,OAAO,CAAC,MAAM;AAChC,UAAM6I,QAAQ,GAAG5B,MAAM,CAACC,IAAP,CAAYhD,KAAZ,CAAjB;AACA,WAAO2E,QAAQ,CACZC,MADI,CACG5F,OAAO,IAAI;AACjB,aAAO0E,OAAO,CAAC1D,KAAK,CAAChB,OAAD,CAAL,CAAeoB,OAAhB,CAAd;AACD,KAHI,EAIJyE,IAJI,CAIC,CAACC,EAAD,EAAKC,EAAL,KAAY;AAChB,YAAM;AAAE3E,QAAAA,OAAO,EAAE4E;AAAX,UAAkBhF,KAAK,CAAC8E,EAAD,CAA7B;AACA,YAAM;AAAE1E,QAAAA,OAAO,EAAE6E;AAAX,UAAkBjF,KAAK,CAAC+E,EAAD,CAA7B;;AACA,UAAIC,EAAE,IAAIC,EAAV,EAAc;AACZ,eAAOD,EAAE,CAAC1D,IAAH,CAAQjC,WAAR,KAAwB4F,EAAE,CAAC3D,IAAH,CAAQjC,WAAR,EAAxB,GACH,CAAC,CADE,GAEH2F,EAAE,CAAC1D,IAAH,CAAQjC,WAAR,OAA0B4F,EAAE,CAAC3D,IAAH,CAAQjC,WAAR,EAA1B,GACA,CADA,GAEA,CAJJ;AAKD;;AACD,UAAI2F,EAAJ,EAAQ,OAAO,CAAC,CAAR;AACR,UAAIC,EAAJ,EAAQ,OAAO,CAAP;AACR,aAAO,CAAP;AACD,KAjBI,CAAP;AAkBD,GApB0B,EAoBxB,CAACjF,KAAD,CApBwB,CAA3B;AAsBA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEoC,MAAAA,KAAK,EAAE,MAAT;AAAiBE,MAAAA,IAAI,EAAE;AAAvB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAE4C,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAyC,IAAA,OAAO,EAAErF,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCY,CAAC,CAAC,YAAD,CADF,CAJF,eAOE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE6C,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF,eAaE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAeE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,GADb,eAEE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,wMAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,gBAFL;AAGE,IAAA,WAAW,EAAC,iCAHd;AAIE,IAAA,KAAK,EAAEC,YAJT;AAKE,IAAA,QAAQ,EAAEO,WALZ;AAME,IAAA,SAAS,EAAEU,cANb;AAOE,IAAA,KAAK,EAAE;AAAEnC,MAAAA,MAAM,EAAE,SAAV;AAAqBM,MAAAA,YAAY,EAAE,EAAnC;AAAuCD,MAAAA,OAAO,EAAE;AAAhD,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEyB,aAAxB;AAAuC,IAAA,QAAQ,EAAE,CAACI,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG9D,CAAC,CAAC,KAAD,CADJ,CAVF,CALF,EAmBGmD,QAAQ,gBACP,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAEA,QAAnB;AAA6B,IAAA,KAAK,EAAE;AAAEpB,MAAAA,YAAY,EAAE,UAAhB;AAA4BD,MAAAA,QAAQ,EAAE;AAAtC,KAApC;AAAsF,IAAA,KAAK,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGqB,QADH,CADO,GAIL,IAvBN,CAfF,eAyCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,eA2CE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,WAAW,CAACS,GAAZ,CAAgBnG,OAAO,iBACtB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,OAAd;AAAuB,IAAA,OAAO,EAAEA,OAAhC;AAAyC,IAAA,MAAM,EAAEa,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CA3CF,eAgDE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDF,eAkDE;AAAK,IAAA,KAAK,EAAE;AAAE6C,MAAAA,OAAO,EAAE,MAAX;AAAmB0C,MAAAA,SAAS,EAAE;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,wBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6C3E,CAAC,CAAC,YAAD,CAA9C,CADF,CAlDF,CADF;AAwDD","sourcesContent":["import React, { memo, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport ReactGA from 'react-ga'\r\nimport { usePopper } from 'react-popper'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\r\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, selectList } from '../../state/lists/actions'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport { CloseIcon, ExternalLink, LinkStyledButton, TYPE } from '../../theme'\r\nimport listVersionLabel from '../../utils/listVersionLabel'\r\nimport { parseENSAddress } from '../../utils/parseENSAddress'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\nimport { ButtonOutlined, ButtonPrimary, ButtonSecondary } from '../Button'\r\n\r\nimport Column from '../Column'\r\nimport ListLogo from '../ListLogo'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport Row, { RowBetween } from '../Row'\r\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds'\r\n\r\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\r\n  padding: 0;\r\n  font-size: 1rem;\r\n  opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\r\n`\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 100;\r\n  visibility: ${props => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${props => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n  background: ${({ theme }) => theme.bg2};\r\n  border: 1px solid ${({ theme }) => theme.bg3};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  color: ${({ theme }) => theme.text2};\r\n  border-radius: 0.5rem;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 8px;\r\n  font-size: 1rem;\r\n  text-align: left;\r\n`\r\n\r\nconst StyledMenu = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border: none;\r\n`\r\n\r\nconst StyledListUrlText = styled.div`\r\n  max-width: 160px;\r\n  opacity: 0.6;\r\n  margin-right: 0.5rem;\r\n  font-size: 14px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nfunction ListOrigin({ listUrl }: { listUrl: string }) {\r\n  const ensName = useMemo(() => parseENSAddress(listUrl)?.ensName, [listUrl])\r\n  const host = useMemo(() => {\r\n    if (ensName) return undefined\r\n    const lowerListUrl = listUrl.toLowerCase()\r\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\r\n      return listUrl\r\n    }\r\n    try {\r\n      const url = new URL(listUrl)\r\n      return url.host\r\n    } catch (error) {\r\n      return undefined\r\n    }\r\n  }, [listUrl, ensName])\r\n  return <>{ensName ?? host}</>\r\n}\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl, onBack }: { listUrl: string; onBack: () => void }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isSelected = listUrl === selectedListUrl\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [open, toggle] = useToggle(false)\r\n  const node = useRef<HTMLDivElement>()\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>()\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>()\r\n\r\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement: 'auto',\r\n    strategy: 'fixed',\r\n    modifiers: [{ name: 'offset', options: { offset: [8, 8] } }]\r\n  })\r\n\r\n  useOnClickOutside(node, open ? toggle : undefined)\r\n\r\n  const selectThisList = useCallback(() => {\r\n    if (isSelected) return\r\n    ReactGA.event({\r\n      category: 'Lists',\r\n      action: 'Select List',\r\n      label: listUrl\r\n    })\r\n\r\n    dispatch(selectList(listUrl))\r\n    onBack()\r\n  }, [dispatch, isSelected, listUrl, onBack])\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    ReactGA.event({\r\n      category: 'Lists',\r\n      action: 'Update List from List Select',\r\n      label: listUrl\r\n    })\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    ReactGA.event({\r\n      category: 'Lists',\r\n      action: 'Start Remove List',\r\n      label: listUrl\r\n    })\r\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\r\n      ReactGA.event({\r\n        category: 'Lists',\r\n        action: 'Confirm Remove List',\r\n        label: listUrl\r\n      })\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n\r\n  if (!list) return null\r\n\r\n  return (\r\n    <Row key={listUrl} align=\"center\" padding=\"16px\" id={listUrlRowHTMLId(listUrl)}>\r\n      {list.logoURI ? (\r\n        <ListLogo style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text\r\n            fontWeight={isSelected ? 500 : 400}\r\n            fontSize={16}\r\n            style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}\r\n          >\r\n            {list.name}\r\n          </Text>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            marginTop: '4px'\r\n          }}\r\n        >\r\n          <StyledListUrlText title={listUrl}>\r\n            <ListOrigin listUrl={listUrl} />\r\n          </StyledListUrlText>\r\n        </Row>\r\n      </Column>\r\n      <StyledMenu ref={node as any}>\r\n        <ButtonOutlined\r\n          style={{\r\n            width: '2rem',\r\n            padding: '.8rem .35rem',\r\n            borderRadius: '12px',\r\n            fontSize: '14px',\r\n            marginRight: '0.5rem'\r\n          }}\r\n          onClick={toggle}\r\n          ref={setReferenceElement}\r\n        >\r\n          <DropDown />\r\n        </ButtonOutlined>\r\n\r\n        {open && (\r\n          <PopoverContainer show={true} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n            <div>{list && listVersionLabel(list.version)}</div>\r\n            <SeparatorDark />\r\n            <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>View list</ExternalLink>\r\n            <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n              Remove list\r\n            </UnpaddedLinkStyledButton>\r\n            {pending && (\r\n              <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>Update list</UnpaddedLinkStyledButton>\r\n            )}\r\n          </PopoverContainer>\r\n        )}\r\n      </StyledMenu>\r\n      {isSelected ? (\r\n        <ButtonPrimary\r\n          disabled={true}\r\n          className=\"select-button\"\r\n          style={{ width: '5rem', minWidth: '5rem', padding: '0.5rem .35rem', borderRadius: '12px', fontSize: '14px' }}\r\n        >\r\n          {t('selected')}\r\n        </ButtonPrimary>\r\n      ) : (\r\n        <>\r\n          <ButtonPrimary\r\n            className=\"select-button\"\r\n            style={{\r\n              width: '5rem',\r\n              minWidth: '4.5rem',\r\n              padding: '0.5rem .35rem',\r\n              borderRadius: '12px',\r\n              fontSize: '14px'\r\n            }}\r\n            onClick={selectThisList}\r\n          >\r\n            {t('select')}\r\n          </ButtonPrimary>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n})\r\n\r\nconst AddListButton = styled(ButtonSecondary)`\r\n  /* height: 1.8rem; */\r\n  max-width: 4rem;\r\n  margin-left: 1rem;\r\n  border-radius: 12px;\r\n  padding: 10px 18px;\r\n`\r\n\r\nconst ListContainer = styled.div`\r\n  flex: 1;\r\n  overflow: auto;\r\n`\r\n\r\nexport function ListSelect({ onDismiss, onBack }: { onDismiss: () => void; onBack: () => void }) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\r\n  const adding = Boolean(lists[listUrlInput]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const handleInput = useCallback(e => {\r\n    setListUrlInput(e.target.value)\r\n    setAddError(null)\r\n  }, [])\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listUrlInput)\r\n      .then(() => {\r\n        setListUrlInput('')\r\n        ReactGA.event({\r\n          category: 'Lists',\r\n          action: 'Add List',\r\n          label: listUrlInput\r\n        })\r\n      })\r\n      .catch(error => {\r\n        ReactGA.event({\r\n          category: 'Lists',\r\n          action: 'Add List Failed',\r\n          label: listUrlInput\r\n        })\r\n        setAddError(error.message)\r\n        dispatch(removeList(listUrlInput))\r\n      })\r\n  }, [adding, dispatch, fetchList, listUrlInput])\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const handleEnterKey = useCallback(\r\n    e => {\r\n      if (validUrl && e.key === 'Enter') {\r\n        handleAddList()\r\n      }\r\n    },\r\n    [handleAddList, validUrl]\r\n  )\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter(listUrl => {\r\n        return Boolean(lists[listUrl].current)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists])\r\n\r\n  return (\r\n    <Column style={{ width: '100%', flex: '1 1' }}>\r\n      <PaddedColumn>\r\n        <RowBetween>\r\n          <div>\r\n            <ArrowLeft style={{ cursor: 'pointer' }} onClick={onBack} />\r\n          </div>\r\n          <Text fontWeight={500} fontSize={20}>\r\n          {t('manageList')}\r\n          </Text>\r\n          <CloseIcon onClick={onDismiss} />\r\n        </RowBetween>\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <PaddedColumn gap=\"14px\">\r\n        <Text fontWeight={600}>\r\n          Add a list{' '}\r\n          <QuestionHelper text=\"Token lists are an open specification for lists of ERC20 tokens. You can use any token list by entering its URL below. Beware that third party token lists can contain fake or malicious ERC20 tokens.\" />\r\n        </Text>\r\n        <Row>\r\n          <SearchInput\r\n            type=\"text\"\r\n            id=\"list-add-input\"\r\n            placeholder=\"https:// or ipfs:// or ENS name\"\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n            onKeyDown={handleEnterKey}\r\n            style={{ height: '2.75rem', borderRadius: 12, padding: '12px' }}\r\n          />\r\n          <AddListButton onClick={handleAddList} disabled={!validUrl}>\r\n            {t('add')}\r\n          </AddListButton>\r\n        </Row>\r\n        {addError ? (\r\n          <TYPE.error title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }} error>\r\n            {addError}\r\n          </TYPE.error>\r\n        ) : null}\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <ListContainer>\r\n        {sortedLists.map(listUrl => (\r\n          <ListRow key={listUrl} listUrl={listUrl} onBack={onBack} />\r\n        ))}\r\n      </ListContainer>\r\n      <Separator />\r\n\r\n      <div style={{ padding: '16px', textAlign: 'center' }}>\r\n        <ExternalLink href=\"https://tokenlists.org\">{t('browseList')}</ExternalLink>\r\n      </div>\r\n    </Column>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}