{"ast":null,"code":"import{createWeb3ReactRoot,Web3ReactProvider}from'@web3-react/core';import'inter-ui';import React,{StrictMode}from'react';import{isMobile}from'react-device-detect';import ReactDOM from'react-dom';import ReactGA from'react-ga';import{Provider}from'react-redux';import{NetworkContextName}from'./constants';import'./i18n';import App from'./pages/App';import store from'./state';import ApplicationUpdater from'./state/application/updater';import ListsUpdater from'./state/lists/updater';import MulticallUpdater from'./state/multicall/updater';import TransactionUpdater from'./state/transactions/updater';import UserUpdater from'./state/user/updater';import ThemeProvider,{FixedGlobalStyle,ThemedGlobalStyle}from'./theme';import getLibrary from'./utils/getLibrary';var Web3ProviderNetwork=createWeb3ReactRoot(NetworkContextName);if('ethereum'in window){;window.ethereum.autoRefreshOnNetworkChange=false;}var GOOGLE_ANALYTICS_ID=process.env.REACT_APP_GOOGLE_ANALYTICS_ID;if(typeof GOOGLE_ANALYTICS_ID==='string'){ReactGA.initialize(GOOGLE_ANALYTICS_ID);ReactGA.set({customBrowserType:!isMobile?'desktop':'web3'in window||'ethereum'in window?'mobileWeb3':'mobileRegular'});}else{ReactGA.initialize('test',{testMode:true,debug:true});}window.addEventListener('error',function(error){ReactGA.exception({description:\"\".concat(error.message,\" @ \").concat(error.filename,\":\").concat(error.lineno,\":\").concat(error.colno),fatal:true});});function Updaters(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListsUpdater,null),/*#__PURE__*/React.createElement(UserUpdater,null),/*#__PURE__*/React.createElement(ApplicationUpdater,null),/*#__PURE__*/React.createElement(TransactionUpdater,null),/*#__PURE__*/React.createElement(MulticallUpdater,null));}ReactDOM.render(/*#__PURE__*/React.createElement(StrictMode,null,/*#__PURE__*/React.createElement(FixedGlobalStyle,null),/*#__PURE__*/React.createElement(Web3ReactProvider,{getLibrary:getLibrary},/*#__PURE__*/React.createElement(Web3ProviderNetwork,{getLibrary:getLibrary},/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(Updaters,null),/*#__PURE__*/React.createElement(ThemeProvider,null,/*#__PURE__*/React.createElement(ThemedGlobalStyle,null),/*#__PURE__*/React.createElement(App,null)))))),document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/index.tsx"],"names":["createWeb3ReactRoot","Web3ReactProvider","React","StrictMode","isMobile","ReactDOM","ReactGA","Provider","NetworkContextName","App","store","ApplicationUpdater","ListsUpdater","MulticallUpdater","TransactionUpdater","UserUpdater","ThemeProvider","FixedGlobalStyle","ThemedGlobalStyle","getLibrary","Web3ProviderNetwork","window","ethereum","autoRefreshOnNetworkChange","GOOGLE_ANALYTICS_ID","process","env","REACT_APP_GOOGLE_ANALYTICS_ID","initialize","set","customBrowserType","testMode","debug","addEventListener","error","exception","description","message","filename","lineno","colno","fatal","Updaters","render","document","getElementById"],"mappings":"AAAA,OAASA,mBAAT,CAA8BC,iBAA9B,KAAuD,kBAAvD,CACA,MAAO,UAAP,CACA,MAAOC,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,MAAO,QAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,6BAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,8BAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,aAAP,EAAwBC,gBAAxB,CAA0CC,iBAA1C,KAAmE,SAAnE,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CAEA,GAAMC,CAAAA,mBAAmB,CAAGpB,mBAAmB,CAACQ,kBAAD,CAA/C,CAEA,GAAI,YAAca,CAAAA,MAAlB,CAA0B,CACxB,CAAEA,MAAM,CAACC,QAAR,CAAyBC,0BAAzB,CAAsD,KAAtD,CACF,CAED,GAAMC,CAAAA,mBAAuC,CAAGC,OAAO,CAACC,GAAR,CAAYC,6BAA5D,CACA,GAAI,MAAOH,CAAAA,mBAAP,GAA+B,QAAnC,CAA6C,CAC3ClB,OAAO,CAACsB,UAAR,CAAmBJ,mBAAnB,EACAlB,OAAO,CAACuB,GAAR,CAAY,CACVC,iBAAiB,CAAE,CAAC1B,QAAD,CAAY,SAAZ,CAAwB,QAAUiB,CAAAA,MAAV,EAAoB,YAAcA,CAAAA,MAAlC,CAA2C,YAA3C,CAA0D,eAD3F,CAAZ,EAGD,CALD,IAKO,CACLf,OAAO,CAACsB,UAAR,CAAmB,MAAnB,CAA2B,CAAEG,QAAQ,CAAE,IAAZ,CAAkBC,KAAK,CAAE,IAAzB,CAA3B,EACD,CAEDX,MAAM,CAACY,gBAAP,CAAwB,OAAxB,CAAiC,SAAAC,KAAK,CAAI,CACxC5B,OAAO,CAAC6B,SAAR,CAAkB,CAChBC,WAAW,WAAKF,KAAK,CAACG,OAAX,eAAwBH,KAAK,CAACI,QAA9B,aAA0CJ,KAAK,CAACK,MAAhD,aAA0DL,KAAK,CAACM,KAAhE,CADK,CAEhBC,KAAK,CAAE,IAFS,CAAlB,EAID,CALD,EAOA,QAASC,CAAAA,QAAT,EAAoB,CAClB,mBACE,qDACE,oBAAC,YAAD,MADF,cAEE,oBAAC,WAAD,MAFF,cAGE,oBAAC,kBAAD,MAHF,cAIE,oBAAC,kBAAD,MAJF,cAKE,oBAAC,gBAAD,MALF,CADF,CASD,CAEDrC,QAAQ,CAACsC,MAAT,cACE,oBAAC,UAAD,mBACE,oBAAC,gBAAD,MADF,cAEE,oBAAC,iBAAD,EAAmB,UAAU,CAAExB,UAA/B,eACE,oBAAC,mBAAD,EAAqB,UAAU,CAAEA,UAAjC,eACE,oBAAC,QAAD,EAAU,KAAK,CAAET,KAAjB,eACE,oBAAC,QAAD,MADF,cAEE,oBAAC,aAAD,mBACE,oBAAC,iBAAD,MADF,cAEE,oBAAC,GAAD,MAFF,CAFF,CADF,CADF,CAFF,CADF,CAeEkC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAfF","sourcesContent":["import { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\r\nimport 'inter-ui'\r\nimport React, { StrictMode } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport ReactDOM from 'react-dom'\r\nimport ReactGA from 'react-ga'\r\nimport { Provider } from 'react-redux'\r\nimport { NetworkContextName } from './constants'\r\nimport './i18n'\r\nimport App from './pages/App'\r\nimport store from './state'\r\nimport ApplicationUpdater from './state/application/updater'\r\nimport ListsUpdater from './state/lists/updater'\r\nimport MulticallUpdater from './state/multicall/updater'\r\nimport TransactionUpdater from './state/transactions/updater'\r\nimport UserUpdater from './state/user/updater'\r\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from './theme'\r\nimport getLibrary from './utils/getLibrary'\r\n\r\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\r\n\r\nif ('ethereum' in window) {\r\n  ;(window.ethereum as any).autoRefreshOnNetworkChange = false\r\n}\r\n\r\nconst GOOGLE_ANALYTICS_ID: string | undefined = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\r\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\r\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID)\r\n  ReactGA.set({\r\n    customBrowserType: !isMobile ? 'desktop' : 'web3' in window || 'ethereum' in window ? 'mobileWeb3' : 'mobileRegular'\r\n  })\r\n} else {\r\n  ReactGA.initialize('test', { testMode: true, debug: true })\r\n}\r\n\r\nwindow.addEventListener('error', error => {\r\n  ReactGA.exception({\r\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\r\n    fatal: true\r\n  })\r\n})\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <ListsUpdater />\r\n      <UserUpdater />\r\n      <ApplicationUpdater />\r\n      <TransactionUpdater />\r\n      <MulticallUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <FixedGlobalStyle />\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Web3ProviderNetwork getLibrary={getLibrary}>\r\n        <Provider store={store}>\r\n          <Updaters />\r\n          <ThemeProvider>\r\n            <ThemedGlobalStyle />\r\n            <App />\r\n          </ThemeProvider>\r\n        </Provider>\r\n      </Web3ProviderNetwork>\r\n    </Web3ReactProvider>\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"]},"metadata":{},"sourceType":"module"}