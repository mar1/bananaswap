{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\src\\\\pages\\\\Earn\\\\components\\\\Stake.tsx\";\nimport React from 'react';\n//import {Button} from '../../../components/Button'\nimport { ButtonLight } from '../../../components/Button';\nimport { Text } from 'rebass';\nimport { farmAddress, farmABI } from '../conf.js';\nimport { ethers } from 'ethers';\n\nconst Stake = ({}) => {\n  async function unstake() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const signerAddress = await signer.getAddress();\n    const farmContract = new ethers.Contract(farmAddress, farmABI, signer);\n    const deposited = await farmContract.deposited(\"0\", signerAddress);\n    const withdraw = await farmContract.withdraw(\"0\", deposited);\n    console.log(withdraw);\n  }\n\n  async function fetchRewards() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const signerAddress = await signer.getAddress();\n    const farmContract = new ethers.Contract(farmAddress, farmABI, provider);\n    let pending = await farmContract.pending(\"0\", signerAddress);\n    pending = ethers.utils.formatUnits(pending, 18);\n    console.log(pending);\n    let rewardsToReplace = window.document.getElementById('rewards-to-claim');\n    rewardsToReplace.innerText = `${Number(pending).toFixed(4)} üçå to claim`;\n    let stakedBAN = await farmContract.userInfo(\"0\", signerAddress);\n    stakedBAN = ethers.utils.formatUnits(stakedBAN.amount, 18);\n    console.log(stakedBAN);\n    let stakedToReplace = window.document.getElementById('ban-staked');\n    stakedToReplace.innerText = `${stakedBAN} üçå currently staked`;\n  }\n\n  fetchRewards();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonLight, {\n    id: \"unstake\",\n    onClick: unstake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }\n  }, \"Unstake your LP tokens\")), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    id: \"rewards-to-claim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    id: \"ban-staked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Stake;","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/pages/Earn/components/Stake.tsx"],"names":["React","ButtonLight","Text","farmAddress","farmABI","ethers","Stake","unstake","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","signerAddress","getAddress","farmContract","Contract","deposited","withdraw","console","log","fetchRewards","pending","utils","formatUnits","rewardsToReplace","document","getElementById","innerText","Number","toFixed","stakedBAN","userInfo","amount","stakedToReplace"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\n//import {Button} from '../../../components/Button'\r\nimport { ButtonLight } from '../../../components/Button'\r\nimport { Text } from 'rebass'\r\nimport { farmAddress, farmABI} from '../conf.js'\r\nimport { ethers } from 'ethers'\r\n\r\ndeclare let window: any;\r\n\r\n/*\r\nimport useAllowance from '../../../hooks/useAllowance'\r\nimport useApprove from '../../../hooks/useApprove'\r\nimport useModal from '../../../hooks/useModal'\r\nimport useStake from '../../../hooks/useStake'\r\nimport useStakedBalance from '../../../hooks/useStakedBalance'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport useUnstake from '../../../hooks/useUnstake'\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance'\r\n\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\n*/\r\n//import imageUniswap from '../../../assets/img/logo-uniswap.svg'\r\n\r\ninterface StakeProps {\r\n}\r\n\r\n\r\nconst Stake: React.FC<StakeProps> = ({ }) => {\r\n\r\nasync function unstake() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n  await provider.send(\"eth_requestAccounts\", []);\r\n  const signer = provider.getSigner()\r\n  const signerAddress = await signer.getAddress()\r\n  const farmContract = new ethers.Contract(farmAddress, farmABI, signer);\r\n  const deposited = await farmContract.deposited(\"0\", signerAddress)\r\n  const withdraw = await farmContract.withdraw(\"0\", deposited)\r\n  console.log(withdraw)\r\n}\r\n\r\nasync function fetchRewards() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n  await provider.send(\"eth_requestAccounts\", []);\r\n  const signer = provider.getSigner()\r\n  const signerAddress = await signer.getAddress()\r\n  const farmContract = new ethers.Contract(farmAddress, farmABI, provider);\r\n  let pending = await farmContract.pending(\"0\", signerAddress)\r\n  pending = ethers.utils.formatUnits(pending, 18)\r\n  console.log(pending)\r\n  let rewardsToReplace = window.document.getElementById('rewards-to-claim')\r\n  rewardsToReplace.innerText = `${Number(pending).toFixed(4)} üçå to claim`\r\n\r\n  let stakedBAN = await farmContract.userInfo(\"0\", signerAddress)\r\n  stakedBAN = ethers.utils.formatUnits(stakedBAN.amount, 18)\r\n  console.log(stakedBAN)\r\n  let stakedToReplace = window.document.getElementById('ban-staked')\r\n  stakedToReplace.innerText = `${stakedBAN} üçå currently staked`\r\n\r\n}\r\nfetchRewards()\r\n\r\n\r\n  return (\r\n    <>\r\n<ButtonLight id=\"unstake\" onClick={unstake}>\r\n<Text fontWeight={500} fontSize={20}>\r\n  Unstake your LP tokens\r\n</Text>\r\n</ButtonLight>\r\n      <Text fontWeight={500} fontSize={20}>\r\n        <Text id=\"rewards-to-claim\"></Text> \r\n      </Text>\r\n\r\n\r\n\r\n<Text fontWeight={500} fontSize={20}>\r\n        <Text id=\"ban-staked\"></Text> \r\n      </Text>\r\n</>\r\n            )\r\n}\r\nexport default Stake"]},"metadata":{},"sourceType":"module"}