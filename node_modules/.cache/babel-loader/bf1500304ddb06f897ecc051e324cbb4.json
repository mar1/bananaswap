{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Documents\\\\Dev\\\\bananaswap\\\\moonbeam-uniswap\\\\uniswap-interface-moonbeam\\\\src\\\\pages\\\\Earn\\\\index.tsx\";\nimport React, { useContext, useMemo } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { StakeTabs } from '../../components/NavigationTabs';\nimport { useTranslation } from 'react-i18next';\nimport FullPositionCard from '../../components/PositionCard';\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks';\nimport { TYPE } from '../../theme';\nimport { LightCard } from '../../components/Card';\nimport { useActiveWeb3React } from '../../hooks';\nimport { usePairs } from '../../data/Reserves';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks';\nimport AppBody from '../AppBody';\nimport { Dots } from '../../components/swap/styleds';\nvar Fields;\n\n(function (Fields) {\n  Fields[Fields[\"TOKEN0\"] = 0] = \"TOKEN0\";\n  Fields[Fields[\"TOKEN1\"] = 1] = \"TOKEN1\";\n})(Fields || (Fields = {}));\n\nexport default function PoolFinder() {\n  const theme = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useActiveWeb3React(); // fetch the user's balances of all tracked V2 LP tokens\n\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(({\n    liquidityToken\n  }) => {\n    var _v2PairsBalances$liqu;\n\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n  return /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StakeTabs, {\n    active: 'earn',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), !account ? /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, t('connectToViewLiquidity'))) : v2IsLoading ? /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, t('loading')))) : (allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, allV2PairsWithLiquidity.map(v2Pair => /*#__PURE__*/React.createElement(FullPositionCard, {\n    key: v2Pair.liquidityToken.address,\n    pair: v2Pair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, t('noLiquidityFound'))));\n}","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/pages/Earn/index.tsx"],"names":["React","useContext","useMemo","ThemeContext","StakeTabs","useTranslation","FullPositionCard","useTokenBalancesWithLoadingIndicator","TYPE","LightCard","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","AppBody","Dots","Fields","PoolFinder","theme","t","account","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","text3"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Pair } from 'moonbeamswap'\r\nimport { Link } from 'react-router-dom'\r\nimport { StakeTabs } from '../../components/NavigationTabs'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport Question from '../../components/QuestionHelper'\r\nimport FullPositionCard from '../../components/PositionCard'\r\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\r\nimport { StyledInternalLink, TYPE } from '../../theme'\r\nimport { Text } from 'rebass'\r\nimport { LightCard } from '../../components/Card'\r\nimport { RowBetween } from '../../components/Row'\r\nimport { ButtonPrimary } from '../../components/Button'\r\nimport { AutoColumn } from '../../components/Column'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { usePairs } from '../../data/Reserves'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\r\nimport AppBody from '../AppBody'\r\nimport { Dots } from '../../components/swap/styleds'\r\n\r\nenum Fields {\r\n  TOKEN0 = 0,\r\n  TOKEN1 = 1\r\n}\r\n\r\nexport default function PoolFinder() {\r\n  const theme = useContext(ThemeContext)\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n\r\n  // fetch the user's balances of all tracked V2 LP tokens\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map(tokens => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs]\r\n  )\r\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [\r\n    tokenPairsWithLiquidityTokens\r\n  ])\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some(V2Pair => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  return (\r\n    <AppBody>\r\n      <StakeTabs active={'earn'} />\r\n      {!account ? (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  {t('connectToViewLiquidity')}\r\n                </TYPE.body>\r\n              </LightCard>\r\n            ) : v2IsLoading ? (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  <Dots>{t('loading')}</Dots>\r\n                </TYPE.body>\r\n              </LightCard>\r\n            ) : allV2PairsWithLiquidity?.length > 0 ? (\r\n              <>\r\n                {allV2PairsWithLiquidity.map(v2Pair => (\r\n                  <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  {t('noLiquidityFound')}\r\n                </TYPE.body>\r\n              </LightCard>\r\n            )}\r\n    </AppBody>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}