{"ast":null,"code":"import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk';\nimport { // fortmatic,\ninjected // portis,\n, walletconnect, walletlink } from '../connectors';\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const FACTORY_ADDRESS = '0x6Bd5A1A63ffF10De3c6B7C667040E9AE1B47fDf2';\nexport const ROUTER_ADDRESS = '0xA4E1f3fD10E2397f58926E215Ed331D7cDA14056';\nexport const LP_TOKEN_NAME = 'Swap-LP-Token';\nexport const LP_TOKEN_SYMBOL = 'SWAP-LP'; // a list of tokens by chain\n\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin');\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C');\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD');\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound');\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker');\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth');\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC'); // Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\n\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13;\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40320;\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS;\nexport const TIMELOCK_ADDRESS = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC';\nexport const COMMON_CONTRACT_NAMES = {\n  [TIMELOCK_ADDRESS]: 'Timelock'\n};\nconst WETH_ONLY = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]]\n}; // used to construct intermediary pairs for trading\n\nexport const BASES_TO_CHECK_TRADES_AGAINST = { ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, COMP, MKR, WBTC]\n};\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\n\nexport const CUSTOM_BASES = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n  }\n}; // used for display in the default list when adding liquidity\n\nexport const SUGGESTED_BASES = { ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC]\n}; // used to construct the list of all pairs we consider by default in the frontend\n\nexport const BASES_TO_TRACK_LIQUIDITY_FOR = { ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC],\n  [ChainId.ROPSTEN]: [...WETH_ONLY[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [...WETH_ONLY[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [...WETH_ONLY[ChainId.GÖRLI]],\n  [ChainId.KOVAN]: [...WETH_ONLY[ChainId.KOVAN]]\n};\nexport const PINNED_PAIRS = {\n  [ChainId.MAINNET]: [[new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'), new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')], [USDC, USDT], [DAI, USDT]]\n};\nexport const SUPPORTED_WALLETS = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  } // COINBASE_LINK: {\n  //   name: 'Open in Coinbase Wallet',\n  //   iconName: 'coinbaseWalletIcon.svg',\n  //   description: 'Open in Coinbase Wallet app.',\n  //   href: 'https://go.cb-w.com/mtUDhEZPy1',\n  //   color: '#315CF5',\n  //   mobile: true,\n  //   mobileOnly: true\n  // },\n  // FORTMATIC: {\n  //   connector: fortmatic,\n  //   name: 'Fortmatic',\n  //   iconName: 'fortmaticIcon.png',\n  //   description: 'Login using Fortmatic hosted wallet',\n  //   href: null,\n  //   color: '#6748FF',\n  //   mobile: true,\n  // },\n  // Portis: {\n  //   connector: portis,\n  //   name: 'Portis',\n  //   iconName: 'portisIcon.png',\n  //   description: 'Login using Portis hosted wallet',\n  //   href: null,\n  //   color: '#4A6C9B',\n  //   mobile: true,\n  // },\n\n};\nexport const NetworkContextName = 'NETWORK'; // default allowed slippage, in bips\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50; // 20 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20; // used for rewards deadlines\n\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\nexport const BIG_INT_ZERO = JSBI.BigInt(0); // one basis point\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\n\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\n\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000));\nexport const ZERO_PERCENT = new Percent('0');\nexport const ONE_HUNDRED_PERCENT = new Percent('1');","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","Token","WETH","injected","walletconnect","walletlink","ZERO_ADDRESS","FACTORY_ADDRESS","ROUTER_ADDRESS","LP_TOKEN_NAME","LP_TOKEN_SYMBOL","DAI","MAINNET","USDC","USDT","COMP","MKR","AMPL","WBTC","AVERAGE_BLOCK_TIME_IN_SECS","PROPOSAL_LENGTH_IN_BLOCKS","PROPOSAL_LENGTH_IN_SECS","TIMELOCK_ADDRESS","COMMON_CONTRACT_NAMES","WETH_ONLY","ROPSTEN","RINKEBY","GÖRLI","KOVAN","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","address","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","WALLET_CONNECT","mobile","WALLET_LINK","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_SECONDS_IN_WEEK","BigInt","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT"],"mappings":"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","sourcesContent":["import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport {\r\n  // fortmatic,\r\n  injected,\r\n  // portis,\r\n  walletconnect,\r\n  walletlink,\r\n} from '../connectors';\r\n\r\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\r\nexport const FACTORY_ADDRESS = '0x6Bd5A1A63ffF10De3c6B7C667040E9AE1B47fDf2';\r\nexport const ROUTER_ADDRESS = '0xA4E1f3fD10E2397f58926E215Ed331D7cDA14056';\r\n\r\nexport const LP_TOKEN_NAME = 'Swap-LP-Token';\r\nexport const LP_TOKEN_SYMBOL = 'SWAP-LP';\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[];\r\n};\r\n\r\nexport const DAI = new Token(\r\n  ChainId.MAINNET,\r\n  '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n  18,\r\n  'DAI',\r\n  'Dai Stablecoin'\r\n);\r\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C');\r\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD');\r\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound');\r\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker');\r\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth');\r\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC');\r\n\r\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\r\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13;\r\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40_320;\r\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS;\r\nexport const TIMELOCK_ADDRESS = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC';\r\n\r\nexport const COMMON_CONTRACT_NAMES: { [address: string]: string } = {\r\n  [TIMELOCK_ADDRESS]: 'Timelock',\r\n};\r\n\r\nconst WETH_ONLY: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\r\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\r\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\r\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\r\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]],\r\n};\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, COMP, MKR, WBTC],\r\n};\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {\r\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]],\r\n  },\r\n};\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC],\r\n};\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC],\r\n  [ChainId.ROPSTEN]: [...WETH_ONLY[ChainId.ROPSTEN]],\r\n  [ChainId.RINKEBY]: [...WETH_ONLY[ChainId.RINKEBY]],\r\n  [ChainId.GÖRLI]: [...WETH_ONLY[ChainId.GÖRLI]],\r\n  [ChainId.KOVAN]: [...WETH_ONLY[ChainId.KOVAN]],\r\n};\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [\r\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\r\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'),\r\n    ],\r\n    [USDC, USDT],\r\n    [DAI, USDT],\r\n  ],\r\n};\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector;\r\n  name: string;\r\n  iconName: string;\r\n  description: string;\r\n  href: string | null;\r\n  color: string;\r\n  primary?: true;\r\n  mobile?: true;\r\n  mobileOnly?: true;\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  INJECTED: {\r\n    connector: injected,\r\n    name: 'Injected',\r\n    iconName: 'arrow-right.svg',\r\n    description: 'Injected web3 provider.',\r\n    href: null,\r\n    color: '#010101',\r\n    primary: true,\r\n  },\r\n  METAMASK: {\r\n    connector: injected,\r\n    name: 'MetaMask',\r\n    iconName: 'metamask.png',\r\n    description: 'Easy-to-use browser extension.',\r\n    href: null,\r\n    color: '#E8831D',\r\n  },\r\n  WALLET_CONNECT: {\r\n    connector: walletconnect,\r\n    name: 'WalletConnect',\r\n    iconName: 'walletConnectIcon.svg',\r\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\r\n    href: null,\r\n    color: '#4196FC',\r\n    mobile: true,\r\n  },\r\n  WALLET_LINK: {\r\n    connector: walletlink,\r\n    name: 'Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Use Coinbase Wallet app on mobile device',\r\n    href: null,\r\n    color: '#315CF5',\r\n  },\r\n  // COINBASE_LINK: {\r\n  //   name: 'Open in Coinbase Wallet',\r\n  //   iconName: 'coinbaseWalletIcon.svg',\r\n  //   description: 'Open in Coinbase Wallet app.',\r\n  //   href: 'https://go.cb-w.com/mtUDhEZPy1',\r\n  //   color: '#315CF5',\r\n  //   mobile: true,\r\n  //   mobileOnly: true\r\n  // },\r\n  // FORTMATIC: {\r\n  //   connector: fortmatic,\r\n  //   name: 'Fortmatic',\r\n  //   iconName: 'fortmaticIcon.png',\r\n  //   description: 'Login using Fortmatic hosted wallet',\r\n  //   href: null,\r\n  //   color: '#6748FF',\r\n  //   mobile: true,\r\n  // },\r\n  // Portis: {\r\n  //   connector: portis,\r\n  //   name: 'Portis',\r\n  //   iconName: 'portisIcon.png',\r\n  //   description: 'Login using Portis hosted wallet',\r\n  //   href: null,\r\n  //   color: '#4A6C9B',\r\n  //   mobile: true,\r\n  // },\r\n};\r\n\r\nexport const NetworkContextName = 'NETWORK';\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50;\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\r\n// used for rewards deadlines\r\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0);\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\r\nexport const BIPS_BASE = JSBI.BigInt(10000);\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\r\n// used to ensure the user doesn't send so much ETH so they end up with <.01\r\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000));\r\nexport const ZERO_PERCENT = new Percent('0');\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1');\r\n"]},"metadata":{},"sourceType":"module"}