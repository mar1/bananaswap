{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Documents\\\\Dev\\\\bananaswap\\\\moonbeam-uniswap\\\\uniswap-interface-moonbeam\\\\src\\\\pages\\\\Earn\\\\index.tsx\";\nimport { DEV, JSBI } from 'moonbeamswap';\nimport React, { useCallback, useEffect, useState, useContext, useMemo } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Text } from 'rebass';\nimport { LightCard } from '../../components/Card';\nimport { StakeTabs } from '../../components/NavigationTabs';\nimport { useTranslation } from 'react-i18next';\nimport { PairState, usePair } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { usePairs } from '../../data/Reserves';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks';\nimport { usePairAdder } from '../../state/user/hooks';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport { TYPE } from '../../theme';\nimport AppBody from '../AppBody';\nimport { Dots } from '../Pool/styleds';\nvar Fields;\n\n(function (Fields) {\n  Fields[Fields[\"TOKEN0\"] = 0] = \"TOKEN0\";\n  Fields[Fields[\"TOKEN1\"] = 1] = \"TOKEN1\";\n})(Fields || (Fields = {}));\n\nexport default function PoolFinder() {\n  const theme = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useActiveWeb3React();\n  const [showSearch, setShowSearch] = useState(false);\n  const [activeField, setActiveField] = useState(Fields.TOKEN1);\n  const [currency0, setCurrency0] = useState(DEV);\n  const [currency1, setCurrency1] = useState(null);\n  const [pairState, pair] = usePair(currency0 !== null && currency0 !== void 0 ? currency0 : undefined, currency1 !== null && currency1 !== void 0 ? currency1 : undefined);\n  const addPair = usePairAdder();\n  useEffect(() => {\n    if (pair) {\n      addPair(pair);\n    }\n  }, [pair, addPair]);\n  const validPairNoLiquidity = pairState === PairState.NOT_EXISTS || Boolean(pairState === PairState.EXISTS && pair && JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) && JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)));\n  const position = useTokenBalance(account !== null && account !== void 0 ? account : undefined, pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)));\n  const handleCurrencySelect = useCallback(currency => {\n    if (activeField === Fields.TOKEN0) {\n      setCurrency0(currency);\n    } else {\n      setCurrency1(currency);\n    }\n  }, [activeField]);\n  const handleSearchDismiss = useCallback(() => {\n    setShowSearch(false);\n  }, [setShowSearch]);\n  const prerequisiteMessage = /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"45px 10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, !account ? 'Connect to a wallet to find pools' : 'Select a token to find your liquidity.'));\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(({\n    liquidityToken\n  }) => {\n    var _v2PairsBalances$liqu;\n\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n  return /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StakeTabs, {\n    active: 'earn',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), !account ? /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, t('connectToViewLiquidity'))) : v2IsLoading ? /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, t('loading')))) : (allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, allV2PairsWithLiquidity.map(v2Pair => /*#__PURE__*/React.createElement(FullPositionCard, {\n    key: v2Pair.liquidityToken.address,\n    pair: v2Pair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text3,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, t('noLiquidityFound'))));\n}","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/pages/Earn/index.tsx"],"names":["DEV","JSBI","React","useCallback","useEffect","useState","useContext","useMemo","ThemeContext","Text","LightCard","StakeTabs","useTranslation","PairState","usePair","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","usePairAdder","useTokenBalance","TYPE","AppBody","Dots","Fields","PoolFinder","theme","t","account","showSearch","setShowSearch","activeField","setActiveField","TOKEN1","currency0","setCurrency0","currency1","setCurrency1","pairState","pair","undefined","addPair","validPairNoLiquidity","NOT_EXISTS","Boolean","EXISTS","equal","reserve0","raw","BigInt","reserve1","position","liquidityToken","hasPosition","greaterThan","handleCurrencySelect","currency","TOKEN0","handleSearchDismiss","prerequisiteMessage","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","useTokenBalancesWithLoadingIndicator","liquidityTokensWithBalances","filter","address","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","v2Pair","text3"],"mappings":"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","sourcesContent":["import { Currency, DEV, JSBI, TokenAmount } from 'moonbeamswap'\r\nimport React, { useCallback, useEffect, useState, useContext, useMemo } from 'react'\r\nimport { Plus } from 'react-feather'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Text } from 'rebass'\r\nimport { ButtonDropdownLight } from '../../components/Button'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\r\nimport CurrencyLogo from '../../components/CurrencyLogo'\r\nimport { StakeTabs } from '../../components/NavigationTabs'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row from '../../components/Row'\r\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal'\r\nimport { PairState, usePair } from '../../data/Reserves'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { usePairs } from '../../data/Reserves'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\r\nimport { usePairAdder } from '../../state/user/hooks'\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { StyledInternalLink, TYPE } from '../../theme'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport AppBody from '../AppBody'\r\nimport { Dots } from '../Pool/styleds'\r\n\r\nenum Fields {\r\n  TOKEN0 = 0,\r\n  TOKEN1 = 1\r\n}\r\n\r\nexport default function PoolFinder() {\r\n  const theme = useContext(ThemeContext)\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const [showSearch, setShowSearch] = useState<boolean>(false)\r\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\r\n\r\n  const [currency0, setCurrency0] = useState<Currency | null>(DEV)\r\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\r\n\r\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\r\n  const addPair = usePairAdder()\r\n  useEffect(() => {\r\n    if (pair) {\r\n      addPair(pair)\r\n    }\r\n  }, [pair, addPair])\r\n\r\n  const validPairNoLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS ||\r\n    Boolean(\r\n      pairState === PairState.EXISTS &&\r\n        pair &&\r\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\r\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0))\r\n    )\r\n\r\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\r\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      if (activeField === Fields.TOKEN0) {\r\n        setCurrency0(currency)\r\n      } else {\r\n        setCurrency1(currency)\r\n      }\r\n    },\r\n    [activeField]\r\n  )\r\n\r\n  const handleSearchDismiss = useCallback(() => {\r\n    setShowSearch(false)\r\n  }, [setShowSearch])\r\n\r\n  const prerequisiteMessage = (\r\n    <LightCard padding=\"45px 10px\">\r\n      <Text textAlign=\"center\">\r\n        {!account ? 'Connect to a wallet to find pools' : 'Select a token to find your liquidity.'}\r\n      </Text>\r\n    </LightCard>\r\n  )\r\n\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map(tokens => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs]\r\n  )\r\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [\r\n    tokenPairsWithLiquidityTokens\r\n  ])\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some(V2Pair => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  return (\r\n    \r\n    <AppBody>\r\n      <StakeTabs active={'earn'} />\r\n      {!account ? (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  {t('connectToViewLiquidity')}\r\n                </TYPE.body>\r\n              </LightCard>\r\n            ) : v2IsLoading ? (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  <Dots>{t('loading')}</Dots>\r\n                </TYPE.body>\r\n              </LightCard>\r\n            ) : allV2PairsWithLiquidity?.length > 0 ? (\r\n              <>\r\n                {allV2PairsWithLiquidity.map(v2Pair => (\r\n                  <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <LightCard padding=\"40px\">\r\n                <TYPE.body color={theme.text3} textAlign=\"center\">\r\n                  {t('noLiquidityFound')}\r\n                </TYPE.body>\r\n              </LightCard>\r\n            )}\r\n    </AppBody>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}