{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React from'react';//import {Button} from '../../../components/Button'\nimport{ButtonLight}from'../../../components/Button';import{Link}from'react-router-dom';import{Text}from'rebass';import{farmAddress,farmABI}from'../conf.js';import{ethers}from'ethers';var Stake=function Stake(_ref){var lpContract=_ref.lpContract,pid=_ref.pid,tokenName=_ref.tokenName;function unstake(){return _unstake.apply(this,arguments);}function _unstake(){_unstake=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,signer,signerAddress,farmContract,deposited,withdraw;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new ethers.providers.Web3Provider(window.ethereum);_context.next=3;return provider.send(\"eth_requestAccounts\",[]);case 3:signer=provider.getSigner();_context.next=6;return signer.getAddress();case 6:signerAddress=_context.sent;farmContract=new ethers.Contract(farmAddress,farmABI,signer);_context.next=10;return farmContract.deposited(\"0\",signerAddress);case 10:deposited=_context.sent;_context.next=13;return farmContract.withdraw(\"0\",deposited);case 13:withdraw=_context.sent;console.log(withdraw);case 15:case\"end\":return _context.stop();}}},_callee);}));return _unstake.apply(this,arguments);}function fetchRewards(){return _fetchRewards.apply(this,arguments);}function _fetchRewards(){_fetchRewards=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var provider,signer,signerAddress,farmContract,pending,rewardsToReplace,stakedBAN,stakedToReplace;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:provider=new ethers.providers.Web3Provider(window.ethereum);_context2.next=3;return provider.send(\"eth_requestAccounts\",[]);case 3:signer=provider.getSigner();_context2.next=6;return signer.getAddress();case 6:signerAddress=_context2.sent;farmContract=new ethers.Contract(farmAddress,farmABI,provider);_context2.next=10;return farmContract.pending(\"0\",signerAddress);case 10:pending=_context2.sent;pending=ethers.utils.formatUnits(pending,18);console.log(pending);rewardsToReplace=window.document.getElementById('rewards-to-claim');rewardsToReplace.innerText=\"\".concat(Number(pending).toFixed(4),\" \\uD83C\\uDF4C to claim\");_context2.next=17;return farmContract.userInfo(\"0\",signerAddress);case 17:stakedBAN=_context2.sent;stakedBAN=ethers.utils.formatUnits(stakedBAN.amount,18);console.log(stakedBAN);stakedToReplace=window.document.getElementById('ban-staked');stakedToReplace.innerText=\"\".concat(stakedBAN,\" \\uD83C\\uDF4C currently staked\");case 22:case\"end\":return _context2.stop();}}},_callee2);}));return _fetchRewards.apply(this,arguments);}fetchRewards();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ButtonLight,{id:\"unstake\",as:Link,style:{padding:16},onClick:unstake},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:20},\"Unstake your LP tokens\")),/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:20},/*#__PURE__*/React.createElement(Text,{id:\"rewards-to-claim\"})),/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:20},/*#__PURE__*/React.createElement(Text,{id:\"ban-staked\"})));};export default Stake;","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/pages/Earn/components/Stake.tsx"],"names":["React","ButtonLight","Link","Text","farmAddress","farmABI","ethers","Stake","lpContract","pid","tokenName","unstake","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","getAddress","signerAddress","farmContract","Contract","deposited","withdraw","console","log","fetchRewards","pending","utils","formatUnits","rewardsToReplace","document","getElementById","innerText","Number","toFixed","userInfo","stakedBAN","amount","stakedToReplace","padding"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\n//import {Button} from '../../../components/Button'\r\nimport { ButtonLight, } from '../../../components/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport { farmAddress, farmABI} from '../conf.js'\r\nimport { ethers } from 'ethers'\r\n\r\ndeclare let window: any;\r\n\r\n/*\r\nimport useAllowance from '../../../hooks/useAllowance'\r\nimport useApprove from '../../../hooks/useApprove'\r\nimport useModal from '../../../hooks/useModal'\r\nimport useStake from '../../../hooks/useStake'\r\nimport useStakedBalance from '../../../hooks/useStakedBalance'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport useUnstake from '../../../hooks/useUnstake'\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance'\r\n\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\n*/\r\n//import imageUniswap from '../../../assets/img/logo-uniswap.svg'\r\n\r\ninterface StakeProps {\r\n  lpContract: Contract,\r\n  pid: number,\r\n  tokenName: string\r\n}\r\n\r\nconst Stake: React.FC<StakeProps> = ({ lpContract, pid, tokenName }) => {\r\n\r\nasync function unstake() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n  await provider.send(\"eth_requestAccounts\", []);\r\n  const signer = provider.getSigner()\r\n  const signerAddress = await signer.getAddress()\r\n  const farmContract = new ethers.Contract(farmAddress, farmABI, signer);\r\n  const deposited = await farmContract.deposited(\"0\", signerAddress)\r\n  const withdraw = await farmContract.withdraw(\"0\", deposited)\r\n  console.log(withdraw)\r\n}\r\n\r\nasync function fetchRewards() {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n  await provider.send(\"eth_requestAccounts\", []);\r\n  const signer = provider.getSigner()\r\n  const signerAddress = await signer.getAddress()\r\n  const farmContract = new ethers.Contract(farmAddress, farmABI, provider);\r\n  let pending = await farmContract.pending(\"0\", signerAddress)\r\n  pending = ethers.utils.formatUnits(pending, 18)\r\n  console.log(pending)\r\n  let rewardsToReplace = window.document.getElementById('rewards-to-claim')\r\n  rewardsToReplace.innerText = `${Number(pending).toFixed(4)} üçå to claim`\r\n\r\n  let stakedBAN = await farmContract.userInfo(\"0\", signerAddress)\r\n  stakedBAN = ethers.utils.formatUnits(stakedBAN.amount, 18)\r\n  console.log(stakedBAN)\r\n  let stakedToReplace = window.document.getElementById('ban-staked')\r\n  stakedToReplace.innerText = `${stakedBAN} üçå currently staked`\r\n\r\n}\r\nfetchRewards()\r\n\r\n\r\n  return (\r\n    <>\r\n<ButtonLight id=\"unstake\" as={Link} style={{ padding: 16 }} onClick={unstake}>\r\n<Text fontWeight={500} fontSize={20}>\r\n  Unstake your LP tokens\r\n</Text>\r\n</ButtonLight>\r\n      <Text fontWeight={500} fontSize={20}>\r\n        <Text id=\"rewards-to-claim\"></Text> \r\n      </Text>\r\n\r\n\r\n\r\n<Text fontWeight={500} fontSize={20}>\r\n        <Text id=\"ban-staked\"></Text> \r\n      </Text>\r\n</>\r\n            )\r\n}\r\nexport default Stake"]},"metadata":{},"sourceType":"module"}