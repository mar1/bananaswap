{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import React,{useRef,useContext,useState}from'react';import{Settings,X}from'react-feather';import styled from'styled-components';import{useOnClickOutside}from'../../hooks/useOnClickOutside';import{useUserSlippageTolerance,useExpertModeManager,useUserDeadline}from'../../state/user/hooks';//useDarkModeManager\nimport TransactionSettings from'../TransactionSettings';import{RowFixed,RowBetween}from'../Row';import{TYPE}from'../../theme';import QuestionHelper from'../QuestionHelper';import Toggle from'../Toggle';import{ThemeContext}from'styled-components';import{AutoColumn}from'../Column';import{ButtonError}from'../Button';import{useSettingsMenuOpen,useToggleSettingsMenu}from'../../state/application/hooks';import{Text}from'rebass';import Modal from'../Modal';import{useTranslation}from'react-i18next';var StyledMenuIcon=styled(Settings)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  height: 20px;\\n  width: 20px;\\n\\n  > * {\\n    stroke: \",\";\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.text1;});var StyledCloseIcon=styled(X)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  height: 20px;\\n  width: 20px;\\n  :hover {\\n    cursor: pointer;\\n  }\\n\\n  > * {\\n    stroke: \",\";\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.text1;});var StyledMenuButton=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  border: none;\\n  background-color: transparent;\\n  margin: 0;\\n  padding: 0;\\n  height: 35px;\\n  background-color: \",\";\\n\\n  padding: 0.15rem 0.5rem;\\n  border-radius: 0.5rem;\\n\\n  :hover,\\n  :focus {\\n    cursor: pointer;\\n    outline: none;\\n    background-color: \",\";\\n  }\\n\\n  svg {\\n    margin-top: 2px;\\n  }\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.bg3;},function(_ref4){var theme=_ref4.theme;return theme.bg4;});var EmojiWrapper=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: -6px;\\n  right: 0px;\\n  font-size: 14px;\\n\"])));var StyledMenu=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-left: 0.5rem;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: relative;\\n  border: none;\\n  text-align: left;\\n\"])));var MenuFlyout=styled.span(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  min-width: 20.125rem;\\n  background-color: \",\";\\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\\n    0px 24px 32px rgba(0, 0, 0, 0.01);\\n\\n  border: 1px solid \",\";\\n\\n  border-radius: 0.5rem;\\n  display: flex;\\n  flex-direction: column;\\n  font-size: 1rem;\\n  position: absolute;\\n  top: 3rem;\\n  right: 0rem;\\n  z-index: 100;\\n\\n  \",\";\\n\"])),function(_ref5){var theme=_ref5.theme;return theme.bg1;},function(_ref6){var theme=_ref6.theme;return theme.bg3;},function(_ref7){var theme=_ref7.theme;return theme.mediaWidth.upToExtraSmall(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    min-width: 18.125rem;\\n    right: -46px;\\n  \"])));});var Break=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 1px;\\n  background-color: \",\";\\n\"])),function(_ref8){var theme=_ref8.theme;return theme.bg3;});var ModalContentWrapper=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 2rem 0;\\n  background-color: \",\";\\n  border-radius: 20px;\\n\"])),function(_ref9){var theme=_ref9.theme;return theme.bg2;});export default function SettingsTab(){var node=useRef();var open=useSettingsMenuOpen();var toggle=useToggleSettingsMenu();var _useTranslation=useTranslation(),t=_useTranslation.t;var theme=useContext(ThemeContext);var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,2),userSlippageTolerance=_useUserSlippageToler2[0],setUserslippageTolerance=_useUserSlippageToler2[1];var _useUserDeadline=useUserDeadline(),_useUserDeadline2=_slicedToArray(_useUserDeadline,2),deadline=_useUserDeadline2[0],setDeadline=_useUserDeadline2[1];var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,2),expertMode=_useExpertModeManager2[0],toggleExpertMode=_useExpertModeManager2[1];//const [darkMode, toggleDarkMode] = useDarkModeManager()\n// show confirmation view before turning on\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),showConfirmation=_useState2[0],setShowConfirmation=_useState2[1];useOnClickOutside(node,open?toggle:undefined);return/*#__PURE__*/ (// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\nReact.createElement(StyledMenu,{ref:node},/*#__PURE__*/React.createElement(Modal,{isOpen:showConfirmation,onDismiss:function onDismiss(){return setShowConfirmation(false);},maxHeight:100},/*#__PURE__*/React.createElement(ModalContentWrapper,null,/*#__PURE__*/React.createElement(AutoColumn,{gap:\"lg\"},/*#__PURE__*/React.createElement(RowBetween,{style:{padding:'0 2rem'}},/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:20},t('areYouSure')),/*#__PURE__*/React.createElement(StyledCloseIcon,{onClick:function onClick(){return setShowConfirmation(false);}})),/*#__PURE__*/React.createElement(Break,null),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"lg\",style:{padding:'0 2rem'}},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:20},t('expertModeTips1')),/*#__PURE__*/React.createElement(Text,{fontWeight:600,fontSize:20},t('expertModeTips2')),/*#__PURE__*/React.createElement(ButtonError,{error:true,padding:'12px',onClick:function onClick(){if(window.prompt(\"Please type the word \\\"confirm\\\" to enable expert mode.\")==='confirm'){toggleExpertMode();setShowConfirmation(false);}}},/*#__PURE__*/React.createElement(Text,{fontSize:20,fontWeight:500,id:\"confirm-expert-mode\"},t('turnOnExpertMode'))))))),/*#__PURE__*/React.createElement(StyledMenuButton,{onClick:toggle,id:\"open-settings-dialog-button\"},/*#__PURE__*/React.createElement(StyledMenuIcon,null),expertMode&&/*#__PURE__*/React.createElement(EmojiWrapper,null,/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"wizard-icon\"},\"\\uD83E\\uDDD9\"))),open&&/*#__PURE__*/React.createElement(MenuFlyout,null,/*#__PURE__*/React.createElement(AutoColumn,{gap:\"md\",style:{padding:'1rem'}},/*#__PURE__*/React.createElement(Text,{fontWeight:600,fontSize:14},t('transactionSettings')),/*#__PURE__*/React.createElement(TransactionSettings,{rawSlippage:userSlippageTolerance,setRawSlippage:setUserslippageTolerance,deadline:deadline,setDeadline:setDeadline}),/*#__PURE__*/React.createElement(Text,{fontWeight:600,fontSize:14},t('interfaceSettings')),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.black,{fontWeight:400,fontSize:14,color:theme.text2},t('toggleExpertMode')),/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Bypasses confirmation modals and allows high slippage trades. Use at your own risk.\"})),/*#__PURE__*/React.createElement(Toggle,{id:\"toggle-expert-mode-button\",isActive:expertMode,toggle:expertMode?function(){toggleExpertMode();setShowConfirmation(false);}:function(){toggle();setShowConfirmation(true);}}))))));}/*\r\n<RowBetween>\r\n              <RowFixed>\r\n                <TYPE.black fontWeight={400} fontSize={14} color={theme.text2}>\r\n                  {t('toggleDarkMode')}\r\n                </TYPE.black>\r\n              </RowFixed>\r\n              <Toggle isActive={darkMode} toggle={toggleDarkMode} />\r\n            </RowBetween>\r\n  */","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/components/Settings/index.tsx"],"names":["React","useRef","useContext","useState","Settings","X","styled","useOnClickOutside","useUserSlippageTolerance","useExpertModeManager","useUserDeadline","TransactionSettings","RowFixed","RowBetween","TYPE","QuestionHelper","Toggle","ThemeContext","AutoColumn","ButtonError","useSettingsMenuOpen","useToggleSettingsMenu","Text","Modal","useTranslation","StyledMenuIcon","theme","text1","StyledCloseIcon","StyledMenuButton","button","bg3","bg4","EmojiWrapper","div","StyledMenu","MenuFlyout","span","bg1","mediaWidth","upToExtraSmall","Break","ModalContentWrapper","bg2","SettingsTab","node","open","toggle","t","userSlippageTolerance","setUserslippageTolerance","deadline","setDeadline","expertMode","toggleExpertMode","showConfirmation","setShowConfirmation","undefined","padding","window","prompt","text2"],"mappings":"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","sourcesContent":["import React, { useRef, useContext, useState } from 'react'\r\nimport { Settings, X } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport {\r\n  useUserSlippageTolerance,\r\n  useExpertModeManager,\r\n  useUserDeadline,\r\n} from '../../state/user/hooks'\r\n//useDarkModeManager\r\nimport TransactionSettings from '../TransactionSettings'\r\nimport { RowFixed, RowBetween } from '../Row'\r\nimport { TYPE } from '../../theme'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport Toggle from '../Toggle'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\nimport { ButtonError } from '../Button'\r\nimport { useSettingsMenuOpen, useToggleSettingsMenu } from '../../state/application/hooks'\r\nimport { Text } from 'rebass'\r\nimport Modal from '../Modal'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst StyledMenuIcon = styled(Settings)`\r\n  height: 20px;\r\n  width: 20px;\r\n\r\n  > * {\r\n    stroke: ${({ theme }) => theme.text1};\r\n  }\r\n`\r\n\r\nconst StyledCloseIcon = styled(X)`\r\n  height: 20px;\r\n  width: 20px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  > * {\r\n    stroke: ${({ theme }) => theme.text1};\r\n  }\r\n`\r\n\r\nconst StyledMenuButton = styled.button`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  background-color: transparent;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n\r\n  padding: 0.15rem 0.5rem;\r\n  border-radius: 0.5rem;\r\n\r\n  :hover,\r\n  :focus {\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: ${({ theme }) => theme.bg4};\r\n  }\r\n\r\n  svg {\r\n    margin-top: 2px;\r\n  }\r\n`\r\nconst EmojiWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: -6px;\r\n  right: 0px;\r\n  font-size: 14px;\r\n`\r\n\r\nconst StyledMenu = styled.div`\r\n  margin-left: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border: none;\r\n  text-align: left;\r\n`\r\n\r\nconst MenuFlyout = styled.span`\r\n  min-width: 20.125rem;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n\r\n  border: 1px solid ${({ theme }) => theme.bg3};\r\n\r\n  border-radius: 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1rem;\r\n  position: absolute;\r\n  top: 3rem;\r\n  right: 0rem;\r\n  z-index: 100;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\r\n    min-width: 18.125rem;\r\n    right: -46px;\r\n  `};\r\n`\r\n\r\nconst Break = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n`\r\n\r\nconst ModalContentWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2rem 0;\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  border-radius: 20px;\r\n`\r\n\r\nexport default function SettingsTab() {\r\n  const node = useRef<HTMLDivElement>()\r\n  const open = useSettingsMenuOpen()\r\n  const toggle = useToggleSettingsMenu()\r\n  const { t } = useTranslation()\r\n\r\n  const theme = useContext(ThemeContext)\r\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\r\n\r\n  const [deadline, setDeadline] = useUserDeadline()\r\n\r\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\r\n\r\n  //const [darkMode, toggleDarkMode] = useDarkModeManager()\r\n\r\n  // show confirmation view before turning on\r\n  const [showConfirmation, setShowConfirmation] = useState(false)\r\n\r\n  useOnClickOutside(node, open ? toggle : undefined)\r\n\r\n  return (\r\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\r\n    <StyledMenu ref={node as any}>\r\n      <Modal isOpen={showConfirmation} onDismiss={() => setShowConfirmation(false)} maxHeight={100}>\r\n        <ModalContentWrapper>\r\n          <AutoColumn gap=\"lg\">\r\n            <RowBetween style={{ padding: '0 2rem' }}>\r\n              <div />\r\n              <Text fontWeight={500} fontSize={20}>\r\n              {t('areYouSure')}\r\n              </Text>\r\n              <StyledCloseIcon onClick={() => setShowConfirmation(false)} />\r\n            </RowBetween>\r\n            <Break />\r\n            <AutoColumn gap=\"lg\" style={{ padding: '0 2rem' }}>\r\n              <Text fontWeight={500} fontSize={20}>\r\n              {t('expertModeTips1')}\r\n              </Text>\r\n              <Text fontWeight={600} fontSize={20}>\r\n              {t('expertModeTips2')}\r\n              </Text>\r\n              <ButtonError\r\n                error={true}\r\n                padding={'12px'}\r\n                onClick={() => {\r\n                  if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\r\n                    toggleExpertMode()\r\n                    setShowConfirmation(false)\r\n                  }\r\n                }}\r\n              >\r\n                <Text fontSize={20} fontWeight={500} id=\"confirm-expert-mode\">\r\n                {t('turnOnExpertMode')}\r\n                </Text>\r\n              </ButtonError>\r\n            </AutoColumn>\r\n          </AutoColumn>\r\n        </ModalContentWrapper>\r\n      </Modal>\r\n      <StyledMenuButton onClick={toggle} id=\"open-settings-dialog-button\">\r\n        <StyledMenuIcon />\r\n        {expertMode && (\r\n          <EmojiWrapper>\r\n            <span role=\"img\" aria-label=\"wizard-icon\">\r\n              🧙\r\n            </span>\r\n          </EmojiWrapper>\r\n        )}\r\n      </StyledMenuButton>\r\n      {open && (\r\n        <MenuFlyout>\r\n          <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\r\n            <Text fontWeight={600} fontSize={14}>\r\n              {t('transactionSettings')}\r\n            </Text>\r\n            <TransactionSettings\r\n              rawSlippage={userSlippageTolerance}\r\n              setRawSlippage={setUserslippageTolerance}\r\n              deadline={deadline}\r\n              setDeadline={setDeadline}\r\n            />\r\n            <Text fontWeight={600} fontSize={14}>\r\n            {t('interfaceSettings')}\r\n            </Text>\r\n            <RowBetween>\r\n              <RowFixed>\r\n                <TYPE.black fontWeight={400} fontSize={14} color={theme.text2}>\r\n                {t('toggleExpertMode')}\r\n                </TYPE.black>\r\n                <QuestionHelper text=\"Bypasses confirmation modals and allows high slippage trades. Use at your own risk.\" />\r\n              </RowFixed>\r\n              <Toggle\r\n                id=\"toggle-expert-mode-button\"\r\n                isActive={expertMode}\r\n                toggle={\r\n                  expertMode\r\n                    ? () => {\r\n                        toggleExpertMode()\r\n                        setShowConfirmation(false)\r\n                      }\r\n                    : () => {\r\n                        toggle()\r\n                        setShowConfirmation(true)\r\n                      }\r\n                }\r\n              />\r\n            </RowBetween>\r\n            \r\n          </AutoColumn>\r\n        </MenuFlyout>\r\n      )}\r\n    </StyledMenu>\r\n  )\r\n}\r\n\r\n/*\r\n<RowBetween>\r\n              <RowFixed>\r\n                <TYPE.black fontWeight={400} fontSize={14} color={theme.text2}>\r\n                  {t('toggleDarkMode')}\r\n                </TYPE.black>\r\n              </RowFixed>\r\n              <Toggle isActive={darkMode} toggle={toggleDarkMode} />\r\n            </RowBetween>\r\n  */\r\n"]},"metadata":{},"sourceType":"module"}