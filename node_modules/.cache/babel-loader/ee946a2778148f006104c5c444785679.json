{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\src\\\\theme\\\\index.tsx\";\n//import { transparentize } from 'polished'\n//import React, { useMemo } from 'react\nimport React from 'react';\nimport styled, { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle, css } from 'styled-components'; //import { useIsDarkMode } from '../state/user/hooks'\n\nimport { Text } from 'rebass';\n//import BackgroundImage from '../assets/images/background-min.png'\nexport * from './components';\nconst MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 600,\n  upToMedium: 960,\n  upToLarge: 1280\n};\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  ;\n\n  accumulator[size] = (a, b, c) => css`\n      @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n        ${css(a, b, c)}\n      }\n    `;\n\n  return accumulator;\n}, {});\nconst white = '#FFFFFF';\nconst black = '#000000';\nexport function colors() {\n  return {\n    // base\n    white,\n    black,\n    // text\n    text1: '#FFFFFF',\n    text2: '#C3C5CB',\n    text3: '#6C7284',\n    text4: '#565A69',\n    text5: '#2C2F36',\n    // backgrounds / greys\n    bg1: '#212429',\n    bg2: '#2C2F36',\n    bg3: '#40444F',\n    bg4: '#565A69',\n    bg5: '#66cc00',\n    //specialty colors\n    modalBG: 'rgba(0,0,0,.425)',\n    advancedBG: 'rgba(0,0,0,0.1)',\n    //primary colors\n    primary1: '#006633',\n    primary2: '#3680E7',\n    primary3: '#4D8FEA',\n    primary4: '#376bad70',\n    primary5: '#153d6f70',\n    // color text\n    primaryText1: '#6da8ff',\n    // secondary colors\n    secondary1: '#006633',\n    secondary2: '#17000b26',\n    secondary3: '#17000b26',\n    // other\n    red1: '#FF6871',\n    red2: '#F82D3A',\n    green1: '#27AE60',\n    yellow1: '#FFE270',\n    yellow2: '#F3841E' // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n\n  };\n}\nexport function theme() {\n  return { ...colors(),\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24\n    },\n    //shadows\n    shadow1: '#000',\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `\n  };\n}\nexport default function ThemeProvider({\n  children\n}) {\n  //const darkMode = useIsDarkMode()\n  const themeObject = theme();\n  return /*#__PURE__*/React.createElement(StyledComponentsThemeProvider, {\n    theme: themeObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 10\n    }\n  }, children);\n}\nconst TextWrapper = styled(Text)`\n  color: ${({\n  color,\n  theme\n}) => theme[color]};\n`;\nexport const TYPE = {\n  main(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'text2'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  link(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'primary1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  black(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'text1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  body(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 400,\n      fontSize: 16,\n      color: 'text1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  largeHeader(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 600,\n      fontSize: 24\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  mediumHeader(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      fontSize: 20\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  subHeader(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 400,\n      fontSize: 14\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  blue(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'primary1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  yellow(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'yellow1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  darkGray(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'text3'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  gray(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'bg3'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  italic(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      fontSize: 12,\n      fontStyle: 'italic',\n      color: 'text2'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  error({\n    error,\n    ...props\n  }) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: error ? 'red1' : 'text2'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 12\n      }\n    }));\n  }\n\n};\nexport const FixedGlobalStyle = createGlobalStyle`\nhtml, input, textarea, button {\n  font-family: 'Inter', sans-serif;\n  letter-spacing: -0.018em;\n  font-display: fallback;\n}\n@supports (font-variation-settings: normal) {\n  html, input, textarea, button {\n    font-family: 'Inter var', sans-serif;\n  }\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  background-color: #669900;\n}\n\n.headernav {\n  align-items: center;\n  margin-left: 30vw;\n  margin-top: 2rem;\n  max-width: 100vw;\n}\n\n.logo {\n  height: 150px;\n  margin-bottom: 2rem;\n}\n\n@media screen and (max-width: 1024px){\n  .logo {\n    margin-top: 3rem;\n   height: 70px;\n   margin-left: 20vw;\n  }\n  .headernav {\n    margin-left: 0;\n  }\n}\n\n\n* {\n  box-sizing: border-box;\n}\n\nbutton {\n  user-select: none;\n}\n\nhtml {\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n`; //background-color: ${({ theme }) => theme.bg2};\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({\n  theme\n}) => theme.white};\n}\n\n\n`;\n/* \r\nbody {\r\n  min-height: 100vh;\r\n  background-position: 0 -30vh;\r\n  background-repeat: no-repeat;\r\n  background-image: ${({ theme }) =>\r\n    `radial-gradient(50% 50% at 50% 50%, ${theme.primary5} 0%, ${transparentize(1, theme.primary4)} 100%)`};\r\n}\r\n*/","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/theme/index.tsx"],"names":["React","styled","ThemeProvider","StyledComponentsThemeProvider","createGlobalStyle","css","Text","MEDIA_WIDTHS","upToExtraSmall","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","a","b","c","white","black","colors","text1","text2","text3","text4","text5","bg1","bg2","bg3","bg4","bg5","modalBG","advancedBG","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","red1","red2","green1","yellow1","yellow2","theme","grids","sm","md","lg","shadow1","mediaWidth","flexColumnNoWrap","flexRowNoWrap","children","themeObject","TextWrapper","color","TYPE","main","props","link","body","largeHeader","mediumHeader","subHeader","blue","yellow","darkGray","gray","italic","error","FixedGlobalStyle","ThemedGlobalStyle"],"mappings":"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","sourcesContent":["//import { transparentize } from 'polished'\r\n//import React, { useMemo } from 'react\r\nimport React from 'react'\r\nimport styled, {\r\n  ThemeProvider as StyledComponentsThemeProvider,\r\n  createGlobalStyle,\r\n  css,\r\n  DefaultTheme\r\n} from 'styled-components'\r\n//import { useIsDarkMode } from '../state/user/hooks'\r\nimport { Text, TextProps } from 'rebass'\r\nimport { Colors } from './styled'\r\n//import BackgroundImage from '../assets/images/background-min.png'\r\n\r\nexport * from './components'\r\n\r\nconst MEDIA_WIDTHS = {\r\n  upToExtraSmall: 500,\r\n  upToSmall: 600,\r\n  upToMedium: 960,\r\n  upToLarge: 1280\r\n}\r\n\r\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\r\n  (accumulator, size) => {\r\n    ;(accumulator as any)[size] = (a: any, b: any, c: any) => css`\r\n      @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\r\n        ${css(a, b, c)}\r\n      }\r\n    `\r\n    return accumulator\r\n  },\r\n  {}\r\n) as any\r\n\r\nconst white = '#FFFFFF'\r\nconst black = '#000000'\r\n\r\nexport function colors(): Colors {\r\n  return {\r\n    // base\r\n    white,\r\n    black,\r\n\r\n    // text\r\n    text1: '#FFFFFF',\r\n    text2: '#C3C5CB',\r\n    text3: '#6C7284',\r\n    text4: '#565A69',\r\n    text5: '#2C2F36',\r\n\r\n    // backgrounds / greys\r\n    bg1: '#212429',\r\n    bg2: '#2C2F36',\r\n    bg3: '#40444F',\r\n    bg4: '#565A69',\r\n    bg5: '#66cc00',\r\n\r\n    //specialty colors\r\n    modalBG: 'rgba(0,0,0,.425)',\r\n    advancedBG: 'rgba(0,0,0,0.1)',\r\n\r\n    //primary colors\r\n    primary1: '#006633',\r\n    primary2: '#3680E7',\r\n    primary3: '#4D8FEA',\r\n    primary4: '#376bad70',\r\n    primary5: '#153d6f70',\r\n\r\n    // color text\r\n    primaryText1: '#6da8ff',\r\n\r\n    // secondary colors\r\n    secondary1: '#006633',\r\n    secondary2: '#17000b26',\r\n    secondary3: '#17000b26',\r\n\r\n    // other\r\n    red1: '#FF6871',\r\n    red2: '#F82D3A',\r\n    green1: '#27AE60',\r\n    yellow1: '#FFE270',\r\n    yellow2: '#F3841E'\r\n\r\n    // dont wanna forget these blue yet\r\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\r\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\r\n  }\r\n}\r\n\r\nexport function theme(): DefaultTheme {\r\n  return {\r\n    ...colors(),\r\n\r\n    grids: {\r\n      sm: 8,\r\n      md: 12,\r\n      lg: 24\r\n    },\r\n\r\n    //shadows\r\n    shadow1: '#000',\r\n\r\n    // media queries\r\n    mediaWidth: mediaWidthTemplates,\r\n\r\n    // css snippets\r\n    flexColumnNoWrap: css`\r\n      display: flex;\r\n      flex-flow: column nowrap;\r\n    `,\r\n    flexRowNoWrap: css`\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n    `\r\n  }\r\n}\r\n\r\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\r\n  //const darkMode = useIsDarkMode()\r\n\r\n  const themeObject = theme()\r\n\r\n  return <StyledComponentsThemeProvider theme={themeObject}>{children}</StyledComponentsThemeProvider>\r\n}\r\n\r\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\r\n  color: ${({ color, theme }) => (theme as any)[color]};\r\n`\r\n\r\nexport const TYPE = {\r\n  main(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'text2'} {...props} />\r\n  },\r\n  link(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'primary1'} {...props} />\r\n  },\r\n  black(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'text1'} {...props} />\r\n  },\r\n  body(props: TextProps) {\r\n    return <TextWrapper fontWeight={400} fontSize={16} color={'text1'} {...props} />\r\n  },\r\n  largeHeader(props: TextProps) {\r\n    return <TextWrapper fontWeight={600} fontSize={24} {...props} />\r\n  },\r\n  mediumHeader(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} fontSize={20} {...props} />\r\n  },\r\n  subHeader(props: TextProps) {\r\n    return <TextWrapper fontWeight={400} fontSize={14} {...props} />\r\n  },\r\n  blue(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'primary1'} {...props} />\r\n  },\r\n  yellow(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'yellow1'} {...props} />\r\n  },\r\n  darkGray(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'text3'} {...props} />\r\n  },\r\n  gray(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'bg3'} {...props} />\r\n  },\r\n  italic(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} fontSize={12} fontStyle={'italic'} color={'text2'} {...props} />\r\n  },\r\n  error({ error, ...props }: { error: boolean } & TextProps) {\r\n    return <TextWrapper fontWeight={500} color={error ? 'red1' : 'text2'} {...props} />\r\n  }\r\n}\r\n\r\nexport const FixedGlobalStyle = createGlobalStyle`\r\nhtml, input, textarea, button {\r\n  font-family: 'Inter', sans-serif;\r\n  letter-spacing: -0.018em;\r\n  font-display: fallback;\r\n}\r\n@supports (font-variation-settings: normal) {\r\n  html, input, textarea, button {\r\n    font-family: 'Inter var', sans-serif;\r\n  }\r\n}\r\n\r\nhtml,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #669900;\r\n}\r\n\r\n.headernav {\r\n  align-items: center;\r\n  margin-left: 30vw;\r\n  margin-top: 2rem;\r\n  max-width: 100vw;\r\n}\r\n\r\n.logo {\r\n  height: 150px;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n@media screen and (max-width: 1024px){\r\n  .logo {\r\n    margin-top: 3rem;\r\n   height: 70px;\r\n   margin-left: 20vw;\r\n  }\r\n  .headernav {\r\n    margin-left: 0;\r\n  }\r\n}\r\n\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n  user-select: none;\r\n}\r\n\r\nhtml {\r\n  font-size: 16px;\r\n  font-variant: none;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n`\r\n//background-color: ${({ theme }) => theme.bg2};\r\nexport const ThemedGlobalStyle = createGlobalStyle`\r\nhtml {\r\n  color: ${({ theme }) => theme.white};\r\n}\r\n\r\n\r\n`\r\n/* \r\nbody {\r\n  min-height: 100vh;\r\n  background-position: 0 -30vh;\r\n  background-repeat: no-repeat;\r\n  background-image: ${({ theme }) =>\r\n    `radial-gradient(50% 50% at 50% 50%, ${theme.primary5} 0%, ${transparentize(1, theme.primary4)} 100%)`};\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}