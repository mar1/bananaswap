{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{JSBI,Percent,TokenAmount}from'moonbeamswap';import{useCallback}from'react';import{useDispatch,useSelector}from'react-redux';import{usePair}from'../../data/Reserves';import{useTotalSupply}from'../../data/TotalSupply';import{useActiveWeb3React}from'../../hooks';import{wrappedCurrency}from'../../utils/wrappedCurrency';import{tryParseAmount}from'../swap/hooks';import{useTokenBalances}from'../wallet/hooks';import{Field,typeInput}from'./actions';export function useBurnState(){return useSelector(function(state){return state.burn;});}export function useDerivedBurnInfo(currencyA,currencyB){var _pair$liquidityToken$,_pair$liquidityToken,_tokens,_liquidityValues,_parsedAmounts;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var _useBurnState=useBurnState(),independentField=_useBurnState.independentField,typedValue=_useBurnState.typedValue;// pair + totalsupply\nvar _usePair=usePair(currencyA,currencyB),_usePair2=_slicedToArray(_usePair,2),pair=_usePair2[1];// balances\nvar relevantTokenBalances=useTokenBalances(account!==null&&account!==void 0?account:undefined,[pair===null||pair===void 0?void 0:pair.liquidityToken]);var userLiquidity=relevantTokenBalances===null||relevantTokenBalances===void 0?void 0:relevantTokenBalances[(_pair$liquidityToken$=pair===null||pair===void 0?void 0:(_pair$liquidityToken=pair.liquidityToken)===null||_pair$liquidityToken===void 0?void 0:_pair$liquidityToken.address)!==null&&_pair$liquidityToken$!==void 0?_pair$liquidityToken$:''];var _ref=[wrappedCurrency(currencyA,chainId),wrappedCurrency(currencyB,chainId)],tokenA=_ref[0],tokenB=_ref[1];var tokens=(_tokens={},_defineProperty(_tokens,Field.CURRENCY_A,tokenA),_defineProperty(_tokens,Field.CURRENCY_B,tokenB),_defineProperty(_tokens,Field.LIQUIDITY,pair===null||pair===void 0?void 0:pair.liquidityToken),_tokens);// liquidity values\nvar totalSupply=useTotalSupply(pair===null||pair===void 0?void 0:pair.liquidityToken);var liquidityValueA=pair&&totalSupply&&userLiquidity&&tokenA&&// this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\nJSBI.greaterThanOrEqual(totalSupply.raw,userLiquidity.raw)?new TokenAmount(tokenA,pair.getLiquidityValue(tokenA,totalSupply,userLiquidity,false).raw):undefined;var liquidityValueB=pair&&totalSupply&&userLiquidity&&tokenB&&// this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\nJSBI.greaterThanOrEqual(totalSupply.raw,userLiquidity.raw)?new TokenAmount(tokenB,pair.getLiquidityValue(tokenB,totalSupply,userLiquidity,false).raw):undefined;var liquidityValues=(_liquidityValues={},_defineProperty(_liquidityValues,Field.CURRENCY_A,liquidityValueA),_defineProperty(_liquidityValues,Field.CURRENCY_B,liquidityValueB),_liquidityValues);var percentToRemove=new Percent('0','100');// user specified a %\nif(independentField===Field.LIQUIDITY_PERCENT){percentToRemove=new Percent(typedValue,'100');}// user specified a specific amount of liquidity tokens\nelse if(independentField===Field.LIQUIDITY){if(pair===null||pair===void 0?void 0:pair.liquidityToken){var independentAmount=tryParseAmount(typedValue,pair.liquidityToken);if(independentAmount&&userLiquidity&&!independentAmount.greaterThan(userLiquidity)){percentToRemove=new Percent(independentAmount.raw,userLiquidity.raw);}}}// user specified a specific amount of token a or b\nelse{if(tokens[independentField]){var _independentAmount=tryParseAmount(typedValue,tokens[independentField]);var liquidityValue=liquidityValues[independentField];if(_independentAmount&&liquidityValue&&!_independentAmount.greaterThan(liquidityValue)){percentToRemove=new Percent(_independentAmount.raw,liquidityValue.raw);}}}var parsedAmounts=(_parsedAmounts={},_defineProperty(_parsedAmounts,Field.LIQUIDITY_PERCENT,percentToRemove),_defineProperty(_parsedAmounts,Field.LIQUIDITY,userLiquidity&&percentToRemove&&percentToRemove.greaterThan('0')?new TokenAmount(userLiquidity.token,percentToRemove.multiply(userLiquidity.raw).quotient):undefined),_defineProperty(_parsedAmounts,Field.CURRENCY_A,tokenA&&percentToRemove&&percentToRemove.greaterThan('0')&&liquidityValueA?new TokenAmount(tokenA,percentToRemove.multiply(liquidityValueA.raw).quotient):undefined),_defineProperty(_parsedAmounts,Field.CURRENCY_B,tokenB&&percentToRemove&&percentToRemove.greaterThan('0')&&liquidityValueB?new TokenAmount(tokenB,percentToRemove.multiply(liquidityValueB.raw).quotient):undefined),_parsedAmounts);var error;if(!account){error='Connect Wallet';}if(!parsedAmounts[Field.LIQUIDITY]||!parsedAmounts[Field.CURRENCY_A]||!parsedAmounts[Field.CURRENCY_B]){var _error;error=(_error=error)!==null&&_error!==void 0?_error:'Enter an amount';}return{pair:pair,parsedAmounts:parsedAmounts,error:error};}export function useBurnActionHandlers(){var dispatch=useDispatch();var onUserInput=useCallback(function(field,typedValue){dispatch(typeInput({field:field,typedValue:typedValue}));},[dispatch]);return{onUserInput:onUserInput};}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/state/burn/hooks.ts"],"names":["JSBI","Percent","TokenAmount","useCallback","useDispatch","useSelector","usePair","useTotalSupply","useActiveWeb3React","wrappedCurrency","tryParseAmount","useTokenBalances","Field","typeInput","useBurnState","state","burn","useDerivedBurnInfo","currencyA","currencyB","account","chainId","independentField","typedValue","pair","relevantTokenBalances","undefined","liquidityToken","userLiquidity","address","tokenA","tokenB","tokens","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","liquidityValueA","greaterThanOrEqual","raw","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","greaterThan","liquidityValue","parsedAmounts","token","multiply","quotient","error","useBurnActionHandlers","dispatch","onUserInput","field"],"mappings":"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","sourcesContent":["import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from 'moonbeamswap'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { usePair } from '../../data/Reserves'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { tryParseAmount } from '../swap/hooks'\r\nimport { useTokenBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport function useBurnState(): AppState['burn'] {\r\n  return useSelector<AppState, AppState['burn']>(state => state.burn)\r\n}\r\n\r\nexport function useDerivedBurnInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined\r\n): {\r\n  pair?: Pair | null\r\n  parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: CurrencyAmount\r\n    [Field.CURRENCY_B]?: CurrencyAmount\r\n  }\r\n  error?: string\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue } = useBurnState()\r\n\r\n  // pair + totalsupply\r\n  const [, pair] = usePair(currencyA, currencyB)\r\n\r\n  // balances\r\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\r\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\r\n\r\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n  const tokens = {\r\n    [Field.CURRENCY_A]: tokenA,\r\n    [Field.CURRENCY_B]: tokenB,\r\n    [Field.LIQUIDITY]: pair?.liquidityToken\r\n  }\r\n\r\n  // liquidity values\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n  const liquidityValueA =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenA &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\r\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\r\n      : undefined\r\n  const liquidityValueB =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenB &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\r\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\r\n      : undefined\r\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\r\n    [Field.CURRENCY_A]: liquidityValueA,\r\n    [Field.CURRENCY_B]: liquidityValueB\r\n  }\r\n\r\n  let percentToRemove: Percent = new Percent('0', '100')\r\n  // user specified a %\r\n  if (independentField === Field.LIQUIDITY_PERCENT) {\r\n    percentToRemove = new Percent(typedValue, '100')\r\n  }\r\n  // user specified a specific amount of liquidity tokens\r\n  else if (independentField === Field.LIQUIDITY) {\r\n    if (pair?.liquidityToken) {\r\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\r\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\r\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\r\n      }\r\n    }\r\n  }\r\n  // user specified a specific amount of token a or b\r\n  else {\r\n    if (tokens[independentField]) {\r\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\r\n      const liquidityValue = liquidityValues[independentField]\r\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\r\n        percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\r\n      }\r\n    }\r\n  }\r\n\r\n  const parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: TokenAmount\r\n    [Field.CURRENCY_B]?: TokenAmount\r\n  } = {\r\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\r\n    [Field.LIQUIDITY]:\r\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_A]:\r\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\r\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_B]:\r\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\r\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\r\n        : undefined\r\n  }\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = 'Connect Wallet'\r\n  }\r\n\r\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? 'Enter an amount'\r\n  }\r\n\r\n  return { pair, parsedAmounts, error }\r\n}\r\n\r\nexport function useBurnActionHandlers(): {\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return {\r\n    onUserInput\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}