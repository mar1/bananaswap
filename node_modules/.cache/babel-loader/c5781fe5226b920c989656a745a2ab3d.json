{"ast":null,"code":"import{useCallback,useMemo}from'react';import{useActiveWeb3React}from'../../hooks';import{addPopup,removePopup,toggleWalletModal,toggleSettingsMenu}from'./actions';import{useSelector,useDispatch}from'react-redux';export function useBlockNumber(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;return useSelector(function(state){return state.application.blockNumber[chainId!==null&&chainId!==void 0?chainId:-1];});}export function useWalletModalOpen(){return useSelector(function(state){return state.application.walletModalOpen;});}export function useWalletModalToggle(){var dispatch=useDispatch();return useCallback(function(){return dispatch(toggleWalletModal());},[dispatch]);}export function useSettingsMenuOpen(){return useSelector(function(state){return state.application.settingsMenuOpen;});}export function useToggleSettingsMenu(){var dispatch=useDispatch();return useCallback(function(){return dispatch(toggleSettingsMenu());},[dispatch]);}// returns a function that allows adding a popup\nexport function useAddPopup(){var dispatch=useDispatch();return useCallback(function(content,key){dispatch(addPopup({content:content,key:key}));},[dispatch]);}// returns a function that allows removing a popup via its key\nexport function useRemovePopup(){var dispatch=useDispatch();return useCallback(function(key){dispatch(removePopup({key:key}));},[dispatch]);}// get the list of active popups\nexport function useActivePopups(){var list=useSelector(function(state){return state.application.popupList;});return useMemo(function(){return list.filter(function(item){return item.show;});},[list]);}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/state/application/hooks.ts"],"names":["useCallback","useMemo","useActiveWeb3React","addPopup","removePopup","toggleWalletModal","toggleSettingsMenu","useSelector","useDispatch","useBlockNumber","chainId","state","application","blockNumber","useWalletModalOpen","walletModalOpen","useWalletModalToggle","dispatch","useSettingsMenuOpen","settingsMenuOpen","useToggleSettingsMenu","useAddPopup","content","key","useRemovePopup","useActivePopups","list","popupList","filter","item","show"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,OAAtB,KAAqC,OAArC,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,OAASC,QAAT,CAAiCC,WAAjC,CAA8CC,iBAA9C,CAAiEC,kBAAjE,KAA2F,WAA3F,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAGA,MAAO,SAASC,CAAAA,cAAT,EAA8C,CACnD,wBAAoBP,kBAAkB,EAAtC,CAAQQ,OAAR,qBAAQA,OAAR,CAEA,MAAOH,CAAAA,WAAW,CAAC,SAACI,KAAD,QAAqBA,CAAAA,KAAK,CAACC,WAAN,CAAkBC,WAAlB,CAA8BH,OAA9B,SAA8BA,OAA9B,UAA8BA,OAA9B,CAAyC,CAAC,CAA1C,CAArB,EAAD,CAAlB,CACD,CAED,MAAO,SAASI,CAAAA,kBAAT,EAAuC,CAC5C,MAAOP,CAAAA,WAAW,CAAC,SAACI,KAAD,QAAqBA,CAAAA,KAAK,CAACC,WAAN,CAAkBG,eAAvC,EAAD,CAAlB,CACD,CAED,MAAO,SAASC,CAAAA,oBAAT,EAA4C,CACjD,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,MAAOR,CAAAA,WAAW,CAAC,iBAAMiB,CAAAA,QAAQ,CAACZ,iBAAiB,EAAlB,CAAd,EAAD,CAAsC,CAACY,QAAD,CAAtC,CAAlB,CACD,CAED,MAAO,SAASC,CAAAA,mBAAT,EAAwC,CAC7C,MAAOX,CAAAA,WAAW,CAAC,SAACI,KAAD,QAAqBA,CAAAA,KAAK,CAACC,WAAN,CAAkBO,gBAAvC,EAAD,CAAlB,CACD,CAED,MAAO,SAASC,CAAAA,qBAAT,EAA6C,CAClD,GAAMH,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,MAAOR,CAAAA,WAAW,CAAC,iBAAMiB,CAAAA,QAAQ,CAACX,kBAAkB,EAAnB,CAAd,EAAD,CAAuC,CAACW,QAAD,CAAvC,CAAlB,CACD,CAED;AACA,MAAO,SAASI,CAAAA,WAAT,EAAsE,CAC3E,GAAMJ,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,MAAOR,CAAAA,WAAW,CAChB,SAACsB,OAAD,CAAwBC,GAAxB,CAAyC,CACvCN,QAAQ,CAACd,QAAQ,CAAC,CAAEmB,OAAO,CAAPA,OAAF,CAAWC,GAAG,CAAHA,GAAX,CAAD,CAAT,CAAR,CACD,CAHe,CAIhB,CAACN,QAAD,CAJgB,CAAlB,CAMD,CAED;AACA,MAAO,SAASO,CAAAA,cAAT,EAAiD,CACtD,GAAMP,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,MAAOR,CAAAA,WAAW,CAChB,SAACuB,GAAD,CAAiB,CACfN,QAAQ,CAACb,WAAW,CAAC,CAAEmB,GAAG,CAAHA,GAAF,CAAD,CAAZ,CAAR,CACD,CAHe,CAIhB,CAACN,QAAD,CAJgB,CAAlB,CAMD,CAED;AACA,MAAO,SAASQ,CAAAA,eAAT,EAAiE,CACtE,GAAMC,CAAAA,IAAI,CAAGnB,WAAW,CAAC,SAACI,KAAD,QAAqBA,CAAAA,KAAK,CAACC,WAAN,CAAkBe,SAAvC,EAAD,CAAxB,CACA,MAAO1B,CAAAA,OAAO,CAAC,iBAAMyB,CAAAA,IAAI,CAACE,MAAL,CAAY,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAT,EAAhB,CAAN,EAAD,CAAuC,CAACJ,IAAD,CAAvC,CAAd,CACD","sourcesContent":["import { useCallback, useMemo } from 'react'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { addPopup, PopupContent, removePopup, toggleWalletModal, toggleSettingsMenu } from './actions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { AppState } from '../index'\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\r\n}\r\n\r\nexport function useWalletModalOpen(): boolean {\r\n  return useSelector((state: AppState) => state.application.walletModalOpen)\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch])\r\n}\r\n\r\nexport function useSettingsMenuOpen(): boolean {\r\n  return useSelector((state: AppState) => state.application.settingsMenuOpen)\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch])\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch()\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList)\r\n  return useMemo(() => list.filter(item => item.show), [list])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}