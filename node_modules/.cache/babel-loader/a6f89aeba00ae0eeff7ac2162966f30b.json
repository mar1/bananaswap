{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\src\\\\pages\\\\RemoveLiquidity\\\\index.tsx\";\nimport { splitSignature } from '@ethersproject/bytes';\nimport { currencyEquals, DEV, Percent, WDEV } from 'moonbeamswap';\nimport React, { useCallback, useContext, useMemo, useState } from 'react';\nimport { ArrowDown, Plus } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { ButtonPrimary, ButtonLight, ButtonError, ButtonConfirmed } from '../../components/Button';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row, { RowBetween, RowFixed } from '../../components/Row';\nimport Slider from '../../components/Slider';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { usePairContract } from '../../hooks/useContract';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { StyledInternalLink, TYPE } from '../../theme';\nimport { calculateSlippageAmount, getRouterContract } from '../../utils'; //calculateGasMargin,\n\nimport { currencyId } from '../../utils/currencyId';\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styleds';\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback';\nimport { Dots } from '../../components/swap/styleds';\nimport { useBurnActionHandlers } from '../../state/burn/hooks';\nimport { useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks';\nimport { Field } from '../../state/burn/actions';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { BigNumber } from '@ethersproject/bignumber';\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  }\n}) {\n  var _useCurrency, _useCurrency2, _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _parsedAmounts$Field$7, _pair$liquidityToken, _parsedAmounts$Field$13, _parsedAmounts$Field$14;\n\n  const [currencyA, currencyB] = [(_useCurrency = useCurrency(currencyIdA)) !== null && _useCurrency !== void 0 ? _useCurrency : undefined, (_useCurrency2 = useCurrency(currencyIdB)) !== null && _useCurrency2 !== void 0 ? _useCurrency2 : undefined];\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [currencyA, currencyB, chainId]);\n  const theme = useContext(ThemeContext); // toggle wallet when disconnected\n\n  const toggleWalletModal = useWalletModalToggle(); // burn state\n\n  const {\n    independentField,\n    typedValue\n  } = useBurnState();\n  const {\n    pair,\n    parsedAmounts,\n    error\n  } = useDerivedBurnInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onUserInput: _onUserInput\n  } = useBurnActionHandlers();\n  const isValid = !error; // modal and loading\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [showDetailed, setShowDetailed] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // txn values\n\n  const [txHash, setTxHash] = useState('');\n  const [deadline] = useUserDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0') ? '0' : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100')) ? '<1' : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]: independentField === Field.LIQUIDITY ? typedValue : (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '',\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? typedValue : (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '',\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_B ? typedValue : (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6)) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : ''\n  };\n  const atMaxAmount = (_parsedAmounts$Field$7 = parsedAmounts[Field.LIQUIDITY_PERCENT]) === null || _parsedAmounts$Field$7 === void 0 ? void 0 : _parsedAmounts$Field$7.equalTo(new Percent('1')); // pair contract\n\n  const pairContract = usePairContract(pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address); // allowance handling\n\n  const [signatureData, setSignatureData] = useState(null);\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS[chainId ? chainId : '']);\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library) throw new Error('missing dependencies');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount'); // try to gather a signature for permission\n\n    const nonce = await pairContract.nonces(account);\n    const deadlineForSignature = Math.ceil(Date.now() / 1000) + deadline;\n    const EIP712Domain = [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'version',\n      type: 'string'\n    }, {\n      name: 'chainId',\n      type: 'uint256'\n    }, {\n      name: 'verifyingContract',\n      type: 'address'\n    }];\n    const domain = {\n      name: 'Uniswap V2',\n      //correct domain name!!!!!!!!!!!!!!!!!!!!!!!\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pair.liquidityToken.address\n    };\n    const Permit = [{\n      name: 'owner',\n      type: 'address'\n    }, {\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint256'\n    }, {\n      name: 'nonce',\n      type: 'uint256'\n    }, {\n      name: 'deadline',\n      type: 'uint256'\n    }];\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadlineForSignature\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    });\n    library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(signature => {\n      setSignatureData({\n        v: signature.v,\n        r: signature.r,\n        s: signature.s,\n        deadline: deadlineForSignature\n      });\n    }).catch(error => {\n      // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        approveCallback();\n      }\n    });\n  } // wrapped onUserInput to clear signatures\n\n\n  const onUserInput = useCallback((field, typedValue) => {\n    setSignatureData(null);\n    return _onUserInput(field, typedValue);\n  }, [_onUserInput]);\n  const onLiquidityInput = useCallback(typedValue => onUserInput(Field.LIQUIDITY, typedValue), [onUserInput]);\n  const onCurrencyAInput = useCallback(typedValue => onUserInput(Field.CURRENCY_A, typedValue), [onUserInput]);\n  const onCurrencyBInput = useCallback(typedValue => onUserInput(Field.CURRENCY_B, typedValue), [onUserInput]); // tx sending\n\n  const addTransaction = useTransactionAdder();\n\n  async function onRemove() {\n    if (!chainId || !library || !account) throw new Error('missing dependencies');\n    const {\n      [Field.CURRENCY_A]: currencyAmountA,\n      [Field.CURRENCY_B]: currencyAmountB\n    } = parsedAmounts;\n\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts');\n    }\n\n    const router = getRouterContract(chainId, library, account);\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    };\n    if (!currencyA || !currencyB) throw new Error('missing tokens');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount');\n    const currencyBIsETH = currencyB === DEV;\n    const oneCurrencyIsETH = currencyA === DEV || currencyBIsETH;\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline;\n    if (!tokenA || !tokenB) throw new Error('could not wrap');\n    let methodNames, args; // we have approval, use normal remove liquidity\n\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens'];\n        args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, deadlineFromNow];\n      } // removeLiquidity\n      else {\n          methodNames = ['removeLiquidity'];\n          args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadlineFromNow];\n        }\n    } // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n        // removeLiquidityETHWithPermit\n        if (oneCurrencyIsETH) {\n          methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens'];\n          args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n        } // removeLiquidityETHWithPermit\n        else {\n            methodNames = ['removeLiquidityWithPermit'];\n            args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n          }\n      } else {\n        throw new Error('Attempting to confirm without approval or a signature. Please contact support.');\n      }\n    /*\r\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\r\n      methodNames.map(methodName =>\r\n        router.estimateGas[methodName](...args)\r\n          .then(calculateGasMargin)\r\n          .catch(error => {\r\n            console.error(`estimateGas failed`, methodName, args, error)\r\n            return undefined\r\n          })\r\n      )\r\n    )\r\n    */\n\n\n    const safeGasEstimates = [BigNumber.from('5000000')];\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate => BigNumber.isBigNumber(safeGasEstimate)); // all estimations failed...\n\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.');\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation];\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n      setAttemptingTxn(true);\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      }).then(response => {\n        var _parsedAmounts$Field$8, _parsedAmounts$Field$9;\n\n        setAttemptingTxn(false);\n        addTransaction(response, {\n          summary: 'Remove ' + ((_parsedAmounts$Field$8 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$8 === void 0 ? void 0 : _parsedAmounts$Field$8.toSignificant(3)) + ' ' + (currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) + ' and ' + ((_parsedAmounts$Field$9 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$9 === void 0 ? void 0 : _parsedAmounts$Field$9.toSignificant(3)) + ' ' + (currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol)\n        });\n        setTxHash(response.hash);\n        ReactGA.event({\n          category: 'Liquidity',\n          action: 'Remove',\n          label: [currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol].join('/')\n        });\n      }).catch(error => {\n        setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n        console.error(error);\n      });\n    }\n  }\n\n  function modalHeader() {\n    var _parsedAmounts$Field$10, _parsedAmounts$Field$11;\n\n    return /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: 'md',\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RowBetween, {\n      align: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: 24,\n      fontWeight: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }\n    }, (_parsedAmounts$Field$10 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$10 === void 0 ? void 0 : _parsedAmounts$Field$10.toSignificant(6)), /*#__PURE__*/React.createElement(RowFixed, {\n      gap: \"4px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n      currency: currencyA,\n      size: '24px',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontSize: 24,\n      fontWeight: 500,\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol))), /*#__PURE__*/React.createElement(RowFixed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Plus, {\n      size: \"16\",\n      color: theme.text2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(RowBetween, {\n      align: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: 24,\n      fontWeight: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }\n    }, (_parsedAmounts$Field$11 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$11 === void 0 ? void 0 : _parsedAmounts$Field$11.toSignificant(6)), /*#__PURE__*/React.createElement(RowFixed, {\n      gap: \"4px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n      currency: currencyB,\n      size: '24px',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontSize: 24,\n      fontWeight: 500,\n      style: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol))), /*#__PURE__*/React.createElement(TYPE.italic, {\n      fontSize: 12,\n      color: theme.text2,\n      textAlign: \"left\",\n      padding: '12px 0 0 0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }, `Output is estimated. If the price changes by more than ${allowedSlippage / 100}% your transaction will revert.`));\n  }\n\n  function modalBottom() {\n    var _parsedAmounts$Field$12;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RowBetween, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: theme.text2,\n      fontWeight: 500,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, 'UNI ' + (currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) + '/' + (currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol), \" Burned\"), /*#__PURE__*/React.createElement(RowFixed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencyA,\n      currency1: currencyB,\n      margin: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, (_parsedAmounts$Field$12 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$12 === void 0 ? void 0 : _parsedAmounts$Field$12.toSignificant(6)))), pair && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RowBetween, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: theme.text2,\n      fontWeight: 500,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 16,\n      color: theme.text1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }, \"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol)), /*#__PURE__*/React.createElement(RowBetween, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 16,\n      color: theme.text1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }, \"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol))), /*#__PURE__*/React.createElement(ButtonPrimary, {\n      disabled: !(approval === ApprovalState.APPROVED || signatureData !== null),\n      onClick: onRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, \"Confirm\")));\n  }\n\n  const pendingText = `Removing ${(_parsedAmounts$Field$13 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$13 === void 0 ? void 0 : _parsedAmounts$Field$13.toSignificant(6)} ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol} and ${(_parsedAmounts$Field$14 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$14 === void 0 ? void 0 : _parsedAmounts$Field$14.toSignificant(6)} ${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol}`;\n  const liquidityPercentChangeCallback = useCallback(value => {\n    onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n  }, [onUserInput]);\n  const oneCurrencyIsETH = currencyA === DEV || currencyB === DEV;\n  const oneCurrencyIsWDEV = Boolean(chainId && (currencyA && currencyEquals(WDEV[chainId], currencyA) || currencyB && currencyEquals(WDEV[chainId], currencyB)));\n  const handleSelectCurrencyA = useCallback(currency => {\n    if (currencyIdB && currencyId(currency) === currencyIdB) {\n      history.push(`/remove/${currencyId(currency)}/${currencyIdA}`);\n    } else {\n      history.push(`/remove/${currencyId(currency)}/${currencyIdB}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleSelectCurrencyB = useCallback(currency => {\n    if (currencyIdA && currencyId(currency) === currencyIdA) {\n      history.push(`/remove/${currencyIdB}/${currencyId(currency)}`);\n    } else {\n      history.push(`/remove/${currencyIdA}/${currencyId(currency)}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    setSignatureData(null); // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0');\n    }\n\n    setTxHash('');\n  }, [onUserInput, txHash]);\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)), liquidityPercentChangeCallback);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddRemoveTabs, {\n    adding: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransactionConfirmationModal, {\n    isOpen: showConfirm,\n    onDismiss: handleDismissConfirmation,\n    attemptingTxn: attemptingTxn,\n    hash: txHash ? txHash : '',\n    content: () => /*#__PURE__*/React.createElement(ConfirmationModalContent, {\n      title: 'You will receive',\n      onDismiss: handleDismissConfirmation,\n      topContent: modalHeader,\n      bottomContent: modalBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 15\n      }\n    }),\n    pendingText: pendingText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 19\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(ClickableText, {\n    fontWeight: 500,\n    onClick: () => {\n      setShowDetailed(!showDetailed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 19\n    }\n  }, showDetailed ? 'Simple' : 'Detailed')), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 72,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 19\n    }\n  }, formattedAmounts[Field.LIQUIDITY_PERCENT], \"%\")), !showDetailed && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Slider, {\n    value: innerLiquidityPercentage,\n    onChange: setInnerLiquidityPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MaxButton, {\n    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '25'),\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 23\n    }\n  }, \"25%\"), /*#__PURE__*/React.createElement(MaxButton, {\n    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '50'),\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 23\n    }\n  }, \"50%\"), /*#__PURE__*/React.createElement(MaxButton, {\n    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '75'),\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 23\n    }\n  }, \"75%\"), /*#__PURE__*/React.createElement(MaxButton, {\n    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 23\n    }\n  }, \"Max\")))), !showDetailed && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 24,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 23\n    }\n  }, formattedAmounts[Field.CURRENCY_A] || '-'), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: currencyA,\n    style: {\n      marginRight: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontSize: 24,\n    fontWeight: 500,\n    id: \"remove-liquidity-tokena-symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 25\n    }\n  }, currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol))), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 24,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 23\n    }\n  }, formattedAmounts[Field.CURRENCY_B] || '-'), /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: currencyB,\n    style: {\n      marginRight: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontSize: 24,\n    fontWeight: 500,\n    id: \"remove-liquidity-tokenb-symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 25\n    }\n  }, currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol))), chainId && (oneCurrencyIsWDEV || oneCurrencyIsETH) ? /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 23\n    }\n  }, oneCurrencyIsETH ? /*#__PURE__*/React.createElement(StyledInternalLink, {\n    to: `/remove/${currencyA === DEV ? WDEV[chainId].address : currencyIdA}/${currencyB === DEV ? WDEV[chainId].address : currencyIdB}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 27\n    }\n  }, \"Receive WDEV\") : oneCurrencyIsWDEV ? /*#__PURE__*/React.createElement(StyledInternalLink, {\n    to: `/remove/${currencyA && currencyEquals(currencyA, WDEV[chainId]) ? 'ETH' : currencyIdA}/${currencyB && currencyEquals(currencyB, WDEV[chainId]) ? 'ETH' : currencyIdB}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 27\n    }\n  }, \"Receive DEV\") : null) : null)), showDetailed && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.LIQUIDITY],\n    onUserInput: onLiquidityInput,\n    onMax: () => {\n      onUserInput(Field.LIQUIDITY_PERCENT, '100');\n    },\n    showMaxButton: !atMaxAmount,\n    disableCurrencySelect: true,\n    currency: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n    pair: pair,\n    id: \"liquidity-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    hideBalance: true,\n    value: formattedAmounts[Field.CURRENCY_A],\n    onUserInput: onCurrencyAInput,\n    onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n    showMaxButton: !atMaxAmount,\n    currency: currencyA,\n    label: 'Output',\n    onCurrencySelect: handleSelectCurrencyA,\n    id: \"remove-liquidity-tokena\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    hideBalance: true,\n    value: formattedAmounts[Field.CURRENCY_B],\n    onUserInput: onCurrencyBInput,\n    onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n    showMaxButton: !atMaxAmount,\n    currency: currencyB,\n    label: 'Output',\n    onCurrencySelect: handleSelectCurrencyB,\n    id: \"remove-liquidity-tokenb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 17\n    }\n  })), pair && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px 20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 17\n    }\n  }, \"Price:\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 19\n    }\n  }, \"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol)), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 19\n    }\n  }, \"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 13\n    }\n  }, !account ? /*#__PURE__*/React.createElement(ButtonLight, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 17\n    }\n  }, \"Connect Wallet\") : /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    onClick: onAttemptToApprove,\n    confirmed: approval === ApprovalState.APPROVED || signatureData !== null,\n    disabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n    mr: \"0.5rem\",\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 19\n    }\n  }, approval === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 23\n    }\n  }, \"Approving\") : approval === ApprovalState.APPROVED || signatureData !== null ? 'Approved' : 'Approve'), /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: () => {\n      setShowConfirm(true);\n    },\n    disabled: !isValid || signatureData === null && approval !== ApprovalState.APPROVED,\n    error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 21\n    }\n  }, error || 'Remove'))))))), pair ? /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      minWidth: '20rem',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MinimalPositionCard, {\n    showUnwrapped: oneCurrencyIsWDEV,\n    pair: pair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 11\n    }\n  })) : null);\n}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/pages/RemoveLiquidity/index.tsx"],"names":["splitSignature","currencyEquals","DEV","Percent","WDEV","React","useCallback","useContext","useMemo","useState","ArrowDown","Plus","ReactGA","Text","ThemeContext","ButtonPrimary","ButtonLight","ButtonError","ButtonConfirmed","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFixed","Slider","CurrencyLogo","ROUTER_ADDRESS","useActiveWeb3React","useCurrency","usePairContract","useTransactionAdder","StyledInternalLink","TYPE","calculateSlippageAmount","getRouterContract","currencyId","useDebouncedChangeHandler","wrappedCurrency","AppBody","ClickableText","MaxButton","Wrapper","useApproveCallback","ApprovalState","Dots","useBurnActionHandlers","useDerivedBurnInfo","useBurnState","Field","useWalletModalToggle","useUserDeadline","useUserSlippageTolerance","BigNumber","RemoveLiquidity","history","match","params","currencyIdA","currencyIdB","currencyA","currencyB","undefined","account","chainId","library","tokenA","tokenB","theme","toggleWalletModal","independentField","typedValue","pair","parsedAmounts","error","onUserInput","_onUserInput","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","deadline","allowedSlippage","formattedAmounts","LIQUIDITY_PERCENT","equalTo","lessThan","toFixed","LIQUIDITY","toSignificant","CURRENCY_A","CURRENCY_B","atMaxAmount","pairContract","liquidityToken","address","signatureData","setSignatureData","approval","approveCallback","onAttemptToApprove","Error","liquidityAmount","nonce","nonces","deadlineForSignature","Math","ceil","Date","now","EIP712Domain","name","type","domain","version","verifyingContract","Permit","message","owner","spender","value","raw","toString","toHexString","data","JSON","stringify","types","primaryType","send","then","signature","v","r","s","catch","code","field","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","onRemove","currencyAmountA","currencyAmountB","router","amountsMin","currencyBIsETH","oneCurrencyIsETH","deadlineFromNow","methodNames","args","APPROVED","safeGasEstimates","from","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","console","methodName","gasLimit","response","summary","symbol","hash","event","category","action","label","join","modalHeader","marginTop","marginLeft","text2","modalBottom","text1","priceOf","pendingText","liquidityPercentChangeCallback","oneCurrencyIsWDEV","Boolean","handleSelectCurrencyA","currency","push","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","parseInt","alignItems","marginRight","justifyContent","padding","position","NOT_APPROVED","PENDING","minWidth"],"mappings":"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","sourcesContent":["import { splitSignature } from '@ethersproject/bytes'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, DEV, Percent, WDEV } from 'moonbeamswap'\r\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\r\nimport { ArrowDown, Plus } from 'react-feather'\r\nimport ReactGA from 'react-ga'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Text } from 'rebass'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { ButtonPrimary, ButtonLight, ButtonError, ButtonConfirmed } from '../../components/Button'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\r\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\r\n\r\nimport Slider from '../../components/Slider'\r\nimport CurrencyLogo from '../../components/CurrencyLogo'\r\nimport { ROUTER_ADDRESS } from '../../constants'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { usePairContract } from '../../hooks/useContract'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { StyledInternalLink, TYPE } from '../../theme'\r\nimport { calculateSlippageAmount, getRouterContract } from '../../utils'\r\n//calculateGasMargin,\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport AppBody from '../AppBody'\r\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styleds'\r\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\r\nimport { Dots } from '../../components/swap/styleds'\r\nimport { useBurnActionHandlers } from '../../state/burn/hooks'\r\nimport { useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks'\r\nimport { Field } from '../../state/burn/actions'\r\nimport { useWalletModalToggle } from '../../state/application/hooks'\r\nimport { useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\n\r\nexport default function RemoveLiquidity({\r\n  history,\r\n  match: {\r\n    params: { currencyIdA, currencyIdB }\r\n  }\r\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [\r\n    currencyA,\r\n    currencyB,\r\n    chainId\r\n  ])\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  // toggle wallet when disconnected\r\n  const toggleWalletModal = useWalletModalToggle()\r\n\r\n  // burn state\r\n  const { independentField, typedValue } = useBurnState()\r\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [txHash, setTxHash] = useState<string>('')\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const formattedAmounts = {\r\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\r\n      ? '0'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\r\n      ? '<1'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\r\n    [Field.LIQUIDITY]:\r\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_A]:\r\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_B]:\r\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? ''\r\n  }\r\n\r\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\r\n\r\n  // pair contract\r\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\r\n\r\n  // allowance handling\r\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\r\n  const [approval, approveCallback] = useApproveCallback(\r\n    parsedAmounts[Field.LIQUIDITY],\r\n    ROUTER_ADDRESS[chainId ? chainId : '']\r\n  )\r\n  async function onAttemptToApprove() {\r\n    if (!pairContract || !pair || !library) throw new Error('missing dependencies')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n    // try to gather a signature for permission\r\n    const nonce = await pairContract.nonces(account)\r\n\r\n    const deadlineForSignature: number = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    const EIP712Domain = [\r\n      { name: 'name', type: 'string' },\r\n      { name: 'version', type: 'string' },\r\n      { name: 'chainId', type: 'uint256' },\r\n      { name: 'verifyingContract', type: 'address' }\r\n    ]\r\n    const domain = {\r\n      name: 'Uniswap V2', //correct domain name!!!!!!!!!!!!!!!!!!!!!!!\r\n      version: '1',\r\n      chainId: chainId,\r\n      verifyingContract: pair.liquidityToken.address\r\n    }\r\n    const Permit = [\r\n      { name: 'owner', type: 'address' },\r\n      { name: 'spender', type: 'address' },\r\n      { name: 'value', type: 'uint256' },\r\n      { name: 'nonce', type: 'uint256' },\r\n      { name: 'deadline', type: 'uint256' }\r\n    ]\r\n    const message = {\r\n      owner: account,\r\n      spender: ROUTER_ADDRESS,\r\n      value: liquidityAmount.raw.toString(),\r\n      nonce: nonce.toHexString(),\r\n      deadline: deadlineForSignature\r\n    }\r\n    const data = JSON.stringify({\r\n      types: {\r\n        EIP712Domain,\r\n        Permit\r\n      },\r\n      domain,\r\n      primaryType: 'Permit',\r\n      message\r\n    })\r\n\r\n    library\r\n      .send('eth_signTypedData_v4', [account, data])\r\n      .then(splitSignature)\r\n      .then(signature => {\r\n        setSignatureData({\r\n          v: signature.v,\r\n          r: signature.r,\r\n          s: signature.s,\r\n          deadline: deadlineForSignature\r\n        })\r\n      })\r\n      .catch(error => {\r\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\r\n        if (error?.code !== 4001) {\r\n          approveCallback()\r\n        }\r\n      })\r\n  }\r\n\r\n  // wrapped onUserInput to clear signatures\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      setSignatureData(null)\r\n      return _onUserInput(field, typedValue)\r\n    },\r\n    [_onUserInput]\r\n  )\r\n\r\n  const onLiquidityInput = useCallback((typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue), [\r\n    onUserInput\r\n  ])\r\n  const onCurrencyAInput = useCallback((typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue), [\r\n    onUserInput\r\n  ])\r\n  const onCurrencyBInput = useCallback((typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue), [\r\n    onUserInput\r\n  ])\r\n\r\n  // tx sending\r\n  const addTransaction = useTransactionAdder()\r\n  async function onRemove() {\r\n    if (!chainId || !library || !account) throw new Error('missing dependencies')\r\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\r\n    if (!currencyAmountA || !currencyAmountB) {\r\n      throw new Error('missing currency amounts')\r\n    }\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\r\n    }\r\n\r\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    const currencyBIsETH = currencyB === DEV\r\n    const oneCurrencyIsETH = currencyA === DEV || currencyBIsETH\r\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\r\n\r\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\r\n    // we have approval, use normal remove liquidity\r\n    if (approval === ApprovalState.APPROVED) {\r\n      // removeLiquidityETH\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          deadlineFromNow\r\n        ]\r\n      }\r\n      // removeLiquidity\r\n      else {\r\n        methodNames = ['removeLiquidity']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          deadlineFromNow\r\n        ]\r\n      }\r\n    }\r\n    // we have a signataure, use permit versions of remove liquidity\r\n    else if (signatureData !== null) {\r\n      // removeLiquidityETHWithPermit\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s\r\n        ]\r\n      }\r\n      // removeLiquidityETHWithPermit\r\n      else {\r\n        methodNames = ['removeLiquidityWithPermit']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s\r\n        ]\r\n      }\r\n    } else {\r\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\r\n    }\r\n    /*\r\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\r\n      methodNames.map(methodName =>\r\n        router.estimateGas[methodName](...args)\r\n          .then(calculateGasMargin)\r\n          .catch(error => {\r\n            console.error(`estimateGas failed`, methodName, args, error)\r\n            return undefined\r\n          })\r\n      )\r\n    )\r\n    */\r\n    const safeGasEstimates: BigNumber[] = [BigNumber.from('5000000')]\r\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate =>\r\n      BigNumber.isBigNumber(safeGasEstimate)\r\n    )\r\n\r\n    // all estimations failed...\r\n    if (indexOfSuccessfulEstimation === -1) {\r\n      console.error('This transaction would fail. Please contact support.')\r\n    } else {\r\n      const methodName = methodNames[indexOfSuccessfulEstimation]\r\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\r\n\r\n      setAttemptingTxn(true)\r\n      await router[methodName](...args, {\r\n        gasLimit: safeGasEstimate\r\n      })\r\n        .then((response: TransactionResponse) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary:\r\n              'Remove ' +\r\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\r\n              ' ' +\r\n              currencyA?.symbol +\r\n              ' and ' +\r\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\r\n              ' ' +\r\n              currencyB?.symbol\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n\r\n          ReactGA.event({\r\n            category: 'Liquidity',\r\n            action: 'Remove',\r\n            label: [currencyA?.symbol, currencyB?.symbol].join('/')\r\n          })\r\n        })\r\n        .catch((error: Error) => {\r\n          setAttemptingTxn(false)\r\n          // we only care if the error is something _other_ than the user rejected the tx\r\n          console.error(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap={'md'} style={{ marginTop: '20px' }}>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={24} fontWeight={500}>\r\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\r\n          </Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyA} size={'24px'} />\r\n            <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\r\n              {currencyA?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowFixed>\r\n          <Plus size=\"16\" color={theme.text2} />\r\n        </RowFixed>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize={24} fontWeight={500}>\r\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\r\n          </Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyB} size={'24px'} />\r\n            <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\r\n              {currencyB?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <TYPE.italic fontSize={12} color={theme.text2} textAlign=\"left\" padding={'12px 0 0 0'}>\r\n          {`Output is estimated. If the price changes by more than ${allowedSlippage /\r\n            100}% your transaction will revert.`}\r\n        </TYPE.italic>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  function modalBottom() {\r\n    return (\r\n      <>\r\n        <RowBetween>\r\n          <Text color={theme.text2} fontWeight={500} fontSize={16}>\r\n            {'UNI ' + currencyA?.symbol + '/' + currencyB?.symbol} Burned\r\n          </Text>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\r\n            <Text fontWeight={500} fontSize={16}>\r\n              {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {pair && (\r\n          <>\r\n            <RowBetween>\r\n              <Text color={theme.text2} fontWeight={500} fontSize={16}>\r\n                Price\r\n              </Text>\r\n              <Text fontWeight={500} fontSize={16} color={theme.text1}>\r\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <Text fontWeight={500} fontSize={16} color={theme.text1}>\r\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n          </>\r\n        )}\r\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\r\n          <Text fontWeight={500} fontSize={20}>\r\n            Confirm\r\n          </Text>\r\n        </ButtonPrimary>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\r\n    currencyA?.symbol\r\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencyB?.symbol}`\r\n\r\n  const liquidityPercentChangeCallback = useCallback(\r\n    (value: number) => {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  const oneCurrencyIsETH = currencyA === DEV || currencyB === DEV\r\n  const oneCurrencyIsWDEV = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(WDEV[chainId], currencyA)) ||\r\n        (currencyB && currencyEquals(WDEV[chainId], currencyB)))\r\n  )\r\n\r\n  const handleSelectCurrencyA = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\r\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, history]\r\n  )\r\n  const handleSelectCurrencyB = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\r\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\r\n      } else {\r\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, history]\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\r\n    }\r\n    setTxHash('')\r\n  }, [onUserInput, txHash])\r\n\r\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\r\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\r\n    liquidityPercentChangeCallback\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <AppBody>\r\n        <AddRemoveTabs adding={false} />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash ? txHash : ''}\r\n            content={() => (\r\n              <ConfirmationModalContent\r\n                title={'You will receive'}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <AutoColumn gap=\"md\">\r\n              <AutoColumn gap=\"20px\">\r\n                <RowBetween>\r\n                  <Text fontWeight={500}>Amount</Text>\r\n                  <ClickableText\r\n                    fontWeight={500}\r\n                    onClick={() => {\r\n                      setShowDetailed(!showDetailed)\r\n                    }}\r\n                  >\r\n                    {showDetailed ? 'Simple' : 'Detailed'}\r\n                  </ClickableText>\r\n                </RowBetween>\r\n                <Row style={{ alignItems: 'flex-end' }}>\r\n                  <Text fontSize={72} fontWeight={500}>\r\n                    {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\r\n                  </Text>\r\n                </Row>\r\n                {!showDetailed && (\r\n                  <>\r\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\r\n                    <RowBetween>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')} width=\"20%\">\r\n                        25%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')} width=\"20%\">\r\n                        50%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')} width=\"20%\">\r\n                        75%\r\n                      </MaxButton>\r\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')} width=\"20%\">\r\n                        Max\r\n                      </MaxButton>\r\n                    </RowBetween>\r\n                  </>\r\n                )}\r\n              </AutoColumn>\r\n       \r\n            {!showDetailed && (\r\n              <>\r\n                <ColumnCenter>\r\n                  <ArrowDown size=\"16\" color={theme.text2} />\r\n                </ColumnCenter>\r\n        \r\n                  <AutoColumn gap=\"10px\">\r\n                    <RowBetween>\r\n                      <Text fontSize={24} fontWeight={500}>\r\n                        {formattedAmounts[Field.CURRENCY_A] || '-'}\r\n                      </Text>\r\n                      <RowFixed>\r\n                        <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\r\n                        <Text fontSize={24} fontWeight={500} id=\"remove-liquidity-tokena-symbol\">\r\n                          {currencyA?.symbol}\r\n                        </Text>\r\n                      </RowFixed>\r\n                    </RowBetween>\r\n                    <RowBetween>\r\n                      <Text fontSize={24} fontWeight={500}>\r\n                        {formattedAmounts[Field.CURRENCY_B] || '-'}\r\n                      </Text>\r\n                      <RowFixed>\r\n                        <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\r\n                        <Text fontSize={24} fontWeight={500} id=\"remove-liquidity-tokenb-symbol\">\r\n                          {currencyB?.symbol}\r\n                        </Text>\r\n                      </RowFixed>\r\n                    </RowBetween>\r\n                    {chainId && (oneCurrencyIsWDEV || oneCurrencyIsETH) ? (\r\n                      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n                        {oneCurrencyIsETH ? (\r\n                          <StyledInternalLink\r\n                            to={`/remove/${currencyA === DEV ? WDEV[chainId].address : currencyIdA}/${\r\n                              currencyB === DEV ? WDEV[chainId].address : currencyIdB\r\n                            }`}\r\n                          >\r\n                            Receive WDEV\r\n                          </StyledInternalLink>\r\n                        ) : oneCurrencyIsWDEV ? (\r\n                          <StyledInternalLink\r\n                            to={`/remove/${\r\n                              currencyA && currencyEquals(currencyA, WDEV[chainId]) ? 'ETH' : currencyIdA\r\n                            }/${currencyB && currencyEquals(currencyB, WDEV[chainId]) ? 'ETH' : currencyIdB}`}\r\n                          >\r\n                            Receive DEV\r\n                          </StyledInternalLink>\r\n                        ) : null}\r\n                      </RowBetween>\r\n                    ) : null}\r\n                  </AutoColumn>\r\n           \r\n              </>\r\n            )}\r\n\r\n            {showDetailed && (\r\n              <>\r\n                <CurrencyInputPanel\r\n                  value={formattedAmounts[Field.LIQUIDITY]}\r\n                  onUserInput={onLiquidityInput}\r\n                  onMax={() => {\r\n                    onUserInput(Field.LIQUIDITY_PERCENT, '100')\r\n                  }}\r\n                  showMaxButton={!atMaxAmount}\r\n                  disableCurrencySelect\r\n                  currency={pair?.liquidityToken}\r\n                  pair={pair}\r\n                  id=\"liquidity-amount\"\r\n                />\r\n                <ColumnCenter>\r\n                  <ArrowDown size=\"16\" color={theme.text2} />\r\n                </ColumnCenter>\r\n                <CurrencyInputPanel\r\n                  hideBalance={true}\r\n                  value={formattedAmounts[Field.CURRENCY_A]}\r\n                  onUserInput={onCurrencyAInput}\r\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                  showMaxButton={!atMaxAmount}\r\n                  currency={currencyA}\r\n                  label={'Output'}\r\n                  onCurrencySelect={handleSelectCurrencyA}\r\n                  id=\"remove-liquidity-tokena\"\r\n                />\r\n                <ColumnCenter>\r\n                  <Plus size=\"16\" color={theme.text2} />\r\n                </ColumnCenter>\r\n                <CurrencyInputPanel\r\n                  hideBalance={true}\r\n                  value={formattedAmounts[Field.CURRENCY_B]}\r\n                  onUserInput={onCurrencyBInput}\r\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                  showMaxButton={!atMaxAmount}\r\n                  currency={currencyB}\r\n                  label={'Output'}\r\n                  onCurrencySelect={handleSelectCurrencyB}\r\n                  id=\"remove-liquidity-tokenb\"\r\n                />\r\n              </>\r\n            )}\r\n            {pair && (\r\n              <div style={{ padding: '10px 20px' }}>\r\n                <RowBetween>\r\n                  Price:\r\n                  <div>\r\n                    1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n                  </div>\r\n                </RowBetween>\r\n                <RowBetween>\r\n                  <div />\r\n                  <div>\r\n                    1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n                  </div>\r\n                </RowBetween>\r\n              </div>\r\n            )}\r\n            <div style={{ position: 'relative' }}>\r\n              {!account ? (\r\n                <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\r\n              ) : (\r\n                <RowBetween>\r\n                  <ButtonConfirmed\r\n                    onClick={onAttemptToApprove}\r\n                    confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\r\n                    disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\r\n                    mr=\"0.5rem\"\r\n                    fontWeight={500}\r\n                    fontSize={16}\r\n                  >\r\n                    {approval === ApprovalState.PENDING ? (\r\n                      <Dots>Approving</Dots>\r\n                    ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\r\n                      'Approved'\r\n                    ) : (\r\n                      'Approve'\r\n                    )}\r\n                  </ButtonConfirmed>\r\n                  <ButtonError\r\n                    onClick={() => {\r\n                      setShowConfirm(true)\r\n                    }}\r\n                    disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\r\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\r\n                  >\r\n                    <Text fontSize={16} fontWeight={500}>\r\n                      {error || 'Remove'}\r\n                    </Text>\r\n                  </ButtonError>\r\n                </RowBetween>\r\n              )}\r\n            </div>\r\n          </AutoColumn>\r\n        </Wrapper>\r\n      </AppBody>\r\n\r\n      {pair ? (\r\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWDEV} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}