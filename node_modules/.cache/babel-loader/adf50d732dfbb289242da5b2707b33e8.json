{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateMatchesDarkMode } from './actions';\nexport default function Updater() {\n  const dispatch = useDispatch(); // keep dark mode in sync with the system\n\n  useEffect(() => {\n    var _window;\n\n    const darkHandler = match => {\n      dispatch(updateMatchesDarkMode({\n        matchesDarkMode: match.matches\n      }));\n    };\n\n    const match = (_window = window) === null || _window === void 0 ? void 0 : _window.matchMedia('(prefers-color-scheme: dark)');\n    dispatch(updateMatchesDarkMode({\n      matchesDarkMode: match.matches\n    }));\n\n    if (match === null || match === void 0 ? void 0 : match.addListener) {\n      match === null || match === void 0 ? void 0 : match.addListener(darkHandler);\n    } else if (match === null || match === void 0 ? void 0 : match.addEventListener) {\n      match === null || match === void 0 ? void 0 : match.addEventListener('change', darkHandler);\n    }\n\n    return () => {\n      if (match === null || match === void 0 ? void 0 : match.removeListener) {\n        match === null || match === void 0 ? void 0 : match.removeListener(darkHandler);\n      } else if (match === null || match === void 0 ? void 0 : match.removeEventListener) {\n        match === null || match === void 0 ? void 0 : match.removeEventListener('change', darkHandler);\n      }\n    };\n  }, [dispatch]);\n  return null;\n}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/state/user/updater.tsx"],"names":["useEffect","useDispatch","updateMatchesDarkMode","Updater","dispatch","darkHandler","match","matchesDarkMode","matches","window","matchMedia","addListener","addEventListener","removeListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,qBAAT,QAAsC,WAAtC;AAEA,eAAe,SAASC,OAAT,GAAyB;AACtC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B,CADsC,CAGtC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,UAAMK,WAAW,GAAIC,KAAD,IAAgC;AAClDF,MAAAA,QAAQ,CAACF,qBAAqB,CAAC;AAAEK,QAAAA,eAAe,EAAED,KAAK,CAACE;AAAzB,OAAD,CAAtB,CAAR;AACD,KAFD;;AAIA,UAAMF,KAAK,cAAGG,MAAH,4CAAG,QAAQC,UAAR,CAAmB,8BAAnB,CAAd;AACAN,IAAAA,QAAQ,CAACF,qBAAqB,CAAC;AAAEK,MAAAA,eAAe,EAAED,KAAK,CAACE;AAAzB,KAAD,CAAtB,CAAR;;AAEA,QAAIF,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEK,WAAX,EAAwB;AACtBL,MAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEK,WAAP,CAAmBN,WAAnB;AACD,KAFD,MAEO,IAAIC,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEM,gBAAX,EAA6B;AAClCN,MAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEM,gBAAP,CAAwB,QAAxB,EAAkCP,WAAlC;AACD;;AAED,WAAO,MAAM;AACX,UAAIC,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEO,cAAX,EAA2B;AACzBP,QAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEO,cAAP,CAAsBR,WAAtB;AACD,OAFD,MAEO,IAAIC,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEQ,mBAAX,EAAgC;AACrCR,QAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,mBAAP,CAA2B,QAA3B,EAAqCT,WAArC;AACD;AACF,KAND;AAOD,GArBQ,EAqBN,CAACD,QAAD,CArBM,CAAT;AAuBA,SAAO,IAAP;AACD","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../index'\r\nimport { updateMatchesDarkMode } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  // keep dark mode in sync with the system\r\n  useEffect(() => {\r\n    const darkHandler = (match: MediaQueryListEvent) => {\r\n      dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\r\n    }\r\n\r\n    const match = window?.matchMedia('(prefers-color-scheme: dark)')\r\n    dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\r\n\r\n    if (match?.addListener) {\r\n      match?.addListener(darkHandler)\r\n    } else if (match?.addEventListener) {\r\n      match?.addEventListener('change', darkHandler)\r\n    }\r\n\r\n    return () => {\r\n      if (match?.removeListener) {\r\n        match?.removeListener(darkHandler)\r\n      } else if (match?.removeEventListener) {\r\n        match?.removeEventListener('change', darkHandler)\r\n      }\r\n    }\r\n  }, [dispatch])\r\n\r\n  return null\r\n}\r\n"]},"metadata":{},"sourceType":"module"}