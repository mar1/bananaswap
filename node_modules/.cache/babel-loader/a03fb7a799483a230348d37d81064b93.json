{"ast":null,"code":"import { ChainId, JSBI, Percent, Token, WDEV } from 'moonbeamswap';\nimport { routerv2 } from '../moonbase_address.json';\nimport { injected, walletconnect } from '../connectors'; //fortmatic, portis, walletconnect, walletlink, lattice\n\nexport const ROUTER_ADDRESS = {\n  [ChainId.STANDALONE]: '0x42e2EE7Ba8975c473157634Ac2AF4098190fc741',\n  [ChainId.MOONROCK]: routerv2,\n  [ChainId.MOONBASE]: routerv2,\n  [ChainId.MOONSHADOW]: routerv2\n};\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin');\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C');\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD');\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound');\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker');\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth');\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 18, 'WBTC', 'Wrapped BTC');\nexport const SUSHI = new Token(ChainId.MAINNET, '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2', 18, 'SUSHI', 'SushiToken');\nexport const YAM = new Token(ChainId.MAINNET, '0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16', 18, 'YAM', 'YAM');\nexport const RUNE = new Token(ChainId.MAINNET, '0x3155BA85D5F96b2d030a4966AF206230e46849cb', 18, 'RUNE', 'RUNE.ETH');\nexport const YFI = new Token(ChainId.MAINNET, '0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e', 18, 'YFI', 'Yearn');\nexport const CREAM = new Token(ChainId.MAINNET, '0x2ba592F78dB6436527729929AAf6c908497cB200', 18, 'CREAM', 'Cream');\nexport const BAC = new Token(ChainId.MAINNET, '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a', 18, 'BAC', 'Basis Cash');\nexport const FXS = new Token(ChainId.MAINNET, '0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0', 18, 'FXS', 'Frax Share');\nexport const CRV = new Token(ChainId.MAINNET, '0xD533a949740bb3306d119CC777fa900bA034cd52', 18, 'CRV', 'Curve Dao Token');\nexport const ALPHA = new Token(ChainId.MAINNET, '0xa1faa113cbE53436Df28FF0aEe54275c13B40975', 18, 'ALPHA', 'AlphaToken');\nconst WDEV_ONLY = {\n  [ChainId.MAINNET]: [WDEV[ChainId.MAINNET]],\n  [ChainId.STANDALONE]: [WDEV[ChainId.STANDALONE]],\n  [ChainId.MOONROCK]: [WDEV[ChainId.MOONROCK]],\n  [ChainId.MOONBASE]: [WDEV[ChainId.MOONBASE]],\n  [ChainId.MOONSHADOW]: [WDEV[ChainId.MOONSHADOW]]\n}; // used to construct intermediary pairs for trading\n\nexport const BASES_TO_CHECK_TRADES_AGAINST = { ...WDEV_ONLY,\n  [ChainId.MAINNET]: [...WDEV_ONLY[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM, WBTC, RUNE, CREAM, BAC, FXS, CRV, ALPHA]\n};\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\n\nexport const CUSTOM_BASES = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI, WDEV[ChainId.MAINNET]]\n  }\n}; // used for display in the default list when adding liquidity\n\nexport const SUGGESTED_BASES = { ...WDEV_ONLY,\n  [ChainId.MAINNET]: [...WDEV_ONLY[ChainId.MAINNET], DAI, USDC, USDT]\n}; // used to construct the list of all pairs we consider by default in the frontend\n\nexport const BASES_TO_TRACK_LIQUIDITY_FOR = { ...WDEV_ONLY,\n  [ChainId.MAINNET]: [...WDEV_ONLY[ChainId.MAINNET], DAI, USDC, USDT]\n};\nexport const PINNED_PAIRS = {\n  [ChainId.MAINNET]: [[new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'), new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')], [USDC, USDT], [DAI, USDT]]\n};\nexport const SUPPORTED_WALLETS = {\n  /* INJECTED: {\r\n    connector: injected,\r\n    name: 'Injected',\r\n    iconName: 'arrow-right.svg',\r\n    description: 'Injected web3 provider.',\r\n    href: null,\r\n    color: '#010101',\r\n    primary: true\r\n  },*/\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  }\n  /*\r\n  LATTICE: {\r\n  connector: lattice,\r\n  name: 'Lattice',\r\n  iconName: 'gridPlusWallet.png',\r\n  description: 'Connect to GridPlus Wallet.',\r\n  href: null,\r\n  color: '#40a9ff',\r\n  mobile: true\r\n  },\r\n  WALLET_LINK: {\r\n  connector: walletlink,\r\n  name: 'Coinbase Wallet',\r\n  iconName: 'coinbaseWalletIcon.svg',\r\n  description: 'Use Coinbase Wallet app on mobile device',\r\n  href: null,\r\n  color: '#315CF5'\r\n  },\r\n  COINBASE_LINK: {\r\n  name: 'Open in Coinbase Wallet',\r\n  iconName: 'coinbaseWalletIcon.svg',\r\n  description: 'Open in Coinbase Wallet app.',\r\n  href: 'https://go.cb-w.com/mtUDhEZPy1',\r\n  color: '#315CF5',\r\n  mobile: true,\r\n  mobileOnly: true\r\n  },\r\n  FORTMATIC: {\r\n  connector: fortmatic,\r\n  name: 'Fortmatic',\r\n  iconName: 'fortmaticIcon.png',\r\n  description: 'Login using Fortmatic hosted wallet',\r\n  href: null,\r\n  color: '#6748FF',\r\n  mobile: true\r\n  },\r\n  Portis: {\r\n  connector: portis,\r\n  name: 'Portis',\r\n  iconName: 'portisIcon.png',\r\n  description: 'Login using Portis hosted wallet',\r\n  href: null,\r\n  color: '#4A6C9B',\r\n  mobile: true\r\n  }*/\n\n};\nexport const NetworkContextName = 'NETWORK'; // default allowed slippage, in bips\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50; // 20 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20; // one basis point\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n// used to ensure the user doesn't send so much DEV so they end up with <.01\n\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 DEV\n\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000));","map":{"version":3,"sources":["C:/Users/marin/Documents/Dev/bananaswap/moonbeam-uniswap/uniswap-interface-moonbeam/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","Token","WDEV","routerv2","injected","walletconnect","ROUTER_ADDRESS","STANDALONE","MOONROCK","MOONBASE","MOONSHADOW","DAI","MAINNET","USDC","USDT","COMP","MKR","AMPL","WBTC","SUSHI","YAM","RUNE","YFI","CREAM","BAC","FXS","CRV","ALPHA","WDEV_ONLY","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","address","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","METAMASK","connector","name","iconName","description","href","color","WALLET_CONNECT","mobile","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","ONE_BIPS","BigInt","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LINK_THRESHOLD"],"mappings":"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","sourcesContent":["import { ChainId, JSBI, Percent, Token, WDEV } from 'moonbeamswap'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport { routerv2 } from '../moonbase_address.json'\r\n\r\nimport { injected, walletconnect } from '../connectors'\r\n//fortmatic, portis, walletconnect, walletlink, lattice\r\nexport const ROUTER_ADDRESS: { [key: string]: string } = {\r\n  [ChainId.STANDALONE]: '0x42e2EE7Ba8975c473157634Ac2AF4098190fc741',\r\n  [ChainId.MOONROCK]: routerv2,\r\n  [ChainId.MOONBASE]: routerv2,\r\n  [ChainId.MOONSHADOW]: routerv2\r\n}\r\n\r\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\r\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C')\r\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\r\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound')\r\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker')\r\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\r\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 18, 'WBTC', 'Wrapped BTC')\r\nexport const SUSHI = new Token(ChainId.MAINNET, '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2', 18, 'SUSHI', 'SushiToken')\r\nexport const YAM = new Token(ChainId.MAINNET, '0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16', 18, 'YAM', 'YAM')\r\nexport const RUNE = new Token(ChainId.MAINNET, '0x3155BA85D5F96b2d030a4966AF206230e46849cb', 18, 'RUNE', 'RUNE.ETH')\r\nexport const YFI = new Token(ChainId.MAINNET, '0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e', 18, 'YFI', 'Yearn')\r\nexport const CREAM = new Token(ChainId.MAINNET, '0x2ba592F78dB6436527729929AAf6c908497cB200', 18, 'CREAM', 'Cream')\r\nexport const BAC = new Token(ChainId.MAINNET, '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a', 18, 'BAC', 'Basis Cash')\r\nexport const FXS = new Token(ChainId.MAINNET, '0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0', 18, 'FXS', 'Frax Share')\r\nexport const CRV = new Token(\r\n  ChainId.MAINNET,\r\n  '0xD533a949740bb3306d119CC777fa900bA034cd52',\r\n  18,\r\n  'CRV',\r\n  'Curve Dao Token'\r\n)\r\nexport const ALPHA = new Token(ChainId.MAINNET, '0xa1faa113cbE53436Df28FF0aEe54275c13B40975', 18, 'ALPHA', 'AlphaToken')\r\n\r\nconst WDEV_ONLY: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WDEV[ChainId.MAINNET]],\r\n  [ChainId.STANDALONE]: [WDEV[ChainId.STANDALONE]],\r\n  [ChainId.MOONROCK]: [WDEV[ChainId.MOONROCK]],\r\n  [ChainId.MOONBASE]: [WDEV[ChainId.MOONBASE]],\r\n  [ChainId.MOONSHADOW]: [WDEV[ChainId.MOONSHADOW]],\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  ...WDEV_ONLY,\r\n  [ChainId.MAINNET]: [\r\n    ...WDEV_ONLY[ChainId.MAINNET],\r\n    DAI,\r\n    USDC,\r\n    USDT,\r\n    SUSHI,\r\n    YAM,\r\n    WBTC,\r\n    RUNE,\r\n    CREAM,\r\n    BAC,\r\n    FXS,\r\n    CRV,\r\n    ALPHA,\r\n  ],\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {\r\n    [AMPL.address]: [DAI, WDEV[ChainId.MAINNET]],\r\n  },\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  ...WDEV_ONLY,\r\n  [ChainId.MAINNET]: [...WDEV_ONLY[ChainId.MAINNET], DAI, USDC, USDT],\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  ...WDEV_ONLY,\r\n  [ChainId.MAINNET]: [...WDEV_ONLY[ChainId.MAINNET], DAI, USDC, USDT],\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [\r\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\r\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'),\r\n    ],\r\n    [USDC, USDT],\r\n    [DAI, USDT],\r\n  ],\r\n}\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector\r\n  name: string\r\n  iconName: string\r\n  description: string\r\n  href: string | null\r\n  color: string\r\n  primary?: true\r\n  mobile?: true\r\n  mobileOnly?: true\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  /* INJECTED: {\r\n    connector: injected,\r\n    name: 'Injected',\r\n    iconName: 'arrow-right.svg',\r\n    description: 'Injected web3 provider.',\r\n    href: null,\r\n    color: '#010101',\r\n    primary: true\r\n  },*/\r\n  METAMASK: {\r\n    connector: injected,\r\n    name: 'MetaMask',\r\n    iconName: 'metamask.png',\r\n    description: 'Easy-to-use browser extension.',\r\n    href: null,\r\n    color: '#E8831D',\r\n  },\r\n  WALLET_CONNECT: {\r\n    connector: walletconnect,\r\n    name: 'WalletConnect',\r\n    iconName: 'walletConnectIcon.svg',\r\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\r\n    href: null,\r\n    color: '#4196FC',\r\n    mobile: true,\r\n  } /*\r\n  LATTICE: {\r\n    connector: lattice,\r\n    name: 'Lattice',\r\n    iconName: 'gridPlusWallet.png',\r\n    description: 'Connect to GridPlus Wallet.',\r\n    href: null,\r\n    color: '#40a9ff',\r\n    mobile: true\r\n  },\r\n  WALLET_LINK: {\r\n    connector: walletlink,\r\n    name: 'Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Use Coinbase Wallet app on mobile device',\r\n    href: null,\r\n    color: '#315CF5'\r\n  },\r\n  COINBASE_LINK: {\r\n    name: 'Open in Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Open in Coinbase Wallet app.',\r\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\r\n    color: '#315CF5',\r\n    mobile: true,\r\n    mobileOnly: true\r\n  },\r\n  FORTMATIC: {\r\n    connector: fortmatic,\r\n    name: 'Fortmatic',\r\n    iconName: 'fortmaticIcon.png',\r\n    description: 'Login using Fortmatic hosted wallet',\r\n    href: null,\r\n    color: '#6748FF',\r\n    mobile: true\r\n  },\r\n  Portis: {\r\n    connector: portis,\r\n    name: 'Portis',\r\n    iconName: 'portisIcon.png',\r\n    description: 'Login using Portis hosted wallet',\r\n    href: null,\r\n    color: '#4A6C9B',\r\n    mobile: true\r\n  }*/,\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much DEV so they end up with <.01\r\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 DEV\r\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))"]},"metadata":{},"sourceType":"module"}