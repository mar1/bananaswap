{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{JSBI,Token}from'moonbeamswap';import React,{useCallback,useContext,useEffect,useMemo,useState}from'react';import{ArrowDown}from'react-feather';import ReactGA from'react-ga';import{Text}from'rebass';import{useTranslation}from'react-i18next';import{ThemeContext}from'styled-components';import AddressInputPanel from'../../components/AddressInputPanel';import{ButtonError,ButtonLight,ButtonPrimary,ButtonConfirmed}from'../../components/Button';import Card,{GreyCard}from'../../components/Card';import{AutoColumn}from'../../components/Column';import ConfirmSwapModal from'../../components/swap/ConfirmSwapModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{SwapPoolTabs}from'../../components/NavigationTabs';import{AutoRow,RowBetween}from'../../components/Row';import AdvancedSwapDetailsDropdown from'../../components/swap/AdvancedSwapDetailsDropdown';import confirmPriceImpactWithoutFee from'../../components/swap/confirmPriceImpactWithoutFee';import{ArrowWrapper,BottomGrouping,SwapCallbackError,Wrapper}from'../../components/swap/styleds';import TradePrice from'../../components/swap/TradePrice';import TokenWarningModal from'../../components/TokenWarningModal';import ProgressSteps from'../../components/ProgressSteps';import{INITIAL_ALLOWED_SLIPPAGE}from'../../constants';import{useActiveWeb3React}from'../../hooks';import{useCurrency}from'../../hooks/Tokens';import{ApprovalState,useApproveCallbackFromTrade}from'../../hooks/useApproveCallback';import useENSAddress from'../../hooks/useENSAddress';import{useSwapCallback}from'../../hooks/useSwapCallback';import useToggledVersion,{Version}from'../../hooks/useToggledVersion';import useWrapCallback,{WrapType}from'../../hooks/useWrapCallback';import{useToggleSettingsMenu,useWalletModalToggle}from'../../state/application/hooks';import{Field}from'../../state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'../../state/swap/hooks';import{useExpertModeManager,useUserDeadline,useUserSlippageTolerance}from'../../state/user/hooks';import{LinkStyledButton,TYPE}from'../../theme';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'../../utils/prices';import AppBody from'../AppBody';import{ClickableText}from'../Pool/styleds';import Loader from'../../components/Loader';export default function Swap(){var _ref3,_ref4,_parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP;var _useTranslation=useTranslation(),t=_useTranslation.t;var loadedUrlParams=useDefaultsFromURLSearch();// token warning stuff\nvar _ref=[useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.inputCurrencyId),useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.outputCurrencyId)],loadedInputCurrency=_ref[0],loadedOutputCurrency=_ref[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dismissTokenWarning=_useState2[0],setDismissTokenWarning=_useState2[1];var urlLoadedTokens=useMemo(function(){var _filter,_ref2;return(_filter=(_ref2=[loadedInputCurrency,loadedOutputCurrency])===null||_ref2===void 0?void 0:_ref2.filter(function(c){return c instanceof Token;}))!==null&&_filter!==void 0?_filter:[];},[loadedInputCurrency,loadedOutputCurrency]);var handleConfirmTokenWarning=useCallback(function(){setDismissTokenWarning(true);},[]);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var theme=useContext(ThemeContext);// toggle wallet when disconnected\nvar toggleWalletModal=useWalletModalToggle();// for expert mode\nvar toggleSettings=useToggleSettingsMenu();var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,1),isExpertMode=_useExpertModeManager2[0];// get custom setting values for user\nvar _useUserDeadline=useUserDeadline(),_useUserDeadline2=_slicedToArray(_useUserDeadline,1),deadline=_useUserDeadline2[0];var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// swap state\nvar _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,recipient=_useSwapState.recipient;var _useDerivedSwapInfo=useDerivedSwapInfo(),v2Trade=_useDerivedSwapInfo.v2Trade,currencyBalances=_useDerivedSwapInfo.currencyBalances,parsedAmount=_useDerivedSwapInfo.parsedAmount,currencies=_useDerivedSwapInfo.currencies,swapInputError=_useDerivedSwapInfo.inputError;var _useWrapCallback=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue),wrapType=_useWrapCallback.wrapType,onWrap=_useWrapCallback.execute,wrapInputError=_useWrapCallback.inputError;var showWrap=wrapType!==WrapType.NOT_APPLICABLE;var _useENSAddress=useENSAddress(recipient),recipientAddress=_useENSAddress.address;var toggledVersion=useToggledVersion();var trade=showWrap?undefined:_defineProperty({},Version.v2,v2Trade)[toggledVersion];var parsedAmounts=showWrap?(_ref3={},_defineProperty(_ref3,Field.INPUT,parsedAmount),_defineProperty(_ref3,Field.OUTPUT,parsedAmount),_ref3):(_ref4={},_defineProperty(_ref4,Field.INPUT,independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount),_defineProperty(_ref4,Field.OUTPUT,independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount),_ref4);var _useSwapActionHandler=useSwapActionHandlers(),onSwitchTokens=_useSwapActionHandler.onSwitchTokens,onCurrencySelection=_useSwapActionHandler.onCurrencySelection,onUserInput=_useSwapActionHandler.onUserInput,onChangeRecipient=_useSwapActionHandler.onChangeRecipient;var isValid=!swapInputError;var dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;var handleTypeInput=useCallback(function(value){onUserInput(Field.INPUT,value);},[onUserInput]);var handleTypeOutput=useCallback(function(value){onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nvar _useState3=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined}),_useState4=_slicedToArray(_useState3,2),_useState4$=_useState4[0],showConfirm=_useState4$.showConfirm,tradeToConfirm=_useState4$.tradeToConfirm,swapErrorMessage=_useState4$.swapErrorMessage,attemptingTxn=_useState4$.attemptingTxn,txHash=_useState4$.txHash,setSwapState=_useState4[1];var formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);var route=trade===null||trade===void 0?void 0:trade.route;var userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));var noRoute=!route;// check whether the user has approved the router on the input token\nvar _useApproveCallbackFr=useApproveCallbackFromTrade(trade,allowedSlippage),_useApproveCallbackFr2=_slicedToArray(_useApproveCallbackFr,2),approval=_useApproveCallbackFr2[0],approveCallback=_useApproveCallbackFr2[1];// check if user has gone through approval process, used to show two step buttons, reset on token change\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),approvalSubmitted=_useState6[0],setApprovalSubmitted=_useState6[1];// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(function(){if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);var maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);var atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nvar _useSwapCallback=useSwapCallback(trade,allowedSlippage,deadline,recipient),swapCallback=_useSwapCallback.callback,swapCallbackError=_useSwapCallback.error;var _computeTradePriceBre=computeTradePriceBreakdown(trade),priceImpactWithoutFee=_computeTradePriceBre.priceImpactWithoutFee;var handleSwap=useCallback(function(){if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState({attemptingTxn:true,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:undefined,txHash:undefined});swapCallback().then(function(hash){var _trade$inputAmount,_trade$inputAmount$cu,_trade$outputAmount,_trade$outputAmount$c;setSwapState({attemptingTxn:false,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:undefined,txHash:hash});ReactGA.event({category:'Swap',action:recipient===null?'Swap w/o Send':(recipientAddress!==null&&recipientAddress!==void 0?recipientAddress:recipient)===account?'Swap w/o Send + recipient':'Swap w/ Send',label:[trade===null||trade===void 0?void 0:(_trade$inputAmount=trade.inputAmount)===null||_trade$inputAmount===void 0?void 0:(_trade$inputAmount$cu=_trade$inputAmount.currency)===null||_trade$inputAmount$cu===void 0?void 0:_trade$inputAmount$cu.symbol,trade===null||trade===void 0?void 0:(_trade$outputAmount=trade.outputAmount)===null||_trade$outputAmount===void 0?void 0:(_trade$outputAmount$c=_trade$outputAmount.currency)===null||_trade$outputAmount$c===void 0?void 0:_trade$outputAmount$c.symbol].join('/')});}).catch(function(error){setSwapState({attemptingTxn:false,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:error.message,txHash:undefined});});},[tradeToConfirm,account,priceImpactWithoutFee,recipient,recipientAddress,showConfirm,swapCallback,trade]);// errors\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showInverted=_useState8[0],setShowInverted=_useState8[1];// warnings on slippage\nvar priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nvar showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);var handleConfirmDismiss=useCallback(function(){setSwapState({showConfirm:false,tradeToConfirm:tradeToConfirm,attemptingTxn:attemptingTxn,swapErrorMessage:swapErrorMessage,txHash:txHash});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[attemptingTxn,onUserInput,swapErrorMessage,tradeToConfirm,txHash]);var handleAcceptChanges=useCallback(function(){setSwapState({tradeToConfirm:trade,swapErrorMessage:swapErrorMessage,txHash:txHash,attemptingTxn:attemptingTxn,showConfirm:showConfirm});},[attemptingTxn,showConfirm,swapErrorMessage,trade,txHash]);var handleInputSelect=useCallback(function(inputCurrency){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,inputCurrency);},[onCurrencySelection]);var handleMaxInput=useCallback(function(){maxAmountInput&&onUserInput(Field.INPUT,maxAmountInput.toExact());},[maxAmountInput,onUserInput]);var handleOutputSelect=useCallback(function(outputCurrency){return onCurrencySelection(Field.OUTPUT,outputCurrency);},[onCurrencySelection]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TokenWarningModal,{isOpen:urlLoadedTokens.length>0&&!dismissTokenWarning,tokens:urlLoadedTokens,onConfirm:handleConfirmTokenWarning}),/*#__PURE__*/React.createElement(AppBody,null,/*#__PURE__*/React.createElement(SwapPoolTabs,{active:'swap'}),/*#__PURE__*/React.createElement(Wrapper,{id:\"swap-page\"},/*#__PURE__*/React.createElement(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/React.createElement(AutoColumn,{gap:'md'},/*#__PURE__*/React.createElement(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap&&trade?'From (estimated)':'From',value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:handleMaxInput,onCurrencySelect:handleInputSelect,otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/React.createElement(AutoColumn,{justify:\"space-between\"},/*#__PURE__*/React.createElement(AutoRow,{justify:isExpertMode?'space-between':'center',style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:true},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",onClick:function onClick(){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},color:currencies[Field.INPUT]&&currencies[Field.OUTPUT]?theme.primary1:theme.text2})),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"add-recipient-button\",onClick:function onClick(){return onChangeRecipient('');}},\"+ Add a send (optional)\"):null)),/*#__PURE__*/React.createElement(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap&&trade?'To (estimated)':'To',showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:handleOutputSelect,otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),recipient!==null&&!showWrap?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:false},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",color:theme.text2})),/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"remove-recipient-button\",onClick:function onClick(){return onChangeRecipient(null);}},\"- Remove send\")),/*#__PURE__*/React.createElement(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})):null,showWrap?null:/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(AutoColumn,{gap:\"4px\"},Boolean(trade)&&/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:14,color:theme.text2},t('price')),/*#__PURE__*/React.createElement(TradePrice,{price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})),allowedSlippage!==INITIAL_ALLOWED_SLIPPAGE&&/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},\"Slippage Tolerance\"),/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},allowedSlippage/100,\"%\"))))),/*#__PURE__*/React.createElement(BottomGrouping,null,!account?/*#__PURE__*/React.createElement(ButtonLight,{onClick:toggleWalletModal},\"Connect Wallet\"):showWrap?/*#__PURE__*/React.createElement(ButtonPrimary,{disabled:Boolean(wrapInputError),onClick:onWrap},wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/React.createElement(GreyCard,{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(TYPE.main,{mb:\"4px\"},t('insufficientLiquidityForThisTrade'))):showApproveFlow?/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(ButtonConfirmed,{onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,width:\"48%\",altDisabledStyle:approval===ApprovalState.PENDING// show solid button while waiting\n,confirmed:approval===ApprovalState.APPROVED},approval===ApprovalState.PENDING?/*#__PURE__*/React.createElement(AutoRow,{gap:\"6px\",justify:\"center\"},\"Approving \",/*#__PURE__*/React.createElement(Loader,{stroke:\"white\"})):approvalSubmitted&&approval===ApprovalState.APPROVED?'Approved':'Approve '+((_currencies$Field$INP=currencies[Field.INPUT])===null||_currencies$Field$INP===void 0?void 0:_currencies$Field$INP.symbol)),/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},width:\"48%\",id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,error:isValid&&priceImpactSeverity>2},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},priceImpactSeverity>3&&!isExpertMode?\"Price Impact High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':'')))):/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},id:\"swap-button\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,error:isValid&&priceImpactSeverity>2&&!swapCallbackError},/*#__PURE__*/React.createElement(Text,{fontSize:20,fontWeight:500},swapInputError?swapInputError:priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':''))),showApproveFlow&&/*#__PURE__*/React.createElement(ProgressSteps,{steps:[approval===ApprovalState.APPROVED]}),isExpertMode&&swapErrorMessage?/*#__PURE__*/React.createElement(SwapCallbackError,{error:swapErrorMessage}):null))),/*#__PURE__*/React.createElement(AdvancedSwapDetailsDropdown,{trade:trade}));}//465: {betterTradeLinkVersion && <BetterTradeLink version={betterTradeLinkVersion} />}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/pages/Swap/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","ReactGA","Text","useTranslation","ThemeContext","AddressInputPanel","ButtonError","ButtonLight","ButtonPrimary","ButtonConfirmed","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","ProgressSteps","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallbackFromTrade","useENSAddress","useSwapCallback","useToggledVersion","Version","useWrapCallback","WrapType","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","ClickableText","Loader","Swap","t","loadedUrlParams","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","handleConfirmTokenWarning","account","theme","toggleWalletModal","toggleSettings","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","recipientAddress","address","toggledVersion","trade","undefined","v2","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","swapCallback","callback","swapCallbackError","error","priceImpactWithoutFee","handleSwap","then","hash","event","category","action","label","currency","symbol","join","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","length","padding","primary1","text2","executionPrice","WRAP","UNWRAP","textAlign"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from 'moonbeamswap'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\nimport { ArrowDown } from 'react-feather'\r\nimport ReactGA from 'react-ga'\r\nimport { Text } from 'rebass'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ThemeContext } from 'styled-components'\r\nimport AddressInputPanel from '../../components/AddressInputPanel'\r\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonConfirmed } from '../../components/Button'\r\nimport Card, { GreyCard } from '../../components/Card'\r\nimport { AutoColumn } from '../../components/Column'\r\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\r\nimport { AutoRow, RowBetween } from '../../components/Row'\r\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\r\nimport TradePrice from '../../components/swap/TradePrice'\r\nimport TokenWarningModal from '../../components/TokenWarningModal'\r\nimport ProgressSteps from '../../components/ProgressSteps'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\r\nimport useENSAddress from '../../hooks/useENSAddress'\r\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\r\nimport useToggledVersion, { Version } from '../../hooks/useToggledVersion'\r\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\r\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  useDefaultsFromURLSearch,\r\n  useDerivedSwapInfo,\r\n  useSwapActionHandlers,\r\n  useSwapState\r\n} from '../../state/swap/hooks'\r\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { LinkStyledButton, TYPE } from '../../theme'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport AppBody from '../AppBody'\r\nimport { ClickableText } from '../Pool/styleds'\r\nimport Loader from '../../components/Loader'\r\n\r\nexport default function Swap() {\r\n  const { t } = useTranslation()\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId)\r\n  ]\r\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency]\r\n  )\r\n  const handleConfirmTokenWarning = useCallback(() => {\r\n    setDismissTokenWarning(true)\r\n  }, [])\r\n\r\n  const { account } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  // toggle wallet when disconnected\r\n  const toggleWalletModal = useWalletModalToggle()\r\n\r\n  // for expert mode\r\n  const toggleSettings = useToggleSettingsMenu()\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\r\n    currencies[Field.INPUT],\r\n    currencies[Field.OUTPUT],\r\n    typedValue\r\n  )\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const { address: recipientAddress } = useENSAddress(recipient)\r\n  const toggledVersion = useToggledVersion()\r\n  const trade = showWrap\r\n    ? undefined\r\n    : {\r\n        [Version.v2]: v2Trade\r\n      }[toggledVersion]\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    showConfirm: boolean\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    showConfirm: false,\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\r\n    trade,\r\n    allowedSlippage,\r\n    deadline,\r\n    recipient\r\n  )\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\r\n    swapCallback()\r\n      .then(hash => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\r\n\r\n        ReactGA.event({\r\n          category: 'Swap',\r\n          action:\r\n            recipient === null\r\n              ? 'Swap w/o Send'\r\n              : (recipientAddress ?? recipient) === account\r\n              ? 'Swap w/o Send + recipient'\r\n              : 'Swap w/ Send',\r\n          label: [trade?.inputAmount?.currency?.symbol, trade?.outputAmount?.currency?.symbol].join('/')\r\n        })\r\n      })\r\n      .catch(error => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          showConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined\r\n        })\r\n      })\r\n  }, [tradeToConfirm, account, priceImpactWithoutFee, recipient, recipientAddress, showConfirm, swapCallback, trade])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\r\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\r\n\r\n  const handleInputSelect = useCallback(\r\n    inputCurrency => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n    },\r\n    [onCurrencySelection]\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(outputCurrency => onCurrencySelection(Field.OUTPUT, outputCurrency), [\r\n    onCurrencySelection\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <TokenWarningModal\r\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\r\n        tokens={urlLoadedTokens}\r\n        onConfirm={handleConfirmTokenWarning}\r\n      />\r\n      <AppBody>\r\n        <SwapPoolTabs active={'swap'} />\r\n        <Wrapper id=\"swap-page\">\r\n          <ConfirmSwapModal\r\n            isOpen={showConfirm}\r\n            trade={trade}\r\n            originalTrade={tradeToConfirm}\r\n            onAcceptChanges={handleAcceptChanges}\r\n            attemptingTxn={attemptingTxn}\r\n            txHash={txHash}\r\n            recipient={recipient}\r\n            allowedSlippage={allowedSlippage}\r\n            onConfirm={handleSwap}\r\n            swapErrorMessage={swapErrorMessage}\r\n            onDismiss={handleConfirmDismiss}\r\n          />\r\n\r\n          <AutoColumn gap={'md'}>\r\n            <CurrencyInputPanel\r\n              label={independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : 'From'}\r\n              value={formattedAmounts[Field.INPUT]}\r\n              showMaxButton={!atMaxAmountInput}\r\n              currency={currencies[Field.INPUT]}\r\n              onUserInput={handleTypeInput}\r\n              onMax={handleMaxInput}\r\n              onCurrencySelect={handleInputSelect}\r\n              otherCurrency={currencies[Field.OUTPUT]}\r\n              id=\"swap-currency-input\"\r\n            />\r\n            <AutoColumn justify=\"space-between\">\r\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                <ArrowWrapper clickable>\r\n                  <ArrowDown\r\n                    size=\"16\"\r\n                    onClick={() => {\r\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                      onSwitchTokens()\r\n                    }}\r\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\r\n                  />\r\n                </ArrowWrapper>\r\n                {recipient === null && !showWrap && isExpertMode ? (\r\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                    + Add a send (optional)\r\n                  </LinkStyledButton>\r\n                ) : null}\r\n              </AutoRow>\r\n            </AutoColumn>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.OUTPUT]}\r\n              onUserInput={handleTypeOutput}\r\n              label={independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To'}\r\n              showMaxButton={false}\r\n              currency={currencies[Field.OUTPUT]}\r\n              onCurrencySelect={handleOutputSelect}\r\n              otherCurrency={currencies[Field.INPUT]}\r\n              id=\"swap-currency-output\"\r\n            />\r\n\r\n            {recipient !== null && !showWrap ? (\r\n              <>\r\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable={false}>\r\n                    <ArrowDown size=\"16\" color={theme.text2} />\r\n                  </ArrowWrapper>\r\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                    - Remove send\r\n                  </LinkStyledButton>\r\n                </AutoRow>\r\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n              </>\r\n            ) : null}\r\n\r\n            {showWrap ? null : (\r\n              <Card>\r\n                <AutoColumn gap=\"4px\">\r\n                  {Boolean(trade) && (\r\n                    <RowBetween align=\"center\">\r\n                      <Text fontWeight={500} fontSize={14} color={theme.text2}>\r\n                        {t('price')}\r\n                      </Text>\r\n                      <TradePrice\r\n                        price={trade?.executionPrice}\r\n                        showInverted={showInverted}\r\n                        setShowInverted={setShowInverted}\r\n                      />\r\n                    </RowBetween>\r\n                  )}\r\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                    <RowBetween align=\"center\">\r\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\r\n                        Slippage Tolerance\r\n                      </ClickableText>\r\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\r\n                        {allowedSlippage / 100}%\r\n                      </ClickableText>\r\n                    </RowBetween>\r\n                  )}\r\n                </AutoColumn>\r\n              </Card>\r\n            )}\r\n          </AutoColumn>\r\n          <BottomGrouping>\r\n            {!account ? (\r\n              <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\r\n            ) : showWrap ? (\r\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                {wrapInputError ??\r\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n              </ButtonPrimary>\r\n            ) : noRoute && userHasSpecifiedInputOutput ? (\r\n              <GreyCard style={{ textAlign: 'center' }}>\r\n                <TYPE.main mb=\"4px\">{t('insufficientLiquidityForThisTrade')}</TYPE.main>\r\n              </GreyCard>\r\n            ) : showApproveFlow ? (\r\n              <RowBetween>\r\n                <ButtonConfirmed\r\n                  onClick={approveCallback}\r\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                  width=\"48%\"\r\n                  altDisabledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\r\n                  confirmed={approval === ApprovalState.APPROVED}\r\n                >\r\n                  {approval === ApprovalState.PENDING ? (\r\n                    <AutoRow gap=\"6px\" justify=\"center\">\r\n                      Approving <Loader stroke=\"white\" />\r\n                    </AutoRow>\r\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                    'Approved'\r\n                  ) : (\r\n                    'Approve ' + currencies[Field.INPUT]?.symbol\r\n                  )}\r\n                </ButtonConfirmed>\r\n                <ButtonError\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        showConfirm: true,\r\n                        txHash: undefined\r\n                      })\r\n                    }\r\n                  }}\r\n                  width=\"48%\"\r\n                  id=\"swap-button\"\r\n                  disabled={\r\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                  }\r\n                  error={isValid && priceImpactSeverity > 2}\r\n                >\r\n                  <Text fontSize={16} fontWeight={500}>\r\n                    {priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\r\n                  </Text>\r\n                </ButtonError>\r\n              </RowBetween>\r\n            ) : (\r\n              <ButtonError\r\n                onClick={() => {\r\n                  if (isExpertMode) {\r\n                    handleSwap()\r\n                  } else {\r\n                    setSwapState({\r\n                      tradeToConfirm: trade,\r\n                      attemptingTxn: false,\r\n                      swapErrorMessage: undefined,\r\n                      showConfirm: true,\r\n                      txHash: undefined\r\n                    })\r\n                  }\r\n                }}\r\n                id=\"swap-button\"\r\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\r\n              >\r\n                <Text fontSize={20} fontWeight={500}>\r\n                  {swapInputError\r\n                    ? swapInputError\r\n                    : priceImpactSeverity > 3 && !isExpertMode\r\n                    ? `Price Impact Too High`\r\n                    : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\r\n                </Text>\r\n              </ButtonError>\r\n            )}\r\n            {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\r\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n          </BottomGrouping>\r\n        </Wrapper>\r\n      </AppBody>\r\n      <AdvancedSwapDetailsDropdown trade={trade} />\r\n    </>\r\n  )\r\n}\r\n\r\n//465: {betterTradeLinkVersion && <BetterTradeLink version={betterTradeLinkVersion} />}\r\n"]},"metadata":{},"sourceType":"module"}