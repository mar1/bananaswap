{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\src\\\\components\\\\SearchModal\\\\CommonBases.tsx\";\nimport React from 'react';\nimport { Text } from 'rebass';\nimport { currencyEquals, DEV, Token } from 'moonbeamswap';\nimport styled from 'styled-components';\nimport { SUGGESTED_BASES } from '../../constants';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow } from '../Row';\nimport CurrencyLogo from '../CurrencyLogo';\nconst BaseWrapper = styled.div`\n  border: 1px solid ${({\n  theme,\n  disable\n}) => disable ? 'transparent' : theme.bg3};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({\n  disable\n}) => !disable && 'pointer'};\n    background-color: ${({\n  theme,\n  disable\n}) => !disable && theme.bg2};\n  }\n\n  background-color: ${({\n  theme,\n  disable\n}) => disable && theme.bg3};\n  opacity: ${({\n  disable\n}) => disable && '0.4'};\n`;\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency\n}) {\n  return /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Common bases\"), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"These tokens are commonly paired with other tokens.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AutoRow, {\n    gap: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseWrapper, {\n    onClick: () => {\n      if (!selectedCurrency || !currencyEquals(selectedCurrency, DEV)) {\n        onSelect(DEV);\n      }\n    },\n    disable: selectedCurrency === DEV,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: DEV,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"DEV\")), (chainId ? SUGGESTED_BASES[chainId] : []).map(token => {\n    const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address;\n    return /*#__PURE__*/React.createElement(BaseWrapper, {\n      onClick: () => !selected && onSelect(token),\n      disable: selected,\n      key: token.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n      currency: token,\n      style: {\n        marginRight: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 500,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, token.symbol));\n  })));\n}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/components/SearchModal/CommonBases.tsx"],"names":["React","Text","currencyEquals","DEV","Token","styled","SUGGESTED_BASES","AutoColumn","QuestionHelper","AutoRow","CurrencyLogo","BaseWrapper","div","theme","disable","bg3","bg2","CommonBases","chainId","onSelect","selectedCurrency","marginRight","map","token","selected","address","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Text } from 'rebass'\r\nimport { ChainId, Currency, currencyEquals, DEV, Token } from 'moonbeamswap'\r\nimport styled from 'styled-components'\r\n\r\nimport { SUGGESTED_BASES } from '../../constants'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.bg3)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.bg2};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.bg3};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontWeight={500} fontSize={14}>\r\n          Common bases\r\n        </Text>\r\n        <QuestionHelper text=\"These tokens are commonly paired with other tokens.\" />\r\n      </AutoRow>\r\n      <AutoRow gap=\"4px\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, DEV)) {\r\n              onSelect(DEV)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === DEV}\r\n        >\r\n          <CurrencyLogo currency={DEV} style={{ marginRight: 8 }} />\r\n          <Text fontWeight={500} fontSize={16}>\r\n            DEV \r\n          </Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text fontWeight={500} fontSize={16}>\r\n                {token.symbol}\r\n              </Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}