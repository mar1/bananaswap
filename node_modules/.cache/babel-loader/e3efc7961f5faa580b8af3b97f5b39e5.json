{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _defineProperty from\"C:\\\\Users\\\\marin\\\\Desktop\\\\bananaswap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import useENS from'../../hooks/useENS';import{parseUnits}from'@ethersproject/units';import{CurrencyAmount,DEV,JSBI,Token,TokenAmount}from'moonbeamswap';import{useCallback,useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{useActiveWeb3React}from'../../hooks';import{useCurrency}from'../../hooks/Tokens';import{useTradeExactIn,useTradeExactOut}from'../../hooks/Trades';import useParsedQueryString from'../../hooks/useParsedQueryString';import{isAddress}from'../../utils';import{useCurrencyBalances}from'../wallet/hooks';import{Field,replaceSwapState,selectCurrency,setRecipient,switchCurrencies,typeInput}from'./actions';import{useUserSlippageTolerance}from'../user/hooks';import{computeSlippageAdjustedAmounts}from'../../utils/prices';import{useTranslation}from'react-i18next';import{factory,routerv2}from'../../moonbase_address.json';export function useSwapState(){return useSelector(function(state){return state.swap;});}export function useSwapActionHandlers(){var dispatch=useDispatch();var onCurrencySelection=useCallback(function(field,currency){dispatch(selectCurrency({field:field,currencyId:currency instanceof Token?currency.address:currency===DEV?'ETH':''}));},[dispatch]);var onSwitchTokens=useCallback(function(){dispatch(switchCurrencies());},[dispatch]);var onUserInput=useCallback(function(field,typedValue){dispatch(typeInput({field:field,typedValue:typedValue}));},[dispatch]);var onChangeRecipient=useCallback(function(recipient){dispatch(setRecipient({recipient:recipient}));},[dispatch]);return{onSwitchTokens:onSwitchTokens,onCurrencySelection:onCurrencySelection,onUserInput:onUserInput,onChangeRecipient:onChangeRecipient};}// try to parse a user entered amount for a given token\nexport function tryParseAmount(value,currency){if(!value||!currency){return undefined;}try{var typedValueParsed=parseUnits(value,currency.decimals).toString();if(typedValueParsed!=='0'){return currency instanceof Token?new TokenAmount(currency,JSBI.BigInt(typedValueParsed)):CurrencyAmount.ether(JSBI.BigInt(typedValueParsed));}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}var BAD_RECIPIENT_ADDRESSES=[factory,// v2 factory\nrouterv2// v2 router 02\n];/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */function involvesAddress(trade,checksummedAddress){return trade.route.path.some(function(token){return token.address===checksummedAddress;})||trade.route.pairs.some(function(pair){return pair.liquidityToken.address===checksummedAddress;});}// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(){var _ref,_ref2,_currencyBalances,_currencies;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,inputCurrencyId=_useSwapState[Field.INPUT].currencyId,outputCurrencyId=_useSwapState[Field.OUTPUT].currencyId,recipient=_useSwapState.recipient;var inputCurrency=useCurrency(inputCurrencyId);var outputCurrency=useCurrency(outputCurrencyId);var recipientLookup=useENS(recipient!==null&&recipient!==void 0?recipient:undefined);var to=(_ref=recipient===null?account:recipientLookup.address)!==null&&_ref!==void 0?_ref:null;var relevantTokenBalances=useCurrencyBalances(account!==null&&account!==void 0?account:undefined,[inputCurrency!==null&&inputCurrency!==void 0?inputCurrency:undefined,outputCurrency!==null&&outputCurrency!==void 0?outputCurrency:undefined]);var isExactIn=independentField===Field.INPUT;var parsedAmount=tryParseAmount(typedValue,(_ref2=isExactIn?inputCurrency:outputCurrency)!==null&&_ref2!==void 0?_ref2:undefined);var bestTradeExactIn=useTradeExactIn(isExactIn?parsedAmount:undefined,outputCurrency!==null&&outputCurrency!==void 0?outputCurrency:undefined);var bestTradeExactOut=useTradeExactOut(inputCurrency!==null&&inputCurrency!==void 0?inputCurrency:undefined,!isExactIn?parsedAmount:undefined);var v2Trade=isExactIn?bestTradeExactIn:bestTradeExactOut;var currencyBalances=(_currencyBalances={},_defineProperty(_currencyBalances,Field.INPUT,relevantTokenBalances[0]),_defineProperty(_currencyBalances,Field.OUTPUT,relevantTokenBalances[1]),_currencyBalances);var currencies=(_currencies={},_defineProperty(_currencies,Field.INPUT,inputCurrency!==null&&inputCurrency!==void 0?inputCurrency:undefined),_defineProperty(_currencies,Field.OUTPUT,outputCurrency!==null&&outputCurrency!==void 0?outputCurrency:undefined),_currencies);var inputError;if(!account){inputError=t('connectWallet');}if(!parsedAmount){var _inputError;inputError=(_inputError=inputError)!==null&&_inputError!==void 0?_inputError:t('enterAnAmount');}if(!currencies[Field.INPUT]||!currencies[Field.OUTPUT]){var _inputError2;inputError=(_inputError2=inputError)!==null&&_inputError2!==void 0?_inputError2:t('selectAToken');}var formattedTo=isAddress(to);if(!to||!formattedTo){var _inputError3;inputError=(_inputError3=inputError)!==null&&_inputError3!==void 0?_inputError3:t('enterARecipient');}else{if(BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo)!==-1||bestTradeExactIn&&involvesAddress(bestTradeExactIn,formattedTo)||bestTradeExactOut&&involvesAddress(bestTradeExactOut,formattedTo)){var _inputError4;inputError=(_inputError4=inputError)!==null&&_inputError4!==void 0?_inputError4:t('invalidRecipt');}}var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];var slippageAdjustedAmounts=v2Trade&&allowedSlippage&&computeSlippageAdjustedAmounts(v2Trade,allowedSlippage);// compare input balance to max input based on version\nvar _ref3=[currencyBalances[Field.INPUT],slippageAdjustedAmounts?slippageAdjustedAmounts[Field.INPUT]:null],balanceIn=_ref3[0],amountIn=_ref3[1];if(balanceIn&&amountIn&&balanceIn.lessThan(amountIn)){inputError='Insufficient '+amountIn.currency.symbol+' balance';}return{currencies:currencies,currencyBalances:currencyBalances,parsedAmount:parsedAmount,v2Trade:v2Trade!==null&&v2Trade!==void 0?v2Trade:undefined,inputError:inputError};}function parseCurrencyFromURLParameter(urlParam){var _ETH;if(typeof urlParam==='string'){var valid=isAddress(urlParam);if(valid)return valid;if(urlParam.toUpperCase()==='ETH')return'ETH';if(valid===false)return'ETH';}return(_ETH='ETH')!==null&&_ETH!==void 0?_ETH:'';}function parseTokenAmountURLParameter(urlParam){return typeof urlParam==='string'&&!isNaN(parseFloat(urlParam))?urlParam:'';}function parseIndependentFieldURLParameter(urlParam){return typeof urlParam==='string'&&urlParam.toLowerCase()==='output'?Field.OUTPUT:Field.INPUT;}var ENS_NAME_REGEX=/^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/;var ADDRESS_REGEX=/^0x[a-fA-F0-9]{40}$/;function validatedRecipient(recipient){if(typeof recipient!=='string')return null;var address=isAddress(recipient);if(address)return address;if(ENS_NAME_REGEX.test(recipient))return recipient;if(ADDRESS_REGEX.test(recipient))return recipient;return null;}export function queryParametersToSwapState(parsedQs){var _ref4;var inputCurrency=parseCurrencyFromURLParameter(parsedQs.inputCurrency);var outputCurrency=parseCurrencyFromURLParameter(parsedQs.outputCurrency);if(inputCurrency===outputCurrency){if(typeof parsedQs.outputCurrency==='string'){inputCurrency='';}else{outputCurrency='';}}var recipient=validatedRecipient(parsedQs.recipient);return _ref4={},_defineProperty(_ref4,Field.INPUT,{currencyId:inputCurrency}),_defineProperty(_ref4,Field.OUTPUT,{currencyId:outputCurrency}),_defineProperty(_ref4,\"typedValue\",parseTokenAmountURLParameter(parsedQs.exactAmount)),_defineProperty(_ref4,\"independentField\",parseIndependentFieldURLParameter(parsedQs.exactField)),_defineProperty(_ref4,\"recipient\",recipient),_ref4;}// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch(){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var dispatch=useDispatch();var parsedQs=useParsedQueryString();var _useState=useState(),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];useEffect(function(){if(!chainId)return;var parsed=queryParametersToSwapState(parsedQs);dispatch(replaceSwapState({typedValue:parsed.typedValue,field:parsed.independentField,inputCurrencyId:parsed[Field.INPUT].currencyId,outputCurrencyId:parsed[Field.OUTPUT].currencyId,recipient:parsed.recipient}));setResult({inputCurrencyId:parsed[Field.INPUT].currencyId,outputCurrencyId:parsed[Field.OUTPUT].currencyId});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[dispatch,chainId]);return result;}","map":{"version":3,"sources":["C:/Users/marin/Desktop/bananaswap/src/state/swap/hooks.ts"],"names":["useENS","parseUnits","CurrencyAmount","DEV","JSBI","Token","TokenAmount","useCallback","useEffect","useState","useDispatch","useSelector","useActiveWeb3React","useCurrency","useTradeExactIn","useTradeExactOut","useParsedQueryString","isAddress","useCurrencyBalances","Field","replaceSwapState","selectCurrency","setRecipient","switchCurrencies","typeInput","useUserSlippageTolerance","computeSlippageAdjustedAmounts","useTranslation","factory","routerv2","useSwapState","state","swap","useSwapActionHandlers","dispatch","onCurrencySelection","field","currency","currencyId","address","onSwitchTokens","onUserInput","typedValue","onChangeRecipient","recipient","tryParseAmount","value","undefined","typedValueParsed","decimals","toString","BigInt","ether","error","console","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","route","path","some","token","pairs","pair","liquidityToken","useDerivedSwapInfo","account","t","independentField","inputCurrencyId","INPUT","outputCurrencyId","OUTPUT","inputCurrency","outputCurrency","recipientLookup","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","bestTradeExactOut","v2Trade","currencyBalances","currencies","inputError","formattedTo","indexOf","allowedSlippage","slippageAdjustedAmounts","balanceIn","amountIn","lessThan","symbol","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","parseTokenAmountURLParameter","isNaN","parseFloat","parseIndependentFieldURLParameter","toLowerCase","ENS_NAME_REGEX","ADDRESS_REGEX","validatedRecipient","test","queryParametersToSwapState","parsedQs","exactAmount","exactField","useDefaultsFromURLSearch","chainId","result","setResult","parsed"],"mappings":"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","sourcesContent":["import useENS from '../../hooks/useENS'\r\nimport { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, DEV, JSBI, Token, TokenAmount, Trade } from 'moonbeamswap'\r\nimport { ParsedQs } from 'qs'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades'\r\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\r\nimport { isAddress } from '../../utils'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\nimport { SwapState } from './reducer'\r\nimport { useUserSlippageTolerance } from '../user/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { factory, routerv2 } from '../../moonbase_address.json'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n  return useSelector<AppState, AppState['swap']>(state => state.swap)\r\n}\r\n\r\nexport function useSwapActionHandlers(): {\r\n  onCurrencySelection: (field: Field, currency: Currency) => void\r\n  onSwitchTokens: () => void\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const onCurrencySelection = useCallback(\r\n    (field: Field, currency: Currency) => {\r\n      dispatch(\r\n        selectCurrency({\r\n          field,\r\n          currencyId: currency instanceof Token ? currency.address : currency === DEV ? 'ETH' : ''\r\n        })\r\n      )\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  const onSwitchTokens = useCallback(() => {\r\n    dispatch(switchCurrencies())\r\n  }, [dispatch])\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  const onChangeRecipient = useCallback(\r\n    (recipient: string | null) => {\r\n      dispatch(setRecipient({ recipient }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return {\r\n    onSwitchTokens,\r\n    onCurrencySelection,\r\n    onUserInput,\r\n    onChangeRecipient\r\n  }\r\n}\r\n\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\r\n  factory, // v2 factory\r\n  routerv2 // v2 router 02\r\n]\r\n\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\r\n  return (\r\n    trade.route.path.some(token => token.address === checksummedAddress) ||\r\n    trade.route.pairs.some(pair => pair.liquidityToken.address === checksummedAddress)\r\n  )\r\n}\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmount: CurrencyAmount | undefined\r\n  v2Trade: Trade | undefined\r\n  inputError?: string\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId)\r\n  const outputCurrency = useCurrency(outputCurrencyId)\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\r\n    inputCurrency ?? undefined,\r\n    outputCurrency ?? undefined\r\n  ])\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\r\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\r\n\r\n  const currencyBalances = {\r\n    [Field.INPUT]: relevantTokenBalances[0],\r\n    [Field.OUTPUT]: relevantTokenBalances[1]\r\n  }\r\n\r\n  const currencies: { [field in Field]?: Currency } = {\r\n    [Field.INPUT]: inputCurrency ?? undefined,\r\n    [Field.OUTPUT]: outputCurrency ?? undefined\r\n  }\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = t('connectWallet')\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    inputError = inputError ?? t('enterAnAmount')\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? t('selectAToken')\r\n  }\r\n\r\n  const formattedTo = isAddress(to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? t('enterARecipient')\r\n  } else {\r\n    if (\r\n      BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n      (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n      (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\r\n    ) {\r\n      inputError = inputError ?? t('invalidRecipt')\r\n    }\r\n  }\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [\r\n    currencyBalances[Field.INPUT],\r\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null\r\n  ]\r\n\r\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n    inputError = 'Insufficient ' + amountIn.currency.symbol + ' balance'\r\n  }\r\n\r\n  return {\r\n    currencies,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    v2Trade: v2Trade ?? undefined,\r\n    inputError\r\n  }\r\n}\r\n\r\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\r\n  if (typeof urlParam === 'string') {\r\n    const valid = isAddress(urlParam)\r\n    if (valid) return valid\r\n    if (urlParam.toUpperCase() === 'ETH') return 'ETH'\r\n    if (valid === false) return 'ETH'\r\n  }\r\n  return 'ETH' ?? ''\r\n}\r\n\r\nfunction parseTokenAmountURLParameter(urlParam: any): string {\r\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\r\n}\r\n\r\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\r\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\r\n}\r\n\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nfunction validatedRecipient(recipient: any): string | null {\r\n  if (typeof recipient !== 'string') return null\r\n  const address = isAddress(recipient)\r\n  if (address) return address\r\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\r\n  if (ADDRESS_REGEX.test(recipient)) return recipient\r\n  return null\r\n}\r\n\r\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\r\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\r\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\r\n  if (inputCurrency === outputCurrency) {\r\n    if (typeof parsedQs.outputCurrency === 'string') {\r\n      inputCurrency = ''\r\n    } else {\r\n      outputCurrency = ''\r\n    }\r\n  }\r\n\r\n  const recipient = validatedRecipient(parsedQs.recipient)\r\n\r\n  return {\r\n    [Field.INPUT]: {\r\n      currencyId: inputCurrency\r\n    },\r\n    [Field.OUTPUT]: {\r\n      currencyId: outputCurrency\r\n    },\r\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n    recipient\r\n  }\r\n}\r\n\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch():\r\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\r\n  | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const parsedQs = useParsedQueryString()\r\n  const [result, setResult] = useState<\r\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return\r\n    const parsed = queryParametersToSwapState(parsedQs)\r\n\r\n    dispatch(\r\n      replaceSwapState({\r\n        typedValue: parsed.typedValue,\r\n        field: parsed.independentField,\r\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n        recipient: parsed.recipient\r\n      })\r\n    )\r\n\r\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, chainId])\r\n\r\n  return result\r\n}\r\n"]},"metadata":{},"sourceType":"module"}